{"ast":null,"code":"import _slicedToArray from \"D:\\\\Studium\\\\Bachelor\\\\WebApp\\\\visapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Studium\\\\Bachelor\\\\WebApp\\\\visapp\\\\src\\\\components\\\\charts\\\\LineChart.jsx\";\nimport React, { useRef, useEffect, useState } from \"react\";\nimport { select } from 'd3';\nimport '../../styles/charts.css'; //dynamische Daten\n\nfunction LineCharts() {\n  const _useState = useState([25, 30, 45, 60, 20]),\n        _useState2 = _slicedToArray(_useState, 2),\n        data = _useState2[0],\n        setData = _useState2[1];\n\n  const svgRef = useRef(); //Wird einmal aufgerufen, wenn DOM-Element gerendert wird, und wenn sich Elemente im Array verändern\n\n  useEffect(() => {\n    const svg = select(svgRef.current);\n    svg.selectAll('circle').data(data).join('circle').attr(\"r\", value => value).attr('cx', value => value * 2).attr(\"cy\", value => value * 2).attr(\"stroke\", 'red');\n  }, [data]);\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"svg\", {\n    ref: svgRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: () => setData(data.map(value => value + 5)),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"Update data\"), React.createElement(\"button\", {\n    onClick: () => setData(data.filter(value => value < 35)),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"Filter data\"));\n}\n\nexport default LineCharts;","map":{"version":3,"sources":["D:/Studium/Bachelor/WebApp/visapp/src/components/charts/LineChart.jsx"],"names":["React","useRef","useEffect","useState","select","LineCharts","data","setData","svgRef","svg","current","selectAll","join","attr","value","map","filter"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,SAASC,MAAT,QAAuB,IAAvB;AACA,OAAO,yBAAP,C,CAEA;;AAEA,SAASC,UAAT,GAAsB;AAAA,oBACKF,QAAQ,CAAC,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,CAAD,CADb;AAAA;AAAA,QACZG,IADY;AAAA,QACNC,OADM;;AAEnB,QAAMC,MAAM,GAAGP,MAAM,EAArB,CAFmB,CAInB;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACb,UAAMO,GAAG,GAAGL,MAAM,CAACI,MAAM,CAACE,OAAR,CAAlB;AACAD,IAAAA,GAAG,CACFE,SADD,CACW,QADX,EAECL,IAFD,CAEMA,IAFN,EAGCM,IAHD,CAGM,QAHN,EAICC,IAJD,CAIM,GAJN,EAIWC,KAAK,IAAIA,KAJpB,EAKCD,IALD,CAKM,IALN,EAKYC,KAAK,IAAIA,KAAK,GAAG,CAL7B,EAMCD,IAND,CAMM,IANN,EAMYC,KAAK,IAAIA,KAAK,GAAG,CAN7B,EAOCD,IAPD,CAOM,QAPN,EAOgB,KAPhB;AAQF,GAVQ,EAUN,CAACP,IAAD,CAVM,CAAT;AAWA,SAAO,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,GAAG,EAAEE,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE;AAAQ,IAAA,OAAO,EAAE,MAAMD,OAAO,CAACD,IAAI,CAACS,GAAL,CAASD,KAAK,IAAIA,KAAK,GAAG,CAA1B,CAAD,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAHF,EAME;AAAQ,IAAA,OAAO,EAAE,MAAMP,OAAO,CAACD,IAAI,CAACU,MAAL,CAAYF,KAAK,IAAIA,KAAK,GAAG,EAA7B,CAAD,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBANF,CAAP;AAUF;;AAED,eAAeT,UAAf","sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\r\nimport { select } from 'd3';\r\nimport '../../styles/charts.css'\r\n\r\n//dynamische Daten\r\n\r\nfunction LineCharts() {\r\n   const [data, setData] = useState([25, 30, 45, 60, 20]);\r\n   const svgRef = useRef();\r\n   \r\n   //Wird einmal aufgerufen, wenn DOM-Element gerendert wird, und wenn sich Elemente im Array verändern\r\n   useEffect(() => {\r\n      const svg = select(svgRef.current);\r\n      svg\r\n      .selectAll('circle')\r\n      .data(data)\r\n      .join('circle')\r\n      .attr(\"r\", value => value)\r\n      .attr('cx', value => value * 2)\r\n      .attr(\"cy\", value => value * 2)\r\n      .attr(\"stroke\", 'red');\r\n   }, [data]);\r\n   return <React.Fragment>\r\n            <svg ref={svgRef}></svg>\r\n            <br/>\r\n            <button onClick={() => setData(data.map(value => value + 5))}>\r\n              Update data\r\n            </button>\r\n            <button onClick={() => setData(data.filter(value => value < 35))}>\r\n              Filter data\r\n            </button>\r\n         </React.Fragment>\r\n}\r\n\r\nexport default LineCharts;"]},"metadata":{},"sourceType":"module"}