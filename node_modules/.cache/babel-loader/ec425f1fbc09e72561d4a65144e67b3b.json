{"ast":null,"code":"var _jsxFileName = \"D:\\\\Studium\\\\Bachelor\\\\WebApp\\\\visapp\\\\src\\\\components\\\\charts\\\\LineChart.jsx\";\nimport React from \"react\";\nimport * as d3 from \"d3\";\nimport { connect } from \"react-redux\";\nimport { setCurrentBarRed } from \"../../actions\";\nimport { setCurrentBarBlue } from \"../../actions\";\nimport data from \"../../data.json\";\n\nclass BarChart extends React.Component {\n  componentDidMount() {\n    this.drawBarChart();\n  }\n\n  drawBarChart() {\n    var margin = {\n      top: 10,\n      right: 30,\n      bottom: 30,\n      left: 60\n    },\n        width = 460 - margin.left - margin.right,\n        height = 400 - margin.top - margin.bottom;\n    console.log(width); // append the svg object to the body of the page\n\n    var svg = d3.select(\"canvas\").append(\"svg\").attr(\"width\", width + margin.left + margin.right).attr(\"height\", height + margin.top + margin.bottom).append(\"g\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\"); //Read the data\n\n    d3.csv(\"https://raw.githubusercontent.com/holtzy/data_to_viz/master/Example_dataset/3_TwoNumOrdered_comma.csv\", // When reading the csv, I must format variables:\n    function (d) {\n      return {\n        date: d3.timeParse(\"%Y-%m-%d\")(d.date),\n        value: d.value\n      };\n    }, // Now I can use this dataset:\n    function (data) {\n      // Add X axis --> it is a date format\n      var x = d3.scaleTime().domain(d3.extent(data, function (d) {\n        return d.date;\n      })).range([0, width]);\n      svg.append(\"g\").attr(\"transform\", \"translate(0,\" + height + \")\").call(d3.axisBottom(x)); // Add Y axis\n\n      var y = d3.scaleLinear().domain([0, d3.max(data, function (d) {\n        return +d.value;\n      })]).range([height, 0]);\n      svg.append(\"g\").call(d3.axisLeft(y)); // Add the line\n\n      svg.append(\"path\").datum(data).attr(\"fill\", \"none\").attr(\"stroke\", \"steelblue\").attr(\"stroke-width\", 1.5).attr(\"d\", d3.line().x(function (d) {\n        return x(d.date);\n      }).y(function (d) {\n        return y(d.value);\n      }));\n    });\n  }\n\n  componentDidUpdate() {}\n\n  render() {\n    return React.createElement(\"div\", {\n      ref: \"canvas\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default BarChart;\n/*class BarChart extends Component {\r\n  componentDidMount() {\r\n    this.drawChart(); //D3!\r\n  }\r\n\r\n  drawChart() {\r\n    const data = [12, 5, 6, 6, 9, 10];\r\n    var w;\r\n    var h;\r\n    const svg = d3.select(\"body\")\r\n    .append(\"svg\")\r\n    .attr(\"width\", w)\r\n    .attr(\"height\", h)\r\n    .style(\"margin-left\", 100);\r\n                  \r\n    svg.selectAll(\"rect\")\r\n      .data(data)\r\n      .enter()\r\n      .append(\"rect\")\r\n      .attr(\"x\", (d, i) => i * 70)\r\n      .attr(\"y\", (d, i) => h - 10 * d)\r\n      .attr(\"width\", 65)\r\n      .attr(\"height\", (d, i) => d * 10)\r\n      .attr(\"fill\", \"green\")\r\n  }\r\n        \r\n  render(){\r\n    return <div id={\"#\" + this.props.id}></div>\r\n  }\r\n}\r\n\r\nexport default BarChart; */","map":{"version":3,"sources":["D:/Studium/Bachelor/WebApp/visapp/src/components/charts/LineChart.jsx"],"names":["React","d3","connect","setCurrentBarRed","setCurrentBarBlue","data","BarChart","Component","componentDidMount","drawBarChart","margin","top","right","bottom","left","width","height","console","log","svg","select","append","attr","csv","d","date","timeParse","value","x","scaleTime","domain","extent","range","call","axisBottom","y","scaleLinear","max","axisLeft","datum","line","componentDidUpdate","render"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport * as d3 from \"d3\";\r\nimport { connect } from \"react-redux\";\r\nimport { setCurrentBarRed } from \"../../actions\";\r\nimport { setCurrentBarBlue } from \"../../actions\";\r\nimport data from \"../../data.json\";\r\n\r\nclass BarChart extends React.Component {\r\n  \r\n  componentDidMount() {\r\n   this.drawBarChart();\r\n  }\r\n\r\n  drawBarChart()  {\r\n    var margin = {top: 10, right: 30, bottom: 30, left: 60},\r\n    width = 460 - margin.left - margin.right,\r\n    height = 400 - margin.top - margin.bottom;\r\n    console.log(width);\r\n// append the svg object to the body of the page\r\nvar svg = d3.select(\"canvas\")\r\n  .append(\"svg\")\r\n    .attr(\"width\", width + margin.left + margin.right)\r\n    .attr(\"height\", height + margin.top + margin.bottom)\r\n  .append(\"g\")\r\n    .attr(\"transform\",\r\n          \"translate(\" + margin.left + \",\" + margin.top + \")\");\r\n\r\n//Read the data\r\nd3.csv(\"https://raw.githubusercontent.com/holtzy/data_to_viz/master/Example_dataset/3_TwoNumOrdered_comma.csv\",\r\n\r\n  // When reading the csv, I must format variables:\r\n  function(d){\r\n    return { date : d3.timeParse(\"%Y-%m-%d\")(d.date), value : d.value }\r\n  },\r\n\r\n  // Now I can use this dataset:\r\n  function(data) {\r\n\r\n    // Add X axis --> it is a date format\r\n    var x = d3.scaleTime()\r\n      .domain(d3.extent(data, function(d) { return d.date; }))\r\n      .range([ 0, width ]);\r\n    svg.append(\"g\")\r\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n      .call(d3.axisBottom(x));\r\n\r\n    // Add Y axis\r\n    var y = d3.scaleLinear()\r\n      .domain([0, d3.max(data, function(d) { return +d.value; })])\r\n      .range([ height, 0 ]);\r\n    svg.append(\"g\")\r\n      .call(d3.axisLeft(y));\r\n\r\n    // Add the line\r\n    svg.append(\"path\")\r\n      .datum(data)\r\n      .attr(\"fill\", \"none\")\r\n      .attr(\"stroke\", \"steelblue\")\r\n      .attr(\"stroke-width\", 1.5)\r\n      .attr(\"d\", d3.line()\r\n        .x(function(d) { return x(d.date) })\r\n        .y(function(d) { return y(d.value) })\r\n        )\r\n\r\n})\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    \r\n  \r\n\r\n  }\r\n\r\n  render()\r\n   { return <div ref=\"canvas\"></div> }\r\n}\r\nexport default BarChart;\r\n\r\n\r\n/*class BarChart extends Component {\r\n  componentDidMount() {\r\n    this.drawChart(); //D3!\r\n  }\r\n\r\n  drawChart() {\r\n    const data = [12, 5, 6, 6, 9, 10];\r\n    var w;\r\n    var h;\r\n    const svg = d3.select(\"body\")\r\n    .append(\"svg\")\r\n    .attr(\"width\", w)\r\n    .attr(\"height\", h)\r\n    .style(\"margin-left\", 100);\r\n                  \r\n    svg.selectAll(\"rect\")\r\n      .data(data)\r\n      .enter()\r\n      .append(\"rect\")\r\n      .attr(\"x\", (d, i) => i * 70)\r\n      .attr(\"y\", (d, i) => h - 10 * d)\r\n      .attr(\"width\", 65)\r\n      .attr(\"height\", (d, i) => d * 10)\r\n      .attr(\"fill\", \"green\")\r\n  }\r\n        \r\n  render(){\r\n    return <div id={\"#\" + this.props.id}></div>\r\n  }\r\n}\r\n\r\nexport default BarChart; */"]},"metadata":{},"sourceType":"module"}