{"ast":null,"code":"var _jsxFileName = \"D:\\\\Studium\\\\Bachelor\\\\WebApp\\\\visapp\\\\src\\\\components\\\\charts\\\\LineChart.jsx\";\nimport React, { useRef, useEffect } from \"react\";\nimport { select, line, curveCardinal, axisBottom, axisLeft, scaleTime, scaleLinear, min, max, entries } from 'd3';\nimport '../../styles/charts.css';\nimport useResizeObserver from './useReziseObserver';\nimport Tooltip from \"./tooltips\";\n\nfunction LineCharts({\n  data,\n  property,\n  colorline,\n  colorline2,\n  value\n}) {\n  const svgRef = useRef();\n  const wrapperRef = useRef();\n  const dimensions = useResizeObserver(wrapperRef);\n  useEffect(() => {\n    var value1 = \"Alle\";\n    var value2 = \"Breitband\";\n    const svg = select(svgRef.current);\n    var filterAlle;\n    var filterBB;\n    var indicator;\n    if (!dimensions) return; //Daten filtern\n\n    var filtered = data.filter(a => a.geo == property);\n\n    for (var i = 0; i < filtered.length; i++) {\n      var filterAlle = filtered[i].alle;\n    }\n\n    for (var i = 0; i < filtered.length; i++) {\n      var filterBB = filtered[i].bb;\n    }\n\n    if (value == \"mobil\") {\n      for (var i = 0; i < filtered.length; i++) {\n        var filterAlle = filtered[i].time;\n      }\n    }\n\n    var valesAlle = entries(filterAlle);\n    var valesBB = entries(filterBB); //Sortieren nach Jahreszahl\n\n    const minDate = new Date(min(valesAlle, value => value.key));\n    const maxDate = new Date(max(valesAlle, value => value.key)); // console.log(minDate);\n    // console.log(maxDate);\n\n    const xScale = scaleTime().domain([minDate - 2.628e+9, maxDate]).range([-1, dimensions.width]);\n    const yScale = scaleLinear().domain([0, 100]).range([dimensions.height, 0]);\n    const yAxis = axisLeft(yScale).tickSize(0);\n    svg.select('.y-axis').style('color', 'grey').style('font-size', '14').call(yAxis);\n    const xAxis = axisBottom(xScale);\n    svg.select(\".x-axis\").join(\".x-axis\").style('transform', `translateY(${dimensions.height}px)`).style('color', 'grey').style('font-size', '14').style('stroke-width', 1).call(xAxis); //Grids\n\n    var grids = svg.select(\"g\").append(\"g\").join(\"g\").attr(\"class\", \"grid\").attr('transform', 'translate(0,' + -dimensions.height + ')').call(axisLeft(yScale).tickSize(-dimensions.width).tickFormat(\"\")); //X-Achsen-Beschriftung\n\n    svg.select(\"text\").join(\"text\").attr(\"text-anchor\", \"end\").attr(\"fill\", \"grey\").attr(\"x\", dimensions.width).attr(\"y\", +dimensions.height / 8).attr(\"font-weight\", \"bold\").text(\"Jahr\"); //Y-Achsen-Beschrifzung\n\n    svg.append(\"text\").attr(\"text-anchor\", \"end\").attr(\"transform\", \"rotate(-90)\").attr(\"fill\", \"grey\").attr(\"y\", -50).attr(\"x\", 0).text(\"Prozent\"); //Lines\n\n    const myLine = line().x(d => xScale(new Date(d.key))).y(d => yScale(d.value)).defined(d => d.value != 0).curve(curveCardinal); //herausfiltern der fehlenden werte\n\n    var filteredAlle = valesAlle.filter(myLine.defined());\n    var filteredBB = valesBB.filter(myLine.defined());\n    var lineAlle1 = svg.selectAll(\".newline\").data([filteredAlle]).join(\"path\").attr(\"class\", \"newline\").attr(\"d\", (value, index) => myLine(value)).transition().attr(\"fill\", \"none\").attr(\"stroke\", colorline).attr(\"stroke-dasharray\", \"3, 3\");\n    var lineAlle2 = svg.selectAll(\".newerline\").data([valesAlle]).join(\"path\").attr(\"class\", \"newerline\").attr(\"d\", (value, index) => myLine(value)).transition().attr(\"fill\", \"none\").attr(\"stroke\", colorline).attr(\"stroke-width\", \"5\").attr(\"stroke-linecap\", \"round\");\n    var lineBB1 = svg.selectAll(\".newlineBB\").data([filteredBB]).join(\"path\").attr(\"class\", \"newlineBB\").attr(\"d\", (value, index) => myLine(value)).transition().attr(\"fill\", \"none\").attr(\"stroke\", colorline2).attr(\"stroke-dasharray\", \"3, 3\").attr(\"opacity\", \"0\");\n    var lineBB2 = svg.selectAll(\".newerlineBB\").data([valesBB]).join(\"path\").attr(\"class\", \"newerlineBB\").attr(\"d\", (value, index) => myLine(value)).transition().attr(\"fill\", \"none\").attr(\"stroke\", colorline2).attr(\"stroke-width\", \"5\").attr(\"stroke-linecap\", \"round\").attr(\"opacity\", \"0\");\n\n    if (value == \"BB\") {\n      lineBB1.attr(\"opacity\", \"1\");\n      lineBB2.attr(\"opacity\", \"1\");\n      indicator = \"exist\";\n    } else {\n      console.log(\"noooo\");\n    }\n\n    Tooltip(svg, valesAlle, valesBB, colorline2, colorline, dimensions, xScale, yScale, value1, value2, indicator);\n  }, [data, dimensions, property]);\n  return React.createElement(\"div\", {\n    ref: wrapperRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, React.createElement(\"svg\", {\n    ref: svgRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }, React.createElement(\"g\", {\n    className: \"x-axis\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }), React.createElement(\"g\", {\n    className: \"y-axis\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  })));\n}\n\nexport default LineCharts;","map":{"version":3,"sources":["D:/Studium/Bachelor/WebApp/visapp/src/components/charts/LineChart.jsx"],"names":["React","useRef","useEffect","select","line","curveCardinal","axisBottom","axisLeft","scaleTime","scaleLinear","min","max","entries","useResizeObserver","Tooltip","LineCharts","data","property","colorline","colorline2","value","svgRef","wrapperRef","dimensions","value1","value2","svg","current","filterAlle","filterBB","indicator","filtered","filter","a","geo","i","length","alle","bb","time","valesAlle","valesBB","minDate","Date","key","maxDate","xScale","domain","range","width","yScale","height","yAxis","tickSize","style","call","xAxis","join","grids","append","attr","tickFormat","text","myLine","x","d","y","defined","curve","filteredAlle","filteredBB","lineAlle1","selectAll","index","transition","lineAlle2","lineBB1","lineBB2","console","log"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect} from \"react\";\r\nimport { select, line, curveCardinal, axisBottom, axisLeft, scaleTime, scaleLinear, min, max,entries} from 'd3';\r\nimport '../../styles/charts.css'\r\nimport useResizeObserver from './useReziseObserver'\r\nimport Tooltip from \"./tooltips\";\r\n\r\nfunction LineCharts({ data, property, colorline, colorline2, value}) {\r\n   const svgRef = useRef();\r\n   const wrapperRef = useRef();\r\n   const dimensions = useResizeObserver(wrapperRef);\r\n\r\n   useEffect(() => {\r\n      var value1 = \"Alle\"\r\n      var value2 = \"Breitband\"\r\n      const svg = select(svgRef.current);\r\n      var filterAlle;\r\n      var filterBB;\r\n      var indicator;\r\n\r\n      if(!dimensions) return;\r\n      //Daten filtern\r\n         var filtered = data.filter(a=>a.geo==property); \r\n\r\n            for(var i = 0; i < filtered.length; i ++) {\r\n             var filterAlle = filtered[i].alle; \r\n            }\r\n\r\n            for(var i = 0; i < filtered.length; i ++) {\r\n               var filterBB = filtered[i].bb; \r\n                }\r\n            if(value == \"mobil\") {\r\n               for(var i = 0; i < filtered.length; i ++) {\r\n                  var filterAlle = filtered[i].time; \r\n                   }\r\n            }\r\n            var valesAlle = entries(filterAlle);\r\n            var valesBB = entries(filterBB);\r\n\r\n      //Sortieren nach Jahreszahl\r\n      const minDate = new Date (min(valesAlle, value => value.key));\r\n      const maxDate = new Date (max(valesAlle, value => value.key));     \r\n\r\n     // console.log(minDate);\r\n     // console.log(maxDate);\r\n       \r\n\r\n      const xScale = scaleTime()\r\n          .domain([minDate - 2.628e+9,maxDate])   \r\n          .range([-1, dimensions.width]) \r\n        \r\n      const yScale =  scaleLinear()\r\n            .domain([0, 100])\r\n             .range([dimensions.height, 0]);\r\n\r\n      \r\n      const yAxis = axisLeft(yScale).tickSize(0);   \r\n      svg\r\n      .select('.y-axis')\r\n      .style('color', 'grey')\r\n      .style('font-size', '14')\r\n      .call(yAxis);\r\n\r\n     const xAxis = axisBottom(xScale)\r\n     svg\r\n      .select(\".x-axis\")\r\n      .join(\".x-axis\")\r\n      .style('transform', `translateY(${dimensions.height}px)`)\r\n      .style('color', 'grey')\r\n      .style('font-size', '14')\r\n      .style('stroke-width', 1)\r\n      .call(xAxis);\r\n\r\n      //Grids\r\n      var grids = svg.select(\"g\").append(\"g\")\r\n         .join(\"g\")\r\n         .attr(\"class\", \"grid\")\r\n         .attr('transform', 'translate(0,' + -dimensions.height + ')')\r\n         .call(axisLeft(yScale)\r\n            .tickSize(-dimensions.width)\r\n            .tickFormat(\"\")\r\n            )\r\n      \r\n      //X-Achsen-Beschriftung\r\n      svg.select(\"text\").join(\"text\")\r\n      .attr(\"text-anchor\", \"end\")\r\n      .attr(\"fill\", \"grey\")\r\n      .attr(\"x\", dimensions.width)\r\n       .attr(\"y\", + dimensions.height/ 8)\r\n       .attr(\"font-weight\", \"bold\")\r\n       .text(\"Jahr\");      \r\n      //Y-Achsen-Beschrifzung\r\n      svg.append(\"text\")\r\n      .attr(\"text-anchor\", \"end\")\r\n      .attr(\"transform\", \"rotate(-90)\")\r\n      .attr(\"fill\", \"grey\")\r\n      .attr(\"y\", - 50)\r\n      .attr(\"x\", 0)\r\n      .text(\"Prozent\")\r\n\r\n    \r\n    //Lines\r\n      const myLine = line()\r\n      .x((d)=> (xScale(new Date(d.key))))\r\n      .y((d)=> (yScale(d.value)))\r\n      .defined((d)=> d.value != 0)\r\n      .curve(curveCardinal);\r\n    \r\n      //herausfiltern der fehlenden werte\r\n      var filteredAlle = valesAlle.filter(myLine.defined());\r\n      var filteredBB = valesBB.filter(myLine.defined());\r\n      \r\n         var lineAlle1 = svg \r\n         .selectAll(\".newline\")\r\n         .data([filteredAlle])\r\n         .join(\"path\")\r\n         .attr(\"class\", \"newline\")\r\n         .attr(\"d\", (value, index) => myLine(value))\r\n         .transition()\r\n         .attr(\"fill\", \"none\")\r\n         .attr(\"stroke\", colorline)\r\n         .attr(\"stroke-dasharray\", (\"3, 3\"))\r\n        \r\n         var lineAlle2 =    svg\r\n         .selectAll(\".newerline\")\r\n         .data([valesAlle])\r\n         .join(\"path\")\r\n         .attr(\"class\", \"newerline\")\r\n         .attr(\"d\", (value, index) => myLine(value))\r\n         .transition()\r\n         .attr(\"fill\", \"none\")\r\n         .attr(\"stroke\", colorline)\r\n         .attr(\"stroke-width\", \"5\" )\r\n         .attr(\"stroke-linecap\", \"round\")\r\n\r\n         var lineBB1 = svg\r\n         .selectAll(\".newlineBB\")\r\n         .data([filteredBB])\r\n         .join(\"path\")\r\n         .attr(\"class\", \"newlineBB\")\r\n         .attr(\"d\", (value, index) => myLine(value))\r\n         .transition()\r\n         .attr(\"fill\", \"none\")\r\n         .attr(\"stroke\", colorline2)\r\n         .attr(\"stroke-dasharray\", (\"3, 3\"))\r\n         .attr(\"opacity\", \"0\")    \r\n        \r\n         var lineBB2 = svg\r\n         .selectAll(\".newerlineBB\")\r\n         .data([valesBB])\r\n         .join(\"path\")\r\n         .attr(\"class\", \"newerlineBB\")\r\n         .attr(\"d\", (value, index) => myLine(value))\r\n         .transition()\r\n         .attr(\"fill\", \"none\")\r\n         .attr(\"stroke\", colorline2)\r\n         .attr(\"stroke-width\", \"5\" )\r\n         .attr(\"stroke-linecap\", \"round\")\r\n         .attr(\"opacity\", \"0\")\r\n\r\n         if(value == \"BB\"){\r\n            lineBB1.attr(\"opacity\", \"1\")\r\n            lineBB2.attr(\"opacity\", \"1\")\r\n            indicator = \"exist\";\r\n         }\r\n         else{\r\n            console.log(\"noooo\")\r\n         }\r\n\r\n         Tooltip(svg, valesAlle, valesBB,  colorline2, colorline, dimensions, xScale, yScale, value1, value2, indicator);\r\n\r\n   }, [data, dimensions, property]);\r\n   return (\r\n         <div ref={wrapperRef}>\r\n            <svg ref={svgRef}>\r\n               <g className='x-axis' />\r\n               <g className=\"y-axis\" />\r\n            </svg>\r\n            </div>\r\n   );\r\n}\r\n\r\nexport default LineCharts;"]},"metadata":{},"sourceType":"module"}