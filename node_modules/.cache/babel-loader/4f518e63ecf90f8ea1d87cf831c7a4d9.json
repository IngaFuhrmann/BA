{"ast":null,"code":"var _jsxFileName = \"D:\\\\Studium\\\\Bachelor\\\\WebApp\\\\visapp\\\\src\\\\components\\\\charts\\\\LineChart.jsx\";\nimport React from 'react';\nimport * as d3 from \"d3\";\n\nconst Graph = props => {\n  const xScale = d3.scaleLinear().domain(d3.extent(data.dataset, d => d.x)).range([data.margin, data.width]);\n  const yScale = d3.scaleLinear().domain([0, d3.max(data.dataset, d => d.y)]).range([data.height, data.margin]);\n  const line = d3.line().x(d => xScale(d.x)).y(d => yScale(d.y)).curve(d3.curveCatmullRom.alpha(0.7));\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"svg\", {\n    height: data.height,\n    width: data.width,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"line\", {\n    className: \"axis\",\n    x1: data.margin,\n    x2: data.width,\n    y1: data.height,\n    y2: data.height,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }), React.createElement(\"line\", {\n    className: \"axis\",\n    x1: data.margin,\n    x2: data.margin,\n    y1: data.margin,\n    y2: data.height,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }), React.createElement(\"path\", {\n    d: click.clicked ? line(data.dataset) : 0,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  })));\n};\n\nconst data = {\n  dataset: [{\n    x: 0,\n    y: 0\n  }, {\n    x: 1,\n    y: 1\n  }, {\n    x: 2,\n    y: 1\n  }, {\n    x: 3,\n    y: 2\n  }, {\n    x: 4,\n    y: 3\n  }, {\n    x: 5,\n    y: 5\n  }, {\n    x: 6,\n    y: 8\n  }, {\n    x: 7,\n    y: 13\n  }, {\n    x: 8,\n    y: 21\n  }, {\n    x: 9,\n    y: 34\n  }, {\n    x: 10,\n    y: 55\n  }],\n  width: 500,\n  height: 500,\n  margin: 20\n};\nexport default Graph;","map":{"version":3,"sources":["D:/Studium/Bachelor/WebApp/visapp/src/components/charts/LineChart.jsx"],"names":["React","d3","Graph","props","xScale","scaleLinear","domain","extent","data","dataset","d","x","range","margin","width","yScale","max","y","height","line","curve","curveCatmullRom","alpha","click","clicked"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport * as d3 from \"d3\";\r\n\r\nconst  Graph = props => {\r\n  const xScale = d3\r\n      .scaleLinear()\r\n      .domain(d3.extent(data.dataset, d => d.x))\r\n      .range([data.margin, data.width])\r\n  const yScale = d3\r\n      .scaleLinear()\r\n      .domain([0, d3.max(data.dataset, d => d.y)])\r\n      .range([data.height, data.margin])\r\n  const line = d3.line()\r\n      .x(d => xScale(d.x))\r\n      .y(d => yScale(d.y))\r\n      .curve(d3.curveCatmullRom.alpha(0.7))\r\n  return <div>\r\n        <svg height={data.height} width={data.width}>\r\n        <line className=\"axis\" x1={data.margin} x2={data.width} y1={data.height} y2={data.height}/>\r\n         <line className=\"axis\" x1={data.margin} x2={data.margin} y1={data.margin} y2={data.height}/>\r\n          <path d={click.clicked ? line(data.dataset) : 0}/>\r\n        </svg>\r\n     </div>\r\n  }\r\n  const data = {\r\n    dataset: [\r\n      {x: 0, y: 0},\r\n      {x: 1, y: 1},\r\n      {x: 2, y: 1},\r\n      {x: 3, y: 2},\r\n      {x: 4, y: 3},\r\n      {x: 5, y: 5},\r\n      {x: 6, y: 8},\r\n      {x: 7, y: 13},\r\n      {x: 8, y: 21},\r\n      {x: 9, y: 34},\r\n      {x: 10, y: 55},\r\n    ],\r\n    width: 500,\r\n    height: 500,\r\n    margin: 20,\r\n  }\r\n\r\nexport default Graph;"]},"metadata":{},"sourceType":"module"}