{"ast":null,"code":"import _slicedToArray from \"D:\\\\Studium\\\\Bachelor\\\\WebApp\\\\visapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Studium\\\\Bachelor\\\\WebApp\\\\visapp\\\\src\\\\components\\\\charts\\\\BarMobilnutzung.jsx\";\nimport React, { useRef, useEffect, useState } from \"react\";\nimport { select, line, curveCardinal, axisBottom, axisLeft, scaleTime, scaleLinear, scaleBand, min, max, event, bisector, mouse, ticks } from 'd3';\nimport useResizeObserver from \"./useReziseObserver\";\n\nfunction BarMobilNutzung({\n  data,\n  highlight\n}) {\n  const svgRef = useRef();\n  const wrapperRef = useRef();\n  const dimensions = useResizeObserver(wrapperRef);\n\n  const _useState = useState([0, 1.5]),\n        _useState2 = _slicedToArray(_useState, 2),\n        selection = _useState2[0],\n        setSelection = _useState2[1];\n\n  useEffect(() => {\n    const svg = select(svgRef.current);\n    if (!dimensions) return;\n    const xScale = scaleLinear().domain([0, 100]).range([0, dimensions.width * 30 / 100]); //change\n\n    const yScale = scaleBand().domain(data.map((value, index) => value.age)) //todo\n    .range([0, dimensions.height - 50]) //change\n    .padding(0.4);\n    const xAxis = axisBottom(xScale);\n    svg.select(\".x-axis\") //.attr(\"transform\", \"translate(0,\" + dimensions.height + \")\")\n    // .attr(\"transform\", `translateY(${dimensions.height}px)rotate(-45)`)\n    .remove();\n    const yAxis = axisLeft(yScale).tickSizeOuter(0).tickSizeInner(0).attr(\"stroke\", \"none\");\n    svg.select(\".y-axis\").style('color', 'grey').call(yAxis);\n    svg.selectAll(\".bar\").data(data).join(\"rect\").attr(\"class\", \"bar\").attr(\"fill\", \"grey\").style(\"margin-top\", \"10px\").attr('x', xScale(0)).attr('y', s => yScale(s.age)).attr('width', s => xScale(s.value)).attr('height', yScale.bandwidth).on(\"mouseenter\", (value, index) => {\n      svg.selectAll(\".tooltip\").data([value]).join(enter => enter.append(\"text\")).attr(\"class\", \"tooltip\").text(value.value).attr(\"x\", 5 + xScale(index) * 15).attr(\"y\", yScale(value.age) + yScale.bandwidth() / 1.5).attr(\"opacity\", 1).transition().attr(\"fill\", \"white\");\n    }).on(\"mouseleave\", () => svg.select(\".tooltip\").remove().transition());\n  }, [data, dimensions]);\n  return React.createElement(\"div\", {\n    ref: wrapperRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(\"svg\", {\n    ref: svgRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(\"g\", {\n    className: \"x-axis\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }), React.createElement(\"g\", {\n    className: \"y-axis\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  })));\n}\n\nexport default BarMobilNutzung;","map":{"version":3,"sources":["D:/Studium/Bachelor/WebApp/visapp/src/components/charts/BarMobilnutzung.jsx"],"names":["React","useRef","useEffect","useState","select","line","curveCardinal","axisBottom","axisLeft","scaleTime","scaleLinear","scaleBand","min","max","event","bisector","mouse","ticks","useResizeObserver","BarMobilNutzung","data","highlight","svgRef","wrapperRef","dimensions","selection","setSelection","svg","current","xScale","domain","range","width","yScale","map","value","index","age","height","padding","xAxis","remove","yAxis","tickSizeOuter","tickSizeInner","attr","style","call","selectAll","join","s","bandwidth","on","enter","append","text","transition"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\r\nimport { select, line, curveCardinal, axisBottom, axisLeft, scaleTime, scaleLinear, scaleBand, min, max, event, bisector, mouse, ticks} from 'd3';\r\nimport useResizeObserver from \"./useReziseObserver\";\r\n\r\n\r\nfunction BarMobilNutzung({ data, highlight }) {\r\n   const svgRef = useRef();\r\n   const wrapperRef = useRef();\r\n   const dimensions = useResizeObserver(wrapperRef);\r\n   const [selection, setSelection] = useState([0, 1.5]);\r\n\r\n   useEffect(() => {\r\n\r\n    const svg = select(svgRef.current);\r\n     \r\n         if(!dimensions) return;\r\n      \r\n         const xScale = scaleLinear()\r\n         .domain([0, 100])\r\n        .range([0, dimensions.width * 30 / 100]) //change\r\n        \r\n       \r\n         const yScale =  scaleBand()\r\n         \r\n        .domain(data.map((value, index) => value.age))   //todo\r\n        .range([0, dimensions.height - 50])  //change\r\n        .padding(0.4)\r\n\r\n        const xAxis = axisBottom(xScale);\r\n            svg\r\n          .select(\".x-axis\")\r\n         \r\n          //.attr(\"transform\", \"translate(0,\" + dimensions.height + \")\")\r\n         // .attr(\"transform\", `translateY(${dimensions.height}px)rotate(-45)`)\r\n         .remove()\r\n\r\n          const yAxis = axisLeft(yScale).tickSizeOuter(0).tickSizeInner(0).attr(\"stroke\", \"none\");\r\n          svg\r\n            .select(\".y-axis\")\r\n            .style('color', 'grey')\r\n            .call(yAxis);\r\n\r\n            svg\r\n          .selectAll(\".bar\")\r\n          .data(data)\r\n          .join(\"rect\")\r\n          .attr(\"class\", \"bar\")\r\n          .attr(\"fill\", \"grey\")\r\n          .style(\"margin-top\", \"10px\")\r\n          .attr('x', xScale(0))\r\n          .attr('y', (s) => yScale(s.age))\r\n          .attr('width', (s) => xScale(s.value))\r\n          .attr('height', yScale.bandwidth)\r\n          .on(\"mouseenter\", (value, index) => {\r\n            svg\r\n              .selectAll(\".tooltip\")\r\n              .data([value])\r\n              .join(enter => enter.append(\"text\"))\r\n              .attr(\"class\", \"tooltip\")\r\n              .text(value.value)\r\n              .attr(\"x\", 5 + xScale(index) * 15)\r\n              .attr(\"y\", yScale(value.age) + yScale.bandwidth() / 1.5)\r\n              .attr(\"opacity\", 1)\r\n              .transition()\r\n              .attr(\"fill\", \"white\")\r\n            })\r\n            \r\n            .on(\"mouseleave\", () => \r\n              svg.select(\".tooltip\").remove()\r\n              .transition()\r\n   )\r\n         \r\n  }, [data, dimensions]);\r\n  return (\r\n   <div ref={wrapperRef} >\r\n      <svg ref={svgRef}>\r\n        <g className=\"x-axis\" />\r\n        <g className=\"y-axis\" />\r\n      </svg>\r\n    </div>\r\n);\r\n}\r\n\r\nexport default BarMobilNutzung;"]},"metadata":{},"sourceType":"module"}