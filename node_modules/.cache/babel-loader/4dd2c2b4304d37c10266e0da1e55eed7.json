{"ast":null,"code":"import _slicedToArray from \"D:\\\\Studium\\\\Bachelor\\\\WebApp\\\\visapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Studium\\\\Bachelor\\\\WebApp\\\\visapp\\\\src\\\\components\\\\charts\\\\PieMobilnutzung.jsx\";\nimport React, { useRef, useEffect, useState } from \"react\";\nimport { select, line, curveCardinal, axisBottom, axisLeft, scaleTime, scaleLinear, scaleBand, min, max, event, bisector, mouse, ticks, entries, arc, schemeDark2, scaleOrdinal, pie } from 'd3';\nimport useResizeObserver from \"./useReziseObserver\";\n\nfunction PieMobilNutzung({\n  data,\n  property\n}) {\n  const svgRef = useRef();\n  const wrapperRef = useRef();\n  const dimensions = useResizeObserver(wrapperRef);\n\n  const _useState = useState([0, 1.5]),\n        _useState2 = _slicedToArray(_useState, 2),\n        selection = _useState2[0],\n        setSelection = _useState2[1];\n\n  useEffect(() => {\n    const svg = select(svgRef.current);\n    var filtered = data.filter(a => a.geo == property); // console.log(filtered);\n\n    if (!dimensions) return;\n    var width = dimensions.width / 1.5;\n    var outerRadius = width / 2;\n    var innerRadius = 0;\n    var pied = pie().value(d => d.time[Object.keys(d.time)[0]])(filtered);\n    var color = scaleOrdinal().domain(pied).range([\"#bdbdbd\", \"#969696\", \"#737373\", \"#525252\", \"#252525\"]);\n\n    function update(pied) {\n      // map to data\n      var u = svg.selectAll(\"path\").data(pied);\n      var arcGenerator = arc().innerRadius(innerRadius).outerRadius(outerRadius);\n      u.enter().append('path').merge(u).transition().duration(1000).attr('d', arcGenerator).attr('fill', function (d, i) {\n        return color(i);\n      }).attr(\"stroke\", \"white\").style(\"stroke-width\", \"2px\").style(\"opacity\", 1);\n      u.append(\"text\").attr(\"transform\", function (d) {\n        return \"translate(\" + arcGenerator.centroid(d) + \")\";\n      }).attr(\"text-anchor\", \"middle\").text(function (d) {\n        return d.data.ed;\n      }).attr(\"fill\", \"white\"); // remove the group that is not present anymore\n\n      u.exit().remove();\n    } // Initialize the plot with the first dataset\n\n\n    update(pied);\n    /*  // Kreis zeichnen\r\n      var arcs = svg.selectAll(\".newPie\")\r\n      .data(pied)\r\n      .join(enter => enter.append(\"path\"), update => update.pathUpdate)\r\n      .attr(\"class\", \"newPie\")\r\n      .attr(\"transform\", \"translate(\" + outerRadius + \",\" + outerRadius + \")\")\r\n      \r\n      var pathUpdate = svg.attr(\"d\", arcd);\r\n        var arcd = arc()\r\n      .innerRadius(innerRadius)\r\n      .outerRadius(outerRadius)\r\n        arcs\r\n    \r\n      .join(\"d\")\r\n      .attr(\"d\", arcd)\r\n      //Farbschema               \r\n      var color = scaleOrdinal()\r\n      .domain(pied)\r\n      .range([\"#bdbdbd\",\"#969696\",\"#737373\",\"#525252\",\"#252525\"])\r\n          arcs.append(\"path\")\r\n      .attr(\"d\", arcd)\r\n      .attr(\"fill\", function(d, i) { return color(i) })\r\n      \r\n      //Labels\r\n      arcs.append(\"text\")\r\n      .attr(\"transform\", function(d) {\r\n      return \"translate(\" + arcd.centroid(d) + \")\"})\r\n      .attr(\"text-anchor\", \"middle\")\r\n      .text(function(d) {return d.data.ed})\r\n      .attr(\"fill\", \"white\")\r\n        arcs.on(\"mouseover\", function(d) {\r\n         arcs.selectAll(\".tooltip\")\r\n         .attr(\"transform\", function(d) {\r\n          return \"translate(\" + arcd.centroid(d) + \")\"})\r\n            .data([filtered])\r\n            .join(enter => enter.append(\"text\"))\r\n            .attr(\"class\", \"tooltip\")\r\n           .text(d.value + \"%\")\r\n           .attr(\"x\", -13)\r\n           .attr(\"y\", 45 + \"%\")\r\n          // .attr(\"x\", mouse(this)[0] - 50)\r\n          // .attr(\"y\", mouse(this)[1] - 10)\r\n        //  .attr(\"stroke\", \"blue\")\r\n         //.attr(\"x\", mouse(this)[0])\r\n        // .attr(\"y\", mouse(this)[1])\r\n         \r\n           \r\n           })\r\n      .on(\"mouseout\", function(d) {\r\n          arcs.select(\".tooltip\").remove()\r\n    })\r\n      */\n  }, [data, dimensions, property]);\n  return React.createElement(\"div\", {\n    ref: wrapperRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, React.createElement(\"svg\", {\n    ref: svgRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }));\n}\n\nexport default PieMobilNutzung;","map":{"version":3,"sources":["D:/Studium/Bachelor/WebApp/visapp/src/components/charts/PieMobilnutzung.jsx"],"names":["React","useRef","useEffect","useState","select","line","curveCardinal","axisBottom","axisLeft","scaleTime","scaleLinear","scaleBand","min","max","event","bisector","mouse","ticks","entries","arc","schemeDark2","scaleOrdinal","pie","useResizeObserver","PieMobilNutzung","data","property","svgRef","wrapperRef","dimensions","selection","setSelection","svg","current","filtered","filter","a","geo","width","outerRadius","innerRadius","pied","value","d","time","Object","keys","color","domain","range","update","u","selectAll","arcGenerator","enter","append","merge","transition","duration","attr","i","style","centroid","text","ed","exit","remove"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\r\nimport { select, line, curveCardinal, axisBottom, axisLeft, scaleTime, scaleLinear, scaleBand, min, max, event, bisector, mouse, ticks, entries, arc, schemeDark2, scaleOrdinal, pie} from 'd3';\r\nimport useResizeObserver from \"./useReziseObserver\";\r\n\r\n\r\nfunction PieMobilNutzung({ data, property }) {\r\n    const svgRef = useRef();\r\n    const wrapperRef = useRef();\r\n    const dimensions = useResizeObserver(wrapperRef);\r\n    const [selection, setSelection] = useState([0, 1.5]);\r\n \r\n    useEffect(() => {\r\n        const svg = select(svgRef.current);\r\n        var filtered = data.filter(a=>a.geo==property);\r\n       // console.log(filtered);\r\n\r\n        if(!dimensions) return;\r\n        var width = dimensions.width /1.5 ;\r\n        var outerRadius = width/2;\r\n        var innerRadius = 0;\r\n\r\n        var pied = pie().value((d) => d.time[Object.keys(d.time)[0]])(filtered);\r\n\r\n        var color = scaleOrdinal()\r\n        .domain(pied)\r\n        .range([\"#bdbdbd\",\"#969696\",\"#737373\",\"#525252\",\"#252525\"])\r\n\r\n        function update(pied) {\r\n\r\n          // map to data\r\n          var u = svg.selectAll(\"path\")\r\n            .data(pied)\r\n        \r\n            var arcGenerator = arc()\r\n            .innerRadius(innerRadius)\r\n            .outerRadius(outerRadius)\r\n\r\n           \r\n          u\r\n            .enter()\r\n            .append('path')\r\n            .merge(u)\r\n            .transition()\r\n            .duration(1000)\r\n            .attr('d', arcGenerator)\r\n            .attr('fill', function(d, i) { return color(i) })\r\n            .attr(\"stroke\", \"white\")\r\n            .style(\"stroke-width\", \"2px\")\r\n            .style(\"opacity\", 1)\r\n        \r\n            u.append(\"text\")\r\n            .attr(\"transform\", function(d) {\r\n            return \"translate(\" + arcGenerator.centroid(d) + \")\"})\r\n            .attr(\"text-anchor\", \"middle\")\r\n            .text(function(d) {return d.data.ed})\r\n            .attr(\"fill\", \"white\")\r\n          // remove the group that is not present anymore\r\n          u\r\n            .exit()\r\n            .remove()\r\n        \r\n        }\r\n        \r\n        // Initialize the plot with the first dataset\r\n        update(pied)\r\n\r\n      /*  // Kreis zeichnen\r\n        var arcs = svg.selectAll(\".newPie\")\r\n        .data(pied)\r\n        .join(enter => enter.append(\"path\"), update => update.pathUpdate)\r\n        .attr(\"class\", \"newPie\")\r\n        .attr(\"transform\", \"translate(\" + outerRadius + \",\" + outerRadius + \")\")\r\n        \r\n        var pathUpdate = svg.attr(\"d\", arcd);\r\n\r\n        var arcd = arc()\r\n        .innerRadius(innerRadius)\r\n        .outerRadius(outerRadius)\r\n\r\n        arcs\r\n      \r\n        .join(\"d\")\r\n        .attr(\"d\", arcd)\r\n        //Farbschema               \r\n        var color = scaleOrdinal()\r\n        .domain(pied)\r\n        .range([\"#bdbdbd\",\"#969696\",\"#737373\",\"#525252\",\"#252525\"])\r\n\r\n\r\n        arcs.append(\"path\")\r\n        .attr(\"d\", arcd)\r\n        .attr(\"fill\", function(d, i) { return color(i) })\r\n        \r\n        //Labels\r\n        arcs.append(\"text\")\r\n        .attr(\"transform\", function(d) {\r\n        return \"translate(\" + arcd.centroid(d) + \")\"})\r\n        .attr(\"text-anchor\", \"middle\")\r\n        .text(function(d) {return d.data.ed})\r\n        .attr(\"fill\", \"white\")\r\n\r\n        arcs.on(\"mouseover\", function(d) {\r\n           arcs.selectAll(\".tooltip\")\r\n           .attr(\"transform\", function(d) {\r\n            return \"translate(\" + arcd.centroid(d) + \")\"})\r\n              .data([filtered])\r\n              .join(enter => enter.append(\"text\"))\r\n              .attr(\"class\", \"tooltip\")\r\n             .text(d.value + \"%\")\r\n             .attr(\"x\", -13)\r\n             .attr(\"y\", 45 + \"%\")\r\n            // .attr(\"x\", mouse(this)[0] - 50)\r\n            // .attr(\"y\", mouse(this)[1] - 10)\r\n          //  .attr(\"stroke\", \"blue\")\r\n           //.attr(\"x\", mouse(this)[0])\r\n          // .attr(\"y\", mouse(this)[1])\r\n           \r\n             \r\n             })\r\n        .on(\"mouseout\", function(d) {\r\n            arcs.select(\".tooltip\").remove()\r\n  })\r\n        */\r\n    }, [data, dimensions, property]);\r\n\r\n\r\nreturn (\r\n    <div ref={wrapperRef} >\r\n       <svg ref={svgRef}>\r\n       </svg>\r\n     </div>\r\n );\r\n }\r\n \r\n export default PieMobilNutzung;"]},"metadata":{},"sourceType":"module"}