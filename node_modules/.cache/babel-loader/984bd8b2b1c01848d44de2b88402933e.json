{"ast":null,"code":"import _slicedToArray from \"D:\\\\Studium\\\\Bachelor\\\\WebApp\\\\visapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Studium\\\\Bachelor\\\\WebApp\\\\visapp\\\\src\\\\components\\\\charts\\\\NumberGender.jsx\";\nimport React, { useRef, useEffect, useState } from \"react\";\nimport { select, line, curveCardinal, axisBottom, axisLeft, scaleTime, scaleLinear, scaleBand, min, max, event, bisector, mouse, ticks } from 'd3';\nimport useResizeObserver from \"./useReziseObserver\";\n\nfunction NumberGen({\n  data,\n  property,\n  gen\n}) {\n  const svgRef = useRef();\n  const wrapperRef = useRef();\n  const dimensions = useResizeObserver(wrapperRef);\n\n  const _useState = useState([0, 1.5]),\n        _useState2 = _slicedToArray(_useState, 2),\n        selection = _useState2[0],\n        setSelection = _useState2[1];\n\n  useEffect(() => {\n    const svg = select(svgRef.current);\n    if (!dimensions) return;\n    var filtered = data.filter(a => a.geo == property);\n    var finalFilter = filtered.filter(b => b.gen == gen);\n    svg.selectAll(\"text\").data(finalFilter).enter().append(\"text\").text(s => s.time[Object.keys(s.time)[0]]).attr('x', 20).attr('y', (d, i) => 30 + 20 * i).attr(\"font-size\", \"250%\").attr(\"font-weight\", \"bolder\");\n    console.log(finalFilter);\n  }, [data, dimensions, property]);\n  return React.createElement(\"div\", {\n    ref: wrapperRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"svg\", {\n    ref: svgRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }));\n}\n\nexport default NumberGen;","map":{"version":3,"sources":["D:/Studium/Bachelor/WebApp/visapp/src/components/charts/NumberGender.jsx"],"names":["React","useRef","useEffect","useState","select","line","curveCardinal","axisBottom","axisLeft","scaleTime","scaleLinear","scaleBand","min","max","event","bisector","mouse","ticks","useResizeObserver","NumberGen","data","property","gen","svgRef","wrapperRef","dimensions","selection","setSelection","svg","current","filtered","filter","a","geo","finalFilter","b","selectAll","enter","append","text","s","time","Object","keys","attr","d","i","console","log"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,aAAvB,EAAsCC,UAAtC,EAAkDC,QAAlD,EAA4DC,SAA5D,EAAuEC,WAAvE,EAAoFC,SAApF,EAA+FC,GAA/F,EAAoGC,GAApG,EAAyGC,KAAzG,EAAgHC,QAAhH,EAA0HC,KAA1H,EAAiIC,KAAjI,QAA6I,IAA7I;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;;AAGA,SAASC,SAAT,CAAmB;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,QAAR;AAAkBC,EAAAA;AAAlB,CAAnB,EAA4C;AAExC,QAAMC,MAAM,GAAGtB,MAAM,EAArB;AACA,QAAMuB,UAAU,GAAGvB,MAAM,EAAzB;AACA,QAAMwB,UAAU,GAAGP,iBAAiB,CAACM,UAAD,CAApC;;AAJwC,oBAKNrB,QAAQ,CAAC,CAAC,CAAD,EAAI,GAAJ,CAAD,CALF;AAAA;AAAA,QAKjCuB,SALiC;AAAA,QAKtBC,YALsB;;AAOxCzB,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAM0B,GAAG,GAAGxB,MAAM,CAACmB,MAAM,CAACM,OAAR,CAAlB;AAEC,QAAG,CAACJ,UAAJ,EAAgB;AAEjB,QAAIK,QAAQ,GAAGV,IAAI,CAACW,MAAL,CAAYC,CAAC,IAAEA,CAAC,CAACC,GAAF,IAAOZ,QAAtB,CAAf;AACD,QAAIa,WAAW,GAAGJ,QAAQ,CAACC,MAAT,CAAgBI,CAAC,IAAEA,CAAC,CAACb,GAAF,IAAOA,GAA1B,CAAlB;AAEAM,IAAAA,GAAG,CACDQ,SADF,CACY,MADZ,EAEEhB,IAFF,CAEOc,WAFP,EAGEG,KAHF,GAIEC,MAJF,CAIS,MAJT,EAKEC,IALF,CAKQC,CAAD,IAAQA,CAAC,CAACC,IAAF,CAAOC,MAAM,CAACC,IAAP,CAAYH,CAAC,CAACC,IAAd,EAAoB,CAApB,CAAP,CALf,EAMEG,IANF,CAMO,GANP,EAMY,EANZ,EAOEA,IAPF,CAOO,GAPP,EAOY,CAACC,CAAD,EAAIC,CAAJ,KAAU,KAAK,KAAKA,CAPhC,EAQEF,IARF,CAQO,WARP,EAQoB,MARpB,EASEA,IATF,CASO,aATP,EASsB,QATtB;AAWCG,IAAAA,OAAO,CAACC,GAAR,CAAYd,WAAZ;AAEP,GArBY,EAqBV,CAACd,IAAD,EAAOK,UAAP,EAAmBJ,QAAnB,CArBU,CAAT;AAsBJ,SACC;AAAK,IAAA,GAAG,EAAEG,UAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG;AAAK,IAAA,GAAG,EAAED,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,CADD;AAOC;;AAED,eAAeJ,SAAf","sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\r\nimport { select, line, curveCardinal, axisBottom, axisLeft, scaleTime, scaleLinear, scaleBand, min, max, event, bisector, mouse, ticks} from 'd3';\r\nimport useResizeObserver from \"./useReziseObserver\";\r\n\r\n\r\nfunction NumberGen({ data, property, gen }) {\r\n\r\n    const svgRef = useRef();\r\n    const wrapperRef = useRef();\r\n    const dimensions = useResizeObserver(wrapperRef);\r\n    const [selection, setSelection] = useState([0, 1.5]);\r\n \r\n    useEffect(() => {\r\n        const svg = select(svgRef.current);\r\n     \r\n         if(!dimensions) return;\r\n\r\n        var filtered = data.filter(a=>a.geo==property);\r\n       var finalFilter = filtered.filter(b=>b.gen==gen);\r\n\r\n       svg\r\n        .selectAll(\"text\")\r\n        .data(finalFilter)\r\n        .enter()\r\n        .append(\"text\")\r\n        .text((s) => (s.time[Object.keys(s.time)[0]]))\r\n        .attr('x', 20)\r\n        .attr('y', (d, i) => 30 + 20 * i)\r\n        .attr(\"font-size\", \"250%\")\r\n        .attr(\"font-weight\", \"bolder\")\r\n\r\n        console.log(finalFilter);\r\n\r\n}, [data, dimensions, property]);\r\nreturn (\r\n <div ref={wrapperRef} >\r\n    <svg ref={svgRef}>\r\n     \r\n    </svg>\r\n  </div>\r\n);\r\n}\r\n\r\nexport default NumberGen;"]},"metadata":{},"sourceType":"module"}