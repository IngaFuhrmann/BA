{"ast":null,"code":"import _slicedToArray from \"D:\\\\Studium\\\\Bachelor\\\\WebApp\\\\visapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Studium\\\\Bachelor\\\\WebApp\\\\visapp\\\\src\\\\components\\\\Map.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport GeoChart from './charts/GeoChart';\nimport data from \"./charts/GeoChart.europe.geo.json\";\nimport '../styles/header.css';\n\nfunction Map() {\n  const _useState = useState(\"pop_est\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        property = _useState2[0],\n        setProperty = _useState2[1];\n\n  const _useState3 = useState(),\n        _useState4 = _slicedToArray(_useState3, 2),\n        zugang = _useState4[0],\n        setZugang = _useState4[1];\n\n  useEffect(() => {\n    fetch(\"https://webhooks.mongodb-stitch.com/api/client/v2.0/app/dataviztest-bbcvc/service/viz/incoming_webhook/webhook0\").then(response => response.ok && response.json()).then(datazugang => {\n      setData(datazugang.sort((a, b) => a.time.localeCompare(b.time)));\n    }).catch(console.error);\n  }, []);\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"select\", {\n    className: \"mapSelect\",\n    value: property,\n    onChange: event => setProperty(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"pop_est\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"Population\"), React.createElement(\"option\", {\n    value: \"name_len\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"Name length\"), React.createElement(\"option\", {\n    value: \"gdp_md_est\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"GDP\")), React.createElement(GeoChart, {\n    data: data,\n    property: property,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }));\n}\n\nexport default Map;","map":{"version":3,"sources":["D:/Studium/Bachelor/WebApp/visapp/src/components/Map.jsx"],"names":["React","useEffect","useState","GeoChart","data","Map","property","setProperty","zugang","setZugang","fetch","then","response","ok","json","datazugang","setData","sort","a","b","time","localeCompare","catch","console","error","event","target","value"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,OAAOC,QAAP,MAAqB,mBAArB;AACA,OAAOC,IAAP,MAAiB,mCAAjB;AACA,OAAO,sBAAP;;AAEA,SAASC,GAAT,GAAe;AAAA,oBACqBH,QAAQ,CAAC,SAAD,CAD7B;AAAA;AAAA,QACJI,QADI;AAAA,QACMC,WADN;;AAAA,qBAEiBL,QAAQ,EAFzB;AAAA;AAAA,QAEJM,MAFI;AAAA,QAEIC,SAFJ;;AAIXR,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,KAAK,CAAC,iHAAD,CAAL,CACGC,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,EAAT,IAAeD,QAAQ,CAACE,IAAT,EADnC,EAEGH,IAFH,CAEQI,UAAU,IAAI;AAClBC,MAAAA,OAAO,CACLD,UAAU,CAACE,IAAX,CAAgB,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACE,IAAF,CAAOC,aAAP,CAAqBF,CAAC,CAACC,IAAvB,CAA1B,CADK,CAAP;AAGD,KANH,EAOGE,KAPH,CAOSC,OAAO,CAACC,KAPjB;AAQD,GATQ,EASN,EATM,CAAT;AAUA,SACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEF;AAAQ,IAAA,SAAS,EAAC,WAAlB;AACM,IAAA,KAAK,EAAElB,QADb;AAEM,IAAA,QAAQ,EAAEmB,KAAK,IAAIlB,WAAW,CAACkB,KAAK,CAACC,MAAN,CAAaC,KAAd,CAFpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIM;AAAQ,IAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJN,EAKM;AAAQ,IAAA,KAAK,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBALN,EAMM;AAAQ,IAAA,KAAK,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WANN,CAFE,EAUE,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAEvB,IAAhB;AAAsB,IAAA,QAAQ,EAAEE,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,CADF;AAeD;;AAED,eAAeD,GAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nimport GeoChart from './charts/GeoChart'\r\nimport data from \"./charts/GeoChart.europe.geo.json\"\r\nimport '../styles/header.css'\r\n\r\nfunction Map() {\r\n    const [property, setProperty] = useState(\"pop_est\");\r\n    const [zugang, setZugang] = useState();\r\n\r\n    useEffect(() => {\r\n      fetch(\"https://webhooks.mongodb-stitch.com/api/client/v2.0/app/dataviztest-bbcvc/service/viz/incoming_webhook/webhook0\")\r\n        .then(response => response.ok && response.json())\r\n        .then(datazugang => {\r\n          setData(\r\n            datazugang.sort((a, b) => a.time.localeCompare(b.time))\r\n          );\r\n        })\r\n        .catch(console.error);\r\n    }, []);\r\n    return (\r\n      <React.Fragment>\r\n    \r\n    <select className=\"mapSelect\"\r\n          value={property}\r\n          onChange={event => setProperty(event.target.value)}\r\n        >\r\n          <option value=\"pop_est\">Population</option>\r\n          <option value=\"name_len\">Name length</option>\r\n          <option value=\"gdp_md_est\">GDP</option>\r\n        </select>\r\n        <GeoChart data={data} property={property} />\r\n        \r\n      </React.Fragment>\r\n    );\r\n  }\r\n  \r\n  export default Map;"]},"metadata":{},"sourceType":"module"}