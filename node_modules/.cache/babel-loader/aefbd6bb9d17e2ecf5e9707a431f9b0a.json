{"ast":null,"code":"import _slicedToArray from\"D:\\\\Studium\\\\Bachelor\\\\FinalHelper\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import{useEffect,useState}from\"react\";//Größe der Elemente beobachten\nvar useResizeObserver=function useResizeObserver(ref){var _useState=useState(null),_useState2=_slicedToArray(_useState,2),dimensions=_useState2[0],setDimensions=_useState2[1];useEffect(function(){var observeTarget=ref.current;var resizeObserver=new ResizeObserver(function(entries){entries.forEach(function(entry){setDimensions(entry.contentRect);});});resizeObserver.observe(observeTarget);return function(){resizeObserver.unobserve(observeTarget);};},[ref]);return dimensions;};export default useResizeObserver;","map":{"version":3,"sources":["D:/Studium/Bachelor/FinalHelper/src/components/charts/useReziseObserver.js"],"names":["useEffect","useState","useResizeObserver","ref","dimensions","setDimensions","observeTarget","current","resizeObserver","ResizeObserver","entries","forEach","entry","contentRect","observe","unobserve"],"mappings":"wHAAA,OAAUA,SAAV,CAAqBC,QAArB,KAAqC,OAArC,CAEA;AACA,GAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAAAC,GAAG,CAAI,eACOF,QAAQ,CAAC,IAAD,CADf,wCACtBG,UADsB,eACVC,aADU,eAE7BL,SAAS,CAAC,UAAM,CACd,GAAMM,CAAAA,aAAa,CAAGH,GAAG,CAACI,OAA1B,CACA,GAAMC,CAAAA,cAAc,CAAG,GAAIC,CAAAA,cAAJ,CAAmB,SAAAC,OAAO,CAAI,CACnDA,OAAO,CAACC,OAAR,CAAgB,SAAAC,KAAK,CAAI,CACvBP,aAAa,CAACO,KAAK,CAACC,WAAP,CAAb,CACD,CAFD,EAGD,CAJsB,CAAvB,CAKAL,cAAc,CAACM,OAAf,CAAuBR,aAAvB,EACA,MAAO,WAAM,CACXE,cAAc,CAACO,SAAf,CAAyBT,aAAzB,EACD,CAFD,CAGD,CAXQ,CAWN,CAACH,GAAD,CAXM,CAAT,CAYA,MAAOC,CAAAA,UAAP,CACD,CAfH,CAiBE,cAAeF,CAAAA,iBAAf","sourcesContent":["import  { useEffect, useState } from \"react\";\r\n\r\n//Größe der Elemente beobachten\r\nconst useResizeObserver = ref => { \r\n    const [dimensions, setDimensions] = useState(null);\r\n    useEffect(() => {\r\n      const observeTarget = ref.current;\r\n      const resizeObserver = new ResizeObserver(entries => {\r\n        entries.forEach(entry => {\r\n          setDimensions(entry.contentRect);\r\n        });\r\n      });\r\n      resizeObserver.observe(observeTarget);\r\n      return () => {\r\n        resizeObserver.unobserve(observeTarget);\r\n      };\r\n    }, [ref]);\r\n    return dimensions;\r\n  };\r\n\r\n  export default useResizeObserver;"]},"metadata":{},"sourceType":"module"}