{"ast":null,"code":"import _slicedToArray from \"D:\\\\Studium\\\\Bachelor\\\\WebApp\\\\visapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Studium\\\\Bachelor\\\\WebApp\\\\visapp\\\\src\\\\components\\\\charts\\\\LivingOnline.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport LineChartOnline from \"./LineChartOnline\";\n\nfunction LivingOnline() {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        bbEpisodes = _useState2[0],\n        setBbEpisodes = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        bbCharacters = _useState4[0],\n        setBbCharacters = _useState4[1];\n\n  const _useState5 = useState(),\n        _useState6 = _slicedToArray(_useState5, 2),\n        highlight = _useState6[0],\n        setHighlight = _useState6[1];\n\n  useEffect(() => {\n    fetch(\"https://www.breakingbadapi.com/api/characters?category=Breaking+Bad\").then(response => response.ok && response.json()).then(characters => {\n      setBbCharacters(characters.sort((a, b) => a.name.localeCompare(b.name)));\n    }).catch(console.error);\n  }, []);\n  useEffect(() => {\n    fetch(\"https://www.breakingbadapi.com/api/episodes?series=Breaking+Bad\").then(response => response.ok && response.json()).then(episodes => {\n      console.warn(episodes);\n      setBbEpisodes(episodes);\n    }).catch(console.error);\n  }, []);\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Breaking Bad Timeline\"), React.createElement(BBTimeline, {\n    highlight: highlight,\n    data: bbEpisodes,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Select your character\"), React.createElement(\"select\", {\n    value: highlight,\n    onChange: e => setHighlight(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Select character\"), bbCharacters.map(character => React.createElement(\"option\", {\n    key: character.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, character.name))));\n}\n\nexport default App;","map":{"version":3,"sources":["D:/Studium/Bachelor/WebApp/visapp/src/components/charts/LivingOnline.jsx"],"names":["React","useEffect","useState","LineChartOnline","LivingOnline","bbEpisodes","setBbEpisodes","bbCharacters","setBbCharacters","highlight","setHighlight","fetch","then","response","ok","json","characters","sort","a","b","name","localeCompare","catch","console","error","episodes","warn","e","target","value","map","character","App"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;AAGA,SAASC,YAAT,GAAwB;AAAA,oBACcF,QAAQ,CAAC,EAAD,CADtB;AAAA;AAAA,QACfG,UADe;AAAA,QACHC,aADG;;AAAA,qBAEkBJ,QAAQ,CAAC,EAAD,CAF1B;AAAA;AAAA,QAEfK,YAFe;AAAA,QAEDC,eAFC;;AAAA,qBAGYN,QAAQ,EAHpB;AAAA;AAAA,QAGfO,SAHe;AAAA,QAGJC,YAHI;;AAKtBT,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,KAAK,CAAC,qEAAD,CAAL,CACGC,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,EAAT,IAAeD,QAAQ,CAACE,IAAT,EADnC,EAEGH,IAFH,CAEQI,UAAU,IAAI;AAClBR,MAAAA,eAAe,CACbQ,UAAU,CAACC,IAAX,CAAgB,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACE,IAAF,CAAOC,aAAP,CAAqBF,CAAC,CAACC,IAAvB,CAA1B,CADa,CAAf;AAGD,KANH,EAOGE,KAPH,CAOSC,OAAO,CAACC,KAPjB;AAQD,GATQ,EASN,EATM,CAAT;AAWAvB,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,KAAK,CAAC,iEAAD,CAAL,CACGC,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,EAAT,IAAeD,QAAQ,CAACE,IAAT,EADnC,EAEGH,IAFH,CAEQa,QAAQ,IAAI;AAChBF,MAAAA,OAAO,CAACG,IAAR,CAAaD,QAAb;AACAnB,MAAAA,aAAa,CAACmB,QAAD,CAAb;AACD,KALH,EAMGH,KANH,CAMSC,OAAO,CAACC,KANjB;AAOD,GARQ,EAQN,EARM,CAAT;AAUA,SACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,EAEE,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAEf,SAAvB;AAAkC,IAAA,IAAI,EAAEJ,UAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAJF,EAKE;AAAQ,IAAA,KAAK,EAAEI,SAAf;AAA0B,IAAA,QAAQ,EAAEkB,CAAC,IAAIjB,YAAY,CAACiB,CAAC,CAACC,MAAF,CAASC,KAAV,CAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAEGtB,YAAY,CAACuB,GAAb,CAAiBC,SAAS,IACzB;AAAQ,IAAA,GAAG,EAAEA,SAAS,CAACX,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8BW,SAAS,CAACX,IAAxC,CADD,CAFH,CALF,CADF;AAcD;;AAED,eAAeY,GAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport LineChartOnline from \"./LineChartOnline\";\r\n\r\n\r\nfunction LivingOnline() {\r\n  const [bbEpisodes, setBbEpisodes] = useState([]);\r\n  const [bbCharacters, setBbCharacters] = useState([]);\r\n  const [highlight, setHighlight] = useState();\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://www.breakingbadapi.com/api/characters?category=Breaking+Bad\")\r\n      .then(response => response.ok && response.json())\r\n      .then(characters => {\r\n        setBbCharacters(\r\n          characters.sort((a, b) => a.name.localeCompare(b.name))\r\n        );\r\n      })\r\n      .catch(console.error);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://www.breakingbadapi.com/api/episodes?series=Breaking+Bad\")\r\n      .then(response => response.ok && response.json())\r\n      .then(episodes => {\r\n        console.warn(episodes);\r\n        setBbEpisodes(episodes);\r\n      })\r\n      .catch(console.error);\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <h1>Breaking Bad Timeline</h1>\r\n      <BBTimeline highlight={highlight} data={bbEpisodes} />\r\n\r\n      <h2>Select your character</h2>\r\n      <select value={highlight} onChange={e => setHighlight(e.target.value)}>\r\n        <option>Select character</option>\r\n        {bbCharacters.map(character => (\r\n          <option key={character.name}>{character.name}</option>\r\n        ))}\r\n      </select>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}