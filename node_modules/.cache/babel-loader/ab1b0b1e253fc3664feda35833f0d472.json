{"ast":null,"code":"var _jsxFileName = \"D:\\\\Studium\\\\Bachelor\\\\WebApp\\\\visapp\\\\src\\\\components\\\\charts\\\\LineChart.jsx\";\nimport React from 'react';\nimport * as d3 from \"d3\";\nimport d3Utils from './utils';\nimport d3Config from './config';\nimport { scaleLinear } from 'd3-scale';\nimport { connect } from \"react-redux\";\nimport data from \"../../data.json\"; // Add function:\n\nexport default class BarChart extends React.Component() {\n  constructor(props) {// We'll fill this out soon\n  }\n\n  componentDidMount() {\n    const timeSeriesData = this.props.timeSeriesData;\n    d3Utils.initializeChart(timeSeriesData, 'monthToDate');\n  }\n\n  componentDidUpdate(prevProps) {\n    const _this$props = this.props,\n          timeSeriesData = _this$props.timeSeriesData,\n          timeFrame = _this$props.timeFrame;\n    if (prevProps.timeSeriesData !== timeSeriesData) d3Utils.handleNewData(timeSeriesData, timeFrame);\n  }\n\n  componentWillUnmount() {// And finally this\n  }\n\n  render() {\n    return React.createElement(\"svg\", {\n      className: \"line-chart\",\n      width: \"100%\",\n      height: \"600\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    });\n  }\n\n}\n/*class BarChart extends Component {\r\n  componentDidMount() {\r\n    this.drawChart(); //D3!\r\n  }\r\n\r\n  drawChart() {\r\n    const data = [12, 5, 6, 6, 9, 10];\r\n    var w;\r\n    var h;\r\n    const svg = d3.select(\"body\")\r\n    .append(\"svg\")\r\n    .attr(\"width\", w)\r\n    .attr(\"height\", h)\r\n    .style(\"margin-left\", 100);\r\n                  \r\n    svg.selectAll(\"rect\")\r\n      .data(data)\r\n      .enter()\r\n      .append(\"rect\")\r\n      .attr(\"x\", (d, i) => i * 70)\r\n      .attr(\"y\", (d, i) => h - 10 * d)\r\n      .attr(\"width\", 65)\r\n      .attr(\"height\", (d, i) => d * 10)\r\n      .attr(\"fill\", \"green\")\r\n  }\r\n        \r\n  render(){\r\n    return <div id={\"#\" + this.props.id}></div>\r\n  }\r\n}\r\n\r\nexport default BarChart; */","map":{"version":3,"sources":["D:/Studium/Bachelor/WebApp/visapp/src/components/charts/LineChart.jsx"],"names":["React","d3","d3Utils","d3Config","scaleLinear","connect","data","BarChart","Component","constructor","props","componentDidMount","timeSeriesData","initializeChart","componentDidUpdate","prevProps","timeFrame","handleNewData","componentWillUnmount","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;AACA,OAAOC,OAAP,MAAoB,SAApB;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,SAASC,WAAT,QAA4B,UAA5B;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,IAAP,MAAiB,iBAAjB,C,CAEA;;AAGA,eAAe,MAAMC,QAAN,SAAuBP,KAAK,CAACQ,SAAN,EAAvB,CAAyC;AACtDC,EAAAA,WAAW,CAACC,KAAD,EAAQ,CACjB;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAAA,UACVC,cADU,GACS,KAAKF,KADd,CACVE,cADU;AAElBV,IAAAA,OAAO,CAACW,eAAR,CAAwBD,cAAxB,EAAwC,aAAxC;AACD;;AAEDE,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAAA,wBACU,KAAKL,KADf;AAAA,UACpBE,cADoB,eACpBA,cADoB;AAAA,UACJI,SADI,eACJA,SADI;AAE5B,QAAID,SAAS,CAACH,cAAV,KAA6BA,cAAjC,EACEV,OAAO,CAACe,aAAR,CAAsBL,cAAtB,EAAsCI,SAAtC;AACH;;AAEDE,EAAAA,oBAAoB,GAAG,CACrB;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAA4B,MAAA,KAAK,EAAC,MAAlC;AAAyC,MAAA,MAAM,EAAC,KAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGD;;AAxBqD;AA6BxD","sourcesContent":["import React from 'react';\r\nimport * as d3 from \"d3\";\r\nimport d3Utils from './utils';\r\nimport d3Config from './config';\r\nimport { scaleLinear } from 'd3-scale';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport data from \"../../data.json\";\r\n\r\n// Add function:\r\n  \r\n  \r\nexport default class BarChart extends React.Component() {\r\n  constructor(props) {\r\n    // We'll fill this out soon\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { timeSeriesData } = this.props;\r\n    d3Utils.initializeChart(timeSeriesData, 'monthToDate');\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { timeSeriesData, timeFrame } = this.props;\r\n    if (prevProps.timeSeriesData !== timeSeriesData) \r\n      d3Utils.handleNewData(timeSeriesData, timeFrame);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    // And finally this\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <svg className=\"line-chart\" width=\"100%\" height=\"600\" />\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n/*class BarChart extends Component {\r\n  componentDidMount() {\r\n    this.drawChart(); //D3!\r\n  }\r\n\r\n  drawChart() {\r\n    const data = [12, 5, 6, 6, 9, 10];\r\n    var w;\r\n    var h;\r\n    const svg = d3.select(\"body\")\r\n    .append(\"svg\")\r\n    .attr(\"width\", w)\r\n    .attr(\"height\", h)\r\n    .style(\"margin-left\", 100);\r\n                  \r\n    svg.selectAll(\"rect\")\r\n      .data(data)\r\n      .enter()\r\n      .append(\"rect\")\r\n      .attr(\"x\", (d, i) => i * 70)\r\n      .attr(\"y\", (d, i) => h - 10 * d)\r\n      .attr(\"width\", 65)\r\n      .attr(\"height\", (d, i) => d * 10)\r\n      .attr(\"fill\", \"green\")\r\n  }\r\n        \r\n  render(){\r\n    return <div id={\"#\" + this.props.id}></div>\r\n  }\r\n}\r\n\r\nexport default BarChart; */"]},"metadata":{},"sourceType":"module"}