{"ast":null,"code":"import _slicedToArray from \"D:\\\\Studium\\\\Bachelor\\\\WebApp\\\\visapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Studium\\\\Bachelor\\\\WebApp\\\\visapp\\\\src\\\\components\\\\charts\\\\PieMobilnutzung.jsx\";\nimport React, { useRef, useEffect, useState } from \"react\";\nimport { select, line, curveCardinal, axisBottom, axisLeft, scaleTime, scaleLinear, scaleBand, min, max, event, bisector, mouse, ticks, entries, arc, schemeDark2, scaleOrdinal, pie } from 'd3';\nimport useResizeObserver from \"./useReziseObserver\";\n\nfunction PieMobilNutzung({\n  data,\n  highlight\n}) {\n  const svgRef = useRef();\n  const wrapperRef = useRef();\n  const dimensions = useResizeObserver(wrapperRef);\n\n  const _useState = useState([0, 1.5]),\n        _useState2 = _slicedToArray(_useState, 2),\n        selection = _useState2[0],\n        setSelection = _useState2[1];\n\n  useEffect(() => {\n    const svg = select(svgRef.current);\n    if (!dimensions) return;\n    var width = 250;\n    var height = 250;\n    var outerRadius = width / 2;\n    var innerRadius = 0;\n    var pied = pie().value(d => d.value)(data); // Kreis zeichnen\n\n    var arcs = svg.selectAll(\"g\").data(pied).enter().append(\"g\").attr(\"transform\", \"translate(\" + outerRadius + \",\" + outerRadius + \")\");\n    var arcd = arc().innerRadius(innerRadius).outerRadius(outerRadius);\n    arcs.append(\"path\").attr(\"d\", arcd); //Farbschema               \n\n    var color = scaleOrdinal().domain(pied).range(\"lightgrey\", \"grey\", \"darkgrey\").clamp(true);\n    arcs.append(\"path\").attr(\"d\", arcd).attr(\"fill\", function (d, i) {\n      return color(i);\n    }); //Labels\n\n    arcs.append(\"text\").attr(\"transform\", function (d) {\n      return \"translate(\" + arcd.centroid(d) + \")\";\n    }).attr(\"text-anchor\", \"end\").text(function (d) {\n      return d.data.ed;\n    });\n  }, [data, dimensions]);\n  return React.createElement(\"div\", {\n    ref: wrapperRef,\n    style: {\n      width: \"250px\",\n      height: \"250px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"svg\", {\n    ref: svgRef,\n    style: {\n      width: \"250px\",\n      height: \"250px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }));\n}\n\nexport default PieMobilNutzung;","map":{"version":3,"sources":["D:/Studium/Bachelor/WebApp/visapp/src/components/charts/PieMobilnutzung.jsx"],"names":["React","useRef","useEffect","useState","select","line","curveCardinal","axisBottom","axisLeft","scaleTime","scaleLinear","scaleBand","min","max","event","bisector","mouse","ticks","entries","arc","schemeDark2","scaleOrdinal","pie","useResizeObserver","PieMobilNutzung","data","highlight","svgRef","wrapperRef","dimensions","selection","setSelection","svg","current","width","height","outerRadius","innerRadius","pied","value","d","arcs","selectAll","enter","append","attr","arcd","color","domain","range","clamp","i","centroid","text","ed"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\r\nimport { select, line, curveCardinal, axisBottom, axisLeft, scaleTime, scaleLinear, scaleBand, min, max, event, bisector, mouse, ticks, entries, arc, schemeDark2, scaleOrdinal, pie} from 'd3';\r\nimport useResizeObserver from \"./useReziseObserver\";\r\n\r\n\r\nfunction PieMobilNutzung({ data, highlight }) {\r\n    const svgRef = useRef();\r\n    const wrapperRef = useRef();\r\n    const dimensions = useResizeObserver(wrapperRef);\r\n    const [selection, setSelection] = useState([0, 1.5]);\r\n \r\n    useEffect(() => {\r\n        const svg = select(svgRef.current);\r\n        \r\n        if(!dimensions) return;\r\n        var width = 250;\r\n        var height = 250;\r\n        var outerRadius = width/2;\r\n        var innerRadius = 0;\r\n\r\n        var pied = pie().value((d) => d.value)(data);\r\n       \r\n        // Kreis zeichnen\r\n        var arcs = svg.selectAll(\"g\")\r\n        .data(pied)\r\n        .enter()\r\n        .append(\"g\")\r\n        .attr(\"transform\", \"translate(\" + outerRadius + \",\" + outerRadius + \")\")\r\n        \r\n        var arcd = arc()\r\n        .innerRadius(innerRadius)\r\n        .outerRadius(outerRadius)\r\n\r\n        arcs.append(\"path\")\r\n        .attr(\"d\", arcd)\r\n        //Farbschema               \r\n        var color = scaleOrdinal()\r\n        .domain(pied)\r\n        .range(\"lightgrey\", \"grey\", \"darkgrey\")\r\n        .clamp(true);\r\n\r\n        arcs.append(\"path\")\r\n        .attr(\"d\", arcd)\r\n        .attr(\"fill\", function(d, i) { return color(i) })\r\n        \r\n        //Labels\r\n        arcs.append(\"text\")\r\n        .attr(\"transform\", function(d) {\r\n        return \"translate(\" + arcd.centroid(d) + \")\"\r\n        })\r\n        .attr(\"text-anchor\", \"end\")\r\n        .text(function(d) {return d.data.ed})\r\n\r\n    }, [data, dimensions]);\r\n\r\n\r\nreturn (\r\n    <div ref={wrapperRef} style={{ width: \"250px\" , height: \"250px\"}}>\r\n       <svg ref={svgRef} style={{ width: \"250px\" , height: \"250px\"}}>\r\n       </svg>\r\n     </div>\r\n );\r\n }\r\n \r\n export default PieMobilNutzung;"]},"metadata":{},"sourceType":"module"}