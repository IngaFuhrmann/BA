{"ast":null,"code":"import _slicedToArray from \"D:\\\\Studium\\\\Bachelor\\\\WebApp\\\\visapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Studium\\\\Bachelor\\\\WebApp\\\\visapp\\\\src\\\\components\\\\charts\\\\PieMobilnutzung.jsx\";\nimport React, { useRef, useEffect, useState } from \"react\";\nimport { select, line, curveCardinal, axisBottom, axisLeft, scaleTime, scaleLinear, scaleBand, min, max, event, bisector, mouse, ticks, entries, arc, schemeDark2, scaleOrdinal, pie } from 'd3';\nimport useResizeObserver from \"./useReziseObserver\";\n\nfunction PieMobilNutzung({\n  data,\n  highlight\n}) {\n  const svgRef = useRef();\n  const wrapperRef = useRef();\n  const dimensions = useResizeObserver(wrapperRef);\n\n  const _useState = useState([0, 1.5]),\n        _useState2 = _slicedToArray(_useState, 2),\n        selection = _useState2[0],\n        setSelection = _useState2[1];\n\n  useEffect(() => {\n    const svg = select(svgRef.current);\n    if (!dimensions) return;\n    var width = dimensions.width / 1.5;\n    var outerRadius = width / 2;\n    var innerRadius = 0;\n    var pied = pie().value(d => d.value)(data); // Kreis zeichnen\n\n    var arcs = svg.selectAll(\"g\").data(pied).enter().append(\"g\").attr(\"transform\", \"translate(\" + outerRadius + \",\" + outerRadius + \")\");\n    var arcd = arc().innerRadius(innerRadius).outerRadius(outerRadius);\n    arcs.append(\"path\").attr(\"d\", arcd); //Farbschema               \n\n    var color = scaleOrdinal().domain(pied).range([\"#bdbdbd\", \"#969696\", \"#737373\", \"#525252\", \"#252525\"]);\n    arcs.append(\"path\").attr(\"d\", arcd).attr(\"fill\", function (d, i) {\n      return color(i);\n    }); //Labels\n\n    arcs.append(\"text\").attr(\"transform\", function (d) {\n      return \"translate(\" + arcd.centroid(d) + \")\";\n    }).attr(\"text-anchor\", \"middle\").text(function (d) {\n      return d.data.ed;\n    }).attr(\"fill\", \"white\"); //Tooltip\n\n    var tip = svg.append(\"div\").attr(\"class\", \"tooltip\"); // Add events to circles\n\n    arcs.on(\"mouseover\", function (d) {\n      arcs.selectAll(\".tooltip\").data([data]).join(enter => enter.append(\"text\")).attr(\"class\", \"tooltip\").text(d.data.value).attr(\"stroke\", \"blue\").attr(\"x\", 200).attr(\"y\", 200);\n    }).on(\"mouseout\", function (d) {\n      arcs.select(\".tooltip\").remove();\n    });\n  }, [data, dimensions]);\n  return React.createElement(\"div\", {\n    ref: wrapperRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(\"svg\", {\n    ref: svgRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }));\n}\n\nexport default PieMobilNutzung;","map":{"version":3,"sources":["D:/Studium/Bachelor/WebApp/visapp/src/components/charts/PieMobilnutzung.jsx"],"names":["React","useRef","useEffect","useState","select","line","curveCardinal","axisBottom","axisLeft","scaleTime","scaleLinear","scaleBand","min","max","event","bisector","mouse","ticks","entries","arc","schemeDark2","scaleOrdinal","pie","useResizeObserver","PieMobilNutzung","data","highlight","svgRef","wrapperRef","dimensions","selection","setSelection","svg","current","width","outerRadius","innerRadius","pied","value","d","arcs","selectAll","enter","append","attr","arcd","color","domain","range","i","centroid","text","ed","tip","on","join","remove"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\r\nimport { select, line, curveCardinal, axisBottom, axisLeft, scaleTime, scaleLinear, scaleBand, min, max, event, bisector, mouse, ticks, entries, arc, schemeDark2, scaleOrdinal, pie} from 'd3';\r\nimport useResizeObserver from \"./useReziseObserver\";\r\n\r\n\r\nfunction PieMobilNutzung({ data, highlight }) {\r\n    const svgRef = useRef();\r\n    const wrapperRef = useRef();\r\n    const dimensions = useResizeObserver(wrapperRef);\r\n    const [selection, setSelection] = useState([0, 1.5]);\r\n \r\n    useEffect(() => {\r\n        const svg = select(svgRef.current);\r\n        \r\n        if(!dimensions) return;\r\n        var width = dimensions.width /1.5 ;\r\n        var outerRadius = width/2;\r\n        var innerRadius = 0;\r\n\r\n        var pied = pie().value((d) => d.value)(data);\r\n       \r\n        // Kreis zeichnen\r\n        var arcs = svg.selectAll(\"g\")\r\n        .data(pied)\r\n        .enter()\r\n        .append(\"g\")\r\n        .attr(\"transform\", \"translate(\" + outerRadius + \",\" + outerRadius + \")\")\r\n        \r\n        var arcd = arc()\r\n        .innerRadius(innerRadius)\r\n        .outerRadius(outerRadius)\r\n\r\n        arcs.append(\"path\")\r\n        .attr(\"d\", arcd)\r\n        //Farbschema               \r\n        var color = scaleOrdinal()\r\n        .domain(pied)\r\n        .range([\"#bdbdbd\",\"#969696\",\"#737373\",\"#525252\",\"#252525\"])\r\n        \r\n\r\n        arcs.append(\"path\")\r\n        .attr(\"d\", arcd)\r\n        .attr(\"fill\", function(d, i) { return color(i) })\r\n        \r\n        //Labels\r\n        arcs.append(\"text\")\r\n        .attr(\"transform\", function(d) {\r\n        return \"translate(\" + arcd.centroid(d) + \")\"})\r\n        .attr(\"text-anchor\", \"middle\")\r\n        .text(function(d) {return d.data.ed})\r\n        .attr(\"fill\", \"white\")\r\n        //Tooltip\r\n        var tip = svg.append(\"div\")\r\n        .attr(\"class\", \"tooltip\")\r\n        \r\n// Add events to circles\r\n        arcs.on(\"mouseover\", function(d) {\r\n           arcs.selectAll(\".tooltip\")\r\n              .data([data])\r\n              .join(enter => enter.append(\"text\"))\r\n              .attr(\"class\", \"tooltip\")\r\n             .text(d.data.value)\r\n             .attr(\"stroke\", \"blue\")\r\n            .attr(\"x\", 200)\r\n            .attr(\"y\", 200)\r\n            \r\n             })\r\n        .on(\"mouseout\", function(d) {\r\n            arcs.select(\".tooltip\").remove()\r\n  })\r\n        \r\n    }, [data, dimensions]);\r\n\r\n\r\nreturn (\r\n    <div ref={wrapperRef} >\r\n       <svg ref={svgRef}>\r\n       </svg>\r\n     </div>\r\n );\r\n }\r\n \r\n export default PieMobilNutzung;"]},"metadata":{},"sourceType":"module"}