{"ast":null,"code":"var _jsxFileName = \"D:\\\\Studium\\\\Bachelor\\\\WebApp\\\\visapp\\\\src\\\\components\\\\charts\\\\LineChart.jsx\";\nimport React, { useRef, useEffect, useState } from \"react\";\nimport { select, line, curveCardinal, axisBottom, axisLeft, scaleTime, scaleLinear, scaleBand, min, max, ticks } from 'd3';\nimport '../../styles/charts.css';\nimport useResizeObserver from './useReziseObserver';\n\nfunction LineCharts({\n  data,\n  highlight\n}) {\n  const svgRef = useRef();\n  const wrapperRef = useRef();\n  const dimensions = useResizeObserver(wrapperRef); // const [dat, setData] = useState([25, 30, 45, 60, 20, 65, 75]);\n  //Wird einmal aufgerufen, wenn DOM-Element gerendert wird, und wenn sich Elemente im Array verÃ¤ndern\n\n  useEffect(() => {\n    const svg = select(svgRef.current);\n    console.log(data); //const test = data.value[0];\n    // console.log(test);\n\n    if (!dimensions) return; //Sortieren nach Jahreszahl\n\n    const minDate = new Date(min(data, value => value.time));\n    const maxDate = new Date(max(data, value => value.time));\n    console.log(minDate);\n    console.log(maxDate);\n    const xScale = scaleTime().domain([minDate, maxDate]) // .domain([0, data.length-1]) //0 zu 0 ; 6 zu 200\n    .range([0, dimensions.width]); //change\n    // .padding(0.5);\n\n    const yScale = scaleLinear().domain([0, 100]) //todo\n    .range([dimensions.height, 30]); //change\n\n    const yAxis = axisLeft(yScale);\n    svg.select('.y-axis').call(yAxis);\n    const xAxis = axisBottom(xScale);\n    svg.select(\".x-axis\").style('transform', `translateY(${dimensions.height}px)`).call(xAxis);\n    const myLine = line().x(d => xScale(new Date(d.time))).y(d => yScale(d.value) - dimensions.height).curve(curveCardinal);\n    svg.selectAll(\"path\").data([data]).join(\"path\").attr(\"d\", value => myLine(value)).attr(\"fill\", \"none\").attr(\"stroke\", \"#2770bc\").attr(\"stroke-width\", \"5\").on(\"mouseover\", (value, index) => {\n      svg.selectAll(\".tooltip\").data([value]).join(\"text\").attr(\"class\", \"tooltip\").attr(\"stroke\", \"red\").text(value);\n      console.log(value => value.value);\n    }).on(\"mouseleave\", () => svg.select(\".tooltip\").remove());\n    var focus = svg.append(\"path\").attr(\"class\", \"focus\").style(\"display\", \"none\");\n    focus.append(\"line\").attr(\"class\", \"x-hover-line hover-line\").attr(\"y1\", 0).attr(\"y2\", dimensions.height);\n    focus.append(\"line\").attr(\"class\", \"y-hover-line hover-line\").attr(\"x1\", dimensions.width).attr(\"x2\", dimensions.width);\n    focus.append(\"circle\").attr(\"r\", 7.5);\n    focus.append(\"text\").attr(\"x\", 15).attr(\"dy\", \".31em\");\n    svg.append(\"rect\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\").attr(\"class\", \"overlay\").attr(\"width\", dimensions.width).attr(\"height\", dimensions.height).on(\"mouseover\", function () {\n      focus.style(\"display\", null);\n    }).on(\"mouseout\", function () {\n      focus.style(\"display\", \"none\");\n    }).on(\"mousemove\", mousemove);\n\n    function mousemove() {\n      var x0 = xScale.invert(mouse(this)[0]),\n          i = bisectDate(data, x0, 1),\n          d0 = data[i - 1],\n          d1 = data[i],\n          d = x0 - d0.time > d1.time - x0 ? d1 : d0;\n      focus.attr(\"transform\", \"translate(\" + x(d.time) + \",\" + y(d.value) + \")\");\n      focus.select(\"text\").text(function () {\n        return d.value;\n      });\n      focus.select(\".x-hover-line\").attr(\"y2\", dimensions.height - y(d.value));\n      focus.select(\".y-hover-line\").attr(\"x2\", dimensions.width + dimensions.width);\n    }\n  }, [data, dimensions]);\n  return React.createElement(\"div\", {\n    ref: wrapperRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, React.createElement(\"svg\", {\n    ref: svgRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, React.createElement(\"g\", {\n    className: \"x-axis\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }), React.createElement(\"g\", {\n    className: \"y-axis\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  })));\n}\n\nexport default LineCharts;","map":{"version":3,"sources":["D:/Studium/Bachelor/WebApp/visapp/src/components/charts/LineChart.jsx"],"names":["React","useRef","useEffect","useState","select","line","curveCardinal","axisBottom","axisLeft","scaleTime","scaleLinear","scaleBand","min","max","ticks","useResizeObserver","LineCharts","data","highlight","svgRef","wrapperRef","dimensions","svg","current","console","log","minDate","Date","value","time","maxDate","xScale","domain","range","width","yScale","height","yAxis","call","xAxis","style","myLine","x","d","y","curve","selectAll","join","attr","on","index","text","remove","focus","append","margin","left","top","mousemove","x0","invert","mouse","i","bisectDate","d0","d1"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect, useState} from \"react\";\r\nimport { select, line, curveCardinal, axisBottom, axisLeft, scaleTime, scaleLinear, scaleBand, min, max, ticks} from 'd3';\r\nimport '../../styles/charts.css'\r\nimport useResizeObserver from './useReziseObserver'\r\n\r\nfunction LineCharts({ data, highlight }) {\r\n   const svgRef = useRef();\r\n   const wrapperRef = useRef();\r\n   const dimensions = useResizeObserver(wrapperRef);\r\n   \r\n  // const [dat, setData] = useState([25, 30, 45, 60, 20, 65, 75]);\r\n   //Wird einmal aufgerufen, wenn DOM-Element gerendert wird, und wenn sich Elemente im Array verÃ¤ndern\r\n   useEffect(() => {\r\n\r\n      const svg = select(svgRef.current);\r\n         console.log(data);\r\n      //const test = data.value[0];\r\n     // console.log(test);\r\n         if(!dimensions) return;\r\n      \r\n      //Sortieren nach Jahreszahl\r\n     \r\n      const minDate = new Date (min(data, value => value.time));\r\n      const maxDate = new Date (max(data, value => value.time));\r\n      \r\n     \r\n\r\n      console.log(minDate);\r\n      console.log(maxDate);\r\n\r\n\r\n      const xScale = scaleTime()\r\n          .domain([minDate,maxDate])\r\n        // .domain([0, data.length-1]) //0 zu 0 ; 6 zu 200\r\n         .range([0, dimensions.width]) //change\r\n        // .padding(0.5);\r\n      const yScale =  scaleLinear()\r\n         .domain([0, 100])   //todo\r\n         .range([dimensions.height, 30]);  //change\r\n\r\n      const yAxis = axisLeft(yScale);   \r\n      svg\r\n      .select('.y-axis')\r\n      .call(yAxis);\r\n\r\n     const xAxis = axisBottom(xScale)\r\n     svg\r\n      .select(\".x-axis\")\r\n      .style('transform', `translateY(${dimensions.height}px)`)\r\n      .call(xAxis)\r\n\r\n      const myLine = line()\r\n      .x((d)=> (xScale(new Date(d.time))))\r\n      .y((d)=> (yScale(d.value) - dimensions.height))\r\n      .curve(curveCardinal);\r\n    svg\r\n      .selectAll(\"path\")\r\n      .data([data])\r\n      .join(\"path\")\r\n      .attr(\"d\", value => myLine(value))\r\n      .attr(\"fill\", \"none\")\r\n      .attr(\"stroke\", \"#2770bc\")\r\n      .attr(\"stroke-width\", \"5\" )\r\n      .on(\"mouseover\", (value, index) => {\r\n         svg\r\n           .selectAll(\".tooltip\")\r\n           .data([value])\r\n           .join(\"text\")\r\n           .attr(\"class\", \"tooltip\")\r\n           .attr(\"stroke\", \"red\")\r\n           .text(value)\r\n           console.log(value => value.value);\r\n       })\r\n       .on(\"mouseleave\", () => svg.select(\".tooltip\").remove())\r\n\r\n       var focus = svg.append(\"path\")\r\n        .attr(\"class\", \"focus\")\r\n        .style(\"display\", \"none\");\r\n\r\n        focus.append(\"line\")\r\n        .attr(\"class\", \"x-hover-line hover-line\")\r\n        .attr(\"y1\", 0)\r\n        .attr(\"y2\", dimensions.height);\r\n\r\n    focus.append(\"line\")\r\n        .attr(\"class\", \"y-hover-line hover-line\")\r\n        .attr(\"x1\", dimensions.width)\r\n        .attr(\"x2\", dimensions.width);\r\n\r\n    focus.append(\"circle\")\r\n        .attr(\"r\", 7.5);\r\n\r\n    focus.append(\"text\")\r\n        .attr(\"x\", 15)\r\n      \t.attr(\"dy\", \".31em\");\r\n\r\n         svg.append(\"rect\")\r\n         .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\")\r\n         .attr(\"class\", \"overlay\")\r\n         .attr(\"width\", dimensions.width)\r\n         .attr(\"height\", dimensions.height)\r\n         .on(\"mouseover\", function() { focus.style(\"display\", null); })\r\n         .on(\"mouseout\", function() { focus.style(\"display\", \"none\"); })\r\n         .on(\"mousemove\", mousemove);\r\n \r\n     function mousemove() {\r\n       var x0 = xScale.invert(mouse(this)[0]),\r\n           i = bisectDate(data, x0, 1),\r\n           d0 = data[i - 1],\r\n           d1 = data[i],\r\n           d = x0 - d0.time > d1.time - x0 ? d1 : d0;\r\n       focus.attr(\"transform\", \"translate(\" + x(d.time) + \",\" + y(d.value) + \")\");\r\n       focus.select(\"text\").text(function() { return d.value; });\r\n       focus.select(\".x-hover-line\").attr(\"y2\", dimensions.height - y(d.value));\r\n       focus.select(\".y-hover-line\").attr(\"x2\", dimensions.width + dimensions.width);\r\n     }\r\n\r\n   }, [data, dimensions]);\r\n   return (\r\n         <div ref={wrapperRef}>\r\n            <svg ref={svgRef}>\r\n               <g className='x-axis' />\r\n               <g className=\"y-axis\" />\r\n            </svg>\r\n            </div>\r\n   );\r\n}\r\n\r\nexport default LineCharts;"]},"metadata":{},"sourceType":"module"}