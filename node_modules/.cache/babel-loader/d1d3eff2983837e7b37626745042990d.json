{"ast":null,"code":"var _jsxFileName = \"D:\\\\Studium\\\\Bachelor\\\\WebApp\\\\visapp\\\\src\\\\components\\\\charts\\\\MobilnutzungChart.jsx\";\nimport React, { useRef, useEffect } from \"react\";\nimport { select, line, curveCardinal, axisBottom, axisLeft, scaleTime, scaleLinear, min, max, bisector, mouse, entries } from 'd3';\nimport '../../styles/charts.css';\nimport useResizeObserver from './useReziseObserver';\n\nfunction LineLivingOnline({\n  data,\n  property,\n  colorline\n}) {\n  const svgRef = useRef();\n  const wrapperRef = useRef();\n  const dimensions = useResizeObserver(wrapperRef);\n  useEffect(() => {\n    if (!dimensions) return;\n    const svg = select(svgRef.current);\n    var filter; //Daten filtern\n\n    var filtered = data.filter(a => a.geo === property);\n\n    for (var i = 0; i < filtered.length; i++) {\n      filter = filtered[i].time;\n    }\n\n    var vales = entries(filter); //Sortieren nach Jahreszahl\n\n    const minDate = new Date(min(vales, value => value.key));\n    const maxDate = new Date(max(vales, value => value.key));\n    const xScale = scaleTime().domain([minDate - 2.628e+9, maxDate]).range([-1, dimensions.width]);\n    const yScale = scaleLinear().domain([0, 100]).range([dimensions.height, 0]);\n    const yAxis = axisLeft(yScale).tickSize(0);\n    svg.select('.y-axis').style('color', 'grey').style('font-size', '14').call(yAxis);\n    const xAxis = axisBottom(xScale);\n    svg.select(\".x-axis\").join(\".x-axis\").style('transform', `translateY(${dimensions.height}px)`).style('color', 'grey').style('font-size', '14').style('stroke-width', 1).call(xAxis); //Grids\n\n    svg.select(\"g\").append(\"g\").join(\"g\").attr(\"class\", \"grid\").attr('transform', 'translate(0,' + -dimensions.height + ')').call(axisLeft(yScale).tickSize(-dimensions.width).tickFormat(\"\")); //X-Achsen-Beschriftung\n\n    svg.select(\"text\").join(\"text\").attr(\"text-anchor\", \"end\").attr(\"fill\", \"grey\").attr(\"x\", dimensions.width).attr(\"y\", +dimensions.height / 8).attr(\"font-weight\", \"bold\").text(\"Jahr\"); //Y-Achsen-Beschrifzung\n\n    svg.append(\"text\").attr(\"text-anchor\", \"end\").attr(\"transform\", \"rotate(-90)\").attr(\"fill\", \"grey\").attr(\"y\", -50).attr(\"x\", 0).text(\"Prozent\"); //Tooltip-Elemente\n\n    var focusBox = svg.append('g').append('rect').style(\"opacity\", 0).attr(\"width\", 90).attr(\"height\", 30).style(\"fill\", \"#e0e2e5\").style(\"stroke\", \"#e0e2e5\").style(\"stroke\", colorline).style(\"stroke-width\", \"1\").attr(\"rx\", 4).attr(\"ry\", 4);\n    var focus = svg.append('g').append('circle').style(\"fill\", colorline).attr('r', 8.5).style(\"opacity\", 0);\n    var focusText = svg.append('g').append('text').style(\"opacity\", 0).attr(\"text-anchor\", \"left\").attr(\"alignment-baseline\", \"middle\").attr(\"fill\", \"#203040\").style(\"font-size\", 13).style(\"font-weight\", \"bold\");\n    svg.append('rect').style(\"fill\", \"none\").style(\"pointer-events\", \"all\").attr('width', dimensions.width).attr('height', dimensions.height).on('mouseover', mouseover).on('mousemove', mousemove).on('mouseout', mouseout); //Lines\n\n    const myLine = line().x(d => xScale(new Date(d.key))).y(d => yScale(d.value)).defined(d => d.value != 0).curve(curveCardinal); //herausfiltern der fehlenden Werte\n\n    filtered = vales.filter(myLine.defined());\n    svg.selectAll(\".newline\").data([filtered]).join(\"path\").attr(\"class\", \"newline\").transition().duration(500).attr(\"d\", (value, index) => myLine(value)).transition().attr(\"fill\", \"none\").attr(\"stroke\", colorline).attr(\"stroke-dasharray\", \"3, 3\");\n    svg.selectAll(\".newerline\").data([vales]).join(\"path\").attr(\"class\", \"newerline\").transition().duration(500).attr(\"d\", (value, index) => myLine(value)).transition().attr(\"fill\", \"none\").attr(\"stroke\", colorline).attr(\"stroke-width\", \"5\").attr(\"stroke-linecap\", \"round\"); //Tooltip\n\n    function mouseover() {\n      focus.style(\"opacity\", 1);\n      focusText.style(\"opacity\", 1);\n      focusBox.style(\"opacity\", 1);\n    }\n\n    function mousemove() {\n      var x0 = xScale.invert(mouse(this)[0]);\n      const bisect = bisector(d => new Date(d.key)).left;\n      const idx = bisect(filtered, x0, 1);\n      const selectedData = filtered[idx];\n      focus.transition().duration(50).attr(\"cx\", xScale(new Date(selectedData.key))).attr(\"cy\", yScale(selectedData.value));\n      focusText.transition().duration(50).text(selectedData.key + \": \" + selectedData.value + \"%\").attr(\"x\", xScale(new Date(selectedData.key))).attr(\"y\", yScale(selectedData.value) - 30);\n      focusBox.transition().duration(50).attr(\"x\", xScale(new Date(selectedData.key)) - 15).attr(\"y\", yScale(selectedData.value) - 45);\n    }\n\n    function mouseout() {\n      focus.style(\"opacity\", 0);\n      focusText.style(\"opacity\", 0);\n      focusBox.style(\"opacity\", 0);\n    }\n  }, [data, dimensions, property]);\n  return React.createElement(\"div\", {\n    ref: wrapperRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  }, React.createElement(\"svg\", {\n    ref: svgRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  }, React.createElement(\"g\", {\n    className: \"x-axis\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204\n    },\n    __self: this\n  }), React.createElement(\"g\", {\n    className: \"y-axis\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205\n    },\n    __self: this\n  })));\n}\n\nexport default LineLivingOnline;","map":{"version":3,"sources":["D:/Studium/Bachelor/WebApp/visapp/src/components/charts/MobilnutzungChart.jsx"],"names":["React","useRef","useEffect","select","line","curveCardinal","axisBottom","axisLeft","scaleTime","scaleLinear","min","max","bisector","mouse","entries","useResizeObserver","LineLivingOnline","data","property","colorline","svgRef","wrapperRef","dimensions","svg","current","filter","filtered","a","geo","i","length","time","vales","minDate","Date","value","key","maxDate","xScale","domain","range","width","yScale","height","yAxis","tickSize","style","call","xAxis","join","append","attr","tickFormat","text","focusBox","focus","focusText","on","mouseover","mousemove","mouseout","myLine","x","d","y","defined","curve","selectAll","transition","duration","index","x0","invert","bisect","left","idx","selectedData"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect} from \"react\";\r\nimport { select, line, curveCardinal, axisBottom, axisLeft, scaleTime, scaleLinear, min, max, bisector, mouse, entries} from 'd3';\r\nimport '../../styles/charts.css'\r\nimport useResizeObserver from './useReziseObserver'\r\n\r\nfunction LineLivingOnline({ data, property, colorline}) {\r\n   const svgRef = useRef();\r\n   const wrapperRef = useRef();\r\n   const dimensions = useResizeObserver(wrapperRef);\r\n   useEffect(() => {\r\n      if(!dimensions) return;\r\n\r\n      const svg = select(svgRef.current);\r\n      var filter;\r\n     \r\n      //Daten filtern\r\n         var filtered = data.filter(a=>a.geo===property);         \r\n            for(var i = 0; i < filtered.length; i ++) {\r\n             filter = filtered[i].time; \r\n            }\r\n        var vales= entries(filter);\r\n\r\n      //Sortieren nach Jahreszahl\r\n      const minDate = new Date (min(vales, value => value.key));\r\n      const maxDate = new Date (max(vales, value => value.key));     \r\n\r\n      const xScale = scaleTime()\r\n      .domain([minDate - 2.628e+9,maxDate])   \r\n      .range([-1, dimensions.width]) \r\n        \r\n      const yScale =  scaleLinear()\r\n      .domain([0, 100])\r\n      .range([dimensions.height, 0]);\r\n\r\n      \r\n      const yAxis = axisLeft(yScale).tickSize(0);   \r\n      svg\r\n      .select('.y-axis')\r\n      .style('color', 'grey')\r\n      .style('font-size', '14')\r\n      .call(yAxis);\r\n\r\n     const xAxis = axisBottom(xScale)\r\n     svg\r\n      .select(\".x-axis\")\r\n      .join(\".x-axis\")\r\n      .style('transform', `translateY(${dimensions.height}px)`)\r\n      .style('color', 'grey')\r\n      .style('font-size', '14')\r\n      .style('stroke-width', 1)\r\n      .call(xAxis);\r\n\r\n      //Grids\r\n      svg.select(\"g\").append(\"g\")\r\n         .join(\"g\")\r\n         .attr(\"class\", \"grid\")\r\n         .attr('transform', 'translate(0,' + -dimensions.height + ')')\r\n         .call(axisLeft(yScale)\r\n            .tickSize(-dimensions.width)\r\n            .tickFormat(\"\")\r\n            )\r\n      \r\n      //X-Achsen-Beschriftung\r\n      svg.select(\"text\").join(\"text\")\r\n      .attr(\"text-anchor\", \"end\")\r\n      .attr(\"fill\", \"grey\")\r\n      .attr(\"x\", dimensions.width)\r\n       .attr(\"y\", + dimensions.height/ 8)\r\n       .attr(\"font-weight\", \"bold\")\r\n       .text(\"Jahr\");      \r\n      //Y-Achsen-Beschrifzung\r\n      svg.append(\"text\")\r\n      .attr(\"text-anchor\", \"end\")\r\n      .attr(\"transform\", \"rotate(-90)\")\r\n      .attr(\"fill\", \"grey\")\r\n      .attr(\"y\", - 50)\r\n      .attr(\"x\", 0)\r\n      .text(\"Prozent\")\r\n\r\n     //Tooltip-Elemente\r\n     var focusBox = svg\r\n      .append('g')\r\n      .append('rect')\r\n      .style(\"opacity\", 0)\r\n      .attr(\"width\", 90)\r\n      .attr(\"height\", 30)\r\n      .style(\"fill\", \"#e0e2e5\")\r\n      .style(\"stroke\", \"#e0e2e5\")\r\n      .style(\"stroke\", colorline)\r\n      .style(\"stroke-width\", \"1\" )\r\n      .attr(\"rx\", 4)\r\n      .attr(\"ry\", 4);\r\n\r\n      var focus = svg\r\n      .append('g')\r\n      .append('circle')\r\n      .style(\"fill\", colorline)\r\n      .attr('r', 8.5)\r\n      .style(\"opacity\", 0);\r\n\r\n      var focusText = svg\r\n      .append('g')\r\n      .append('text')\r\n      .style(\"opacity\", 0)\r\n      .attr(\"text-anchor\", \"left\")\r\n      .attr(\"alignment-baseline\", \"middle\")\r\n      .attr(\"fill\", \"#203040\")\r\n      .style(\"font-size\", 13)\r\n      .style(\"font-weight\", \"bold\")\r\n      \r\n      svg\r\n      .append('rect')\r\n      .style(\"fill\", \"none\")\r\n      .style(\"pointer-events\", \"all\")\r\n      .attr('width', dimensions.width)\r\n      .attr('height', dimensions.height)\r\n      .on('mouseover', mouseover)\r\n      .on('mousemove', mousemove)\r\n      .on('mouseout', mouseout); \r\n      \r\n     \r\n    //Lines\r\n      const myLine = line()\r\n      .x((d)=> (xScale(new Date(d.key))))\r\n      .y((d)=> (yScale(d.value)))\r\n      .defined((d)=> d.value != 0)\r\n      .curve(curveCardinal);\r\n    \r\n      //herausfiltern der fehlenden Werte\r\n      filtered = vales.filter(myLine.defined());\r\n      \r\n        svg\r\n         .selectAll(\".newline\")\r\n         .data([filtered])\r\n         .join(\"path\")\r\n         .attr(\"class\", \"newline\")\r\n         .transition()\r\n         .duration(500)\r\n         .attr(\"d\", (value, index) => myLine(value))\r\n         .transition()\r\n         .attr(\"fill\", \"none\")\r\n         .attr(\"stroke\", colorline)\r\n         .attr(\"stroke-dasharray\", (\"3, 3\"))\r\n        \r\n      svg\r\n         .selectAll(\".newerline\")\r\n         .data([vales])\r\n         .join(\"path\")\r\n         .attr(\"class\", \"newerline\")\r\n         .transition()\r\n         .duration(500)\r\n         .attr(\"d\", (value, index) => myLine(value))\r\n         .transition()\r\n         .attr(\"fill\", \"none\")\r\n         .attr(\"stroke\", colorline)\r\n         .attr(\"stroke-width\", \"5\" )\r\n         .attr(\"stroke-linecap\", \"round\")\r\n\r\n   \r\n      //Tooltip\r\n      function mouseover() {\r\n         focus.style(\"opacity\", 1)\r\n         focusText.style(\"opacity\",1)\r\n         focusBox.style(\"opacity\",1)\r\n       }\r\n       \r\n       function mousemove() {\r\n         var x0 = xScale.invert(mouse(this)[0]);\r\n         const bisect = bisector(d => new Date(d.key)).left;\r\n         const idx = bisect(filtered, x0, 1);\r\n         const selectedData = filtered[idx];\r\n           \r\n       focus\r\n         .transition()\r\n         .duration(50)\r\n         .attr(\"cx\", xScale(new Date(selectedData.key)))\r\n         .attr(\"cy\", yScale(selectedData.value))\r\n      \r\n         focusText\r\n         .transition()\r\n         .duration(50)\r\n            .text(selectedData.key + \": \" + selectedData.value + \"%\")\r\n            .attr(\"x\", xScale(new Date (selectedData.key)))\r\n            .attr(\"y\", yScale(selectedData.value) - 30)\r\n            \r\n         focusBox\r\n         .transition()\r\n         .duration(50)\r\n            .attr(\"x\", xScale(new Date (selectedData.key))- 15)\r\n            .attr(\"y\", yScale(selectedData.value) - 45)\r\n\r\n         }\r\n       function mouseout() {\r\n         focus.style(\"opacity\", 0)\r\n         focusText.style(\"opacity\", 0)\r\n         focusBox.style(\"opacity\", 0)\r\n       }\r\n\r\n\r\n   }, [data, dimensions, property]);\r\n   return (\r\n         <div ref={wrapperRef}>\r\n            <svg ref={svgRef}>\r\n               <g className='x-axis' />\r\n               <g className=\"y-axis\" />\r\n            </svg>\r\n            </div>\r\n   );\r\n}\r\n\r\nexport default LineLivingOnline;"]},"metadata":{},"sourceType":"module"}