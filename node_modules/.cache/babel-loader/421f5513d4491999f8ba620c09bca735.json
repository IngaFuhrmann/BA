{"ast":null,"code":"var _jsxFileName = \"D:\\\\Studium\\\\Bachelor\\\\WebApp\\\\visapp\\\\src\\\\components\\\\charts\\\\BarHighInternet.jsx\";\nimport React, { useRef, useEffect, useState } from \"react\";\nimport { select, min, max, entries, axisBottom, axisLeft, scaleTime, scaleLinear, schemePastel1, scaleOrdinal, arc, pie } from 'd3';\nimport useResizeObserver from \"./useReziseObserver\";\nimport '../../styles/highlight.css';\n\nfunction BarHighInternet({\n  data\n}) {\n  const svgRef = useRef();\n  const wrapperRef = useRef();\n  const dimensions = useResizeObserver(wrapperRef);\n  useEffect(() => {\n    const svg = select(svgRef.current);\n    var filterme;\n    if (!dimensions) return;\n    console.log(data);\n\n    for (var i = 0; i < data.length; i++) {\n      var filterme = data[i].time;\n    }\n\n    var vales = entries(filterme);\n    var width = dimensions.width / 1.5;\n    var height = dimensions.height;\n    var radius = Math.min(width, height) / 2;\n    var color = scaleOrdinal().domain(vales).range([\"#98abc5\", \"#8a89a6\", \"#7b6888\", \"#6b486b\", \"#a05d56\"]);\n    var pied = pie().value(d => d.value)(vales);\n    svg.selectAll('whatever').data(pied).join('path').attr('d', arc().innerRadius(100) // This is the size of the donut hole\n    .outerRadius(radius)).attr('fill', function (d) {\n      return color(d.data.key);\n    }).attr(\"stroke\", \"white\").style(\"stroke-width\", \"2px\").style(\"opacity\", 0.7);\n    /* for(var i = 0; i < data.length; i ++) {\r\n         var filterme = data[i].time; \r\n          }\r\n            var vales = entries(filterme);\r\n      //Sortieren nach Jahreszahl\r\n      const xScale = scaleBand()\r\n      .domain([2009, 2011, 2013, 2015, 2017, 2019])   \r\n     .range([0, dimensions.width]) \r\n     .padding(0.2)\r\n    \n     const yScale =  scaleLinear()\r\n     .domain([0, 100])\r\n      .range([dimensions.height, 0])\r\n      \r\n      const xAxis = axisBottom(xScale).ticks(5).tickSize(0).tickPadding(10);\r\n        svg\r\n        .style('font-size', '11')\r\n        .style('color', 'white')\r\n         .select(\".x-axis\")\r\n         .call(xAxis);\r\n     \r\n         svg.select(\".domain\").remove()\r\n           svg.select(\".x-axis\")\r\n         .attr('transform', 'translate(0,' + dimensions.height + ')')\r\n        const yAxis = axisLeft(yScale)  \r\n           svg\r\n             .select(\".y-axis\")\r\n             .remove()\r\n             \r\n             svg\r\n           .selectAll(\".bar\")\r\n           .data(vales)\r\n           .join(\"rect\")\r\n           .attr(\"class\", \"bar\")\r\n           .attr(\"fill\", \"#c8a3c8\")\r\n           .attr(\"x\", (d)=> (xScale(d.key)))\r\n           .attr(\"y\", (d)=> (yScale(d.value)))\r\n           .attr(\"height\", (d)=> yScale(0) - yScale(d.value))\r\n           .attr(\"width\", xScale.bandwidth )\r\n          .on(\"mouseenter\", (value, index) => {\r\n             svg\r\n               .selectAll(\".tooltip\")\r\n               .data([value])\r\n               .join(enter => enter.append(\"text\"))\r\n               .attr(\"class\", \"tooltip\")\r\n               .text((value.value) + \"%\")\r\n               .attr(\"x\", xScale(value.key) + xScale.bandwidth()/ 6)\r\n               .attr(\"y\", yScale(value.value) + 15)\r\n               .attr(\"opacity\", 1)\r\n               .transition()\r\n               .attr(\"fill\", \"white\")\r\n             })\r\n             \r\n             .on(\"mouseleave\", () => \r\n               svg.select(\".tooltip\").remove()\r\n               .transition()\r\n    )\r\n      */\n  }, [data, dimensions]);\n  return React.createElement(\"div\", {\n    className: \"chartHigh\",\n    ref: wrapperRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(\"svg\", {\n    ref: svgRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, React.createElement(\"g\", {\n    className: \"x-axis\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }), React.createElement(\"g\", {\n    className: \"y-axis\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  })));\n}\n\nexport default BarHighInternet;","map":{"version":3,"sources":["D:/Studium/Bachelor/WebApp/visapp/src/components/charts/BarHighInternet.jsx"],"names":["React","useRef","useEffect","useState","select","min","max","entries","axisBottom","axisLeft","scaleTime","scaleLinear","schemePastel1","scaleOrdinal","arc","pie","useResizeObserver","BarHighInternet","data","svgRef","wrapperRef","dimensions","svg","current","filterme","console","log","i","length","time","vales","width","height","radius","Math","color","domain","range","pied","value","d","selectAll","join","attr","innerRadius","outerRadius","key","style"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\r\nimport { select, min, max, entries, axisBottom, axisLeft, scaleTime, scaleLinear, schemePastel1, scaleOrdinal, arc, pie} from 'd3';\r\nimport useResizeObserver from \"./useReziseObserver\";\r\nimport '../../styles/highlight.css'\r\n\r\n\r\nfunction BarHighInternet({ data}) {\r\n   const svgRef = useRef();\r\n   const wrapperRef = useRef();\r\n   const dimensions = useResizeObserver(wrapperRef);\r\n\r\n   useEffect(() => {\r\n\r\n    const svg = select(svgRef.current);\r\n    var filterme; \r\n    if(!dimensions) return;\r\n    console.log(data);\r\n\r\n    for(var i = 0; i < data.length; i ++) {\r\n      var filterme = data[i].time; \r\n       }\r\n\r\n       var vales = entries(filterme);\r\n\r\n\r\n    var width= dimensions.width /1.5;\r\n    var height = dimensions.height;\r\n    var radius = Math.min(width, height) / 2;\r\n    var color = scaleOrdinal()\r\n    .domain(vales)\r\n  .range([\"#98abc5\", \"#8a89a6\", \"#7b6888\", \"#6b486b\", \"#a05d56\"])\r\n\r\n    var pied = pie().value((d) => d.value)(vales);\r\n\r\n\r\n      svg\r\n  .selectAll('whatever')\r\n  .data(pied)\r\n  .join('path')\r\n  .attr('d', arc()\r\n    .innerRadius(100)         // This is the size of the donut hole\r\n    .outerRadius(radius)\r\n  )\r\n  .attr('fill', function(d){ return(color(d.data.key)) })\r\n  .attr(\"stroke\", \"white\")\r\n  .style(\"stroke-width\", \"2px\")\r\n  .style(\"opacity\", 0.7)\r\n      \r\n   /* for(var i = 0; i < data.length; i ++) {\r\n        var filterme = data[i].time; \r\n         }\r\n\r\n         var vales = entries(filterme);\r\n\r\n   //Sortieren nach Jahreszahl\r\n\r\n   const xScale = scaleBand()\r\n     .domain([2009, 2011, 2013, 2015, 2017, 2019])   \r\n    .range([0, dimensions.width]) \r\n    .padding(0.2)\r\n  \r\n    const yScale =  scaleLinear()\r\n    .domain([0, 100])\r\n     .range([dimensions.height, 0])\r\n     \r\n\r\n   const xAxis = axisBottom(xScale).ticks(5).tickSize(0).tickPadding(10);\r\n       svg\r\n       .style('font-size', '11')\r\n       .style('color', 'white')\r\n        .select(\".x-axis\")\r\n        .call(xAxis);\r\n    \r\n        svg.select(\".domain\").remove()\r\n\r\n        svg.select(\".x-axis\")\r\n        .attr('transform', 'translate(0,' + dimensions.height + ')')\r\n\r\n     const yAxis = axisLeft(yScale)  \r\n          svg\r\n            .select(\".y-axis\")\r\n            .remove()\r\n\r\n          \r\n            svg\r\n          .selectAll(\".bar\")\r\n          .data(vales)\r\n          .join(\"rect\")\r\n          .attr(\"class\", \"bar\")\r\n          .attr(\"fill\", \"#c8a3c8\")\r\n          .attr(\"x\", (d)=> (xScale(d.key)))\r\n          .attr(\"y\", (d)=> (yScale(d.value)))\r\n          .attr(\"height\", (d)=> yScale(0) - yScale(d.value))\r\n          .attr(\"width\", xScale.bandwidth )\r\n         .on(\"mouseenter\", (value, index) => {\r\n            svg\r\n              .selectAll(\".tooltip\")\r\n              .data([value])\r\n              .join(enter => enter.append(\"text\"))\r\n              .attr(\"class\", \"tooltip\")\r\n              .text((value.value) + \"%\")\r\n              .attr(\"x\", xScale(value.key) + xScale.bandwidth()/ 6)\r\n              .attr(\"y\", yScale(value.value) + 15)\r\n              .attr(\"opacity\", 1)\r\n              .transition()\r\n              .attr(\"fill\", \"white\")\r\n            })\r\n            \r\n            .on(\"mouseleave\", () => \r\n              svg.select(\".tooltip\").remove()\r\n              .transition()\r\n   )\r\n\r\n   */\r\n}, [data, dimensions]);\r\nreturn (\r\n <div className=\"chartHigh\" ref={wrapperRef}>\r\n    <svg ref={svgRef}>\r\n      <g className=\"x-axis\" />\r\n      <g className=\"y-axis\" />\r\n    </svg>\r\n  </div>\r\n);\r\n}\r\n\r\nexport default BarHighInternet;"]},"metadata":{},"sourceType":"module"}