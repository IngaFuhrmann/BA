{"ast":null,"code":"import _slicedToArray from \"D:\\\\Studium\\\\Bachelor\\\\WebApp\\\\visapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Studium\\\\Bachelor\\\\WebApp\\\\visapp\\\\src\\\\components\\\\charts\\\\NumberGender.jsx\";\nimport React, { useRef, useEffect, useState } from \"react\";\nimport { select, line, curveCardinal, axisBottom, axisLeft, scaleTime, scaleLinear, scaleBand, min, max, event, bisector, mouse, ticks } from 'd3';\nimport useResizeObserver from \"./useReziseObserver\";\n\nfunction NumberGen({\n  data,\n  property,\n  gen\n}) {\n  const svgRef = useRef();\n  const wrapperRef = useRef();\n  const dimensions = useResizeObserver(wrapperRef);\n\n  const _useState = useState([0, 1.5]),\n        _useState2 = _slicedToArray(_useState, 2),\n        selection = _useState2[0],\n        setSelection = _useState2[1];\n\n  useEffect(() => {\n    const svg = select(svgRef.current);\n    if (!dimensions) return;\n    var gauge4 = loadLiquidFillGauge(\"fillgauge4\", 50, config3);\n    var config4 = liquidFillGaugeDefaultSettings();\n    config4.circleThickness = 0.15;\n    config4.circleColor = \"#808015\";\n    config4.textColor = \"#555500\";\n    config4.waveTextColor = \"#FFFFAA\";\n    config4.waveColor = \"#AAAA39\";\n    config4.textVertPosition = 0.8;\n    config4.waveAnimateTime = 1000;\n    config4.waveHeight = 0.05;\n    config4.waveAnimate = true;\n    config4.waveRise = false;\n    config4.waveHeightScaling = false;\n    config4.waveOffset = 0.25;\n    config4.textSize = 0.75;\n    config4.waveCount = 3;\n    var filtered = data.filter(a => a.geo == property);\n    var finalFilter = filtered.filter(b => b.gen == gen);\n    console.log(finalFilter);\n  }, [data, dimensions, property]);\n  return React.createElement(\"div\", {\n    ref: wrapperRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"svg\", {\n    id: \"fillgauge4\",\n    ref: svgRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }));\n}\n\nexport default NumberGen;","map":{"version":3,"sources":["D:/Studium/Bachelor/WebApp/visapp/src/components/charts/NumberGender.jsx"],"names":["React","useRef","useEffect","useState","select","line","curveCardinal","axisBottom","axisLeft","scaleTime","scaleLinear","scaleBand","min","max","event","bisector","mouse","ticks","useResizeObserver","NumberGen","data","property","gen","svgRef","wrapperRef","dimensions","selection","setSelection","svg","current","gauge4","loadLiquidFillGauge","config3","config4","liquidFillGaugeDefaultSettings","circleThickness","circleColor","textColor","waveTextColor","waveColor","textVertPosition","waveAnimateTime","waveHeight","waveAnimate","waveRise","waveHeightScaling","waveOffset","textSize","waveCount","filtered","filter","a","geo","finalFilter","b","console","log"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,aAAvB,EAAsCC,UAAtC,EAAkDC,QAAlD,EAA4DC,SAA5D,EAAuEC,WAAvE,EAAoFC,SAApF,EAA+FC,GAA/F,EAAoGC,GAApG,EAAyGC,KAAzG,EAAgHC,QAAhH,EAA0HC,KAA1H,EAAiIC,KAAjI,QAA6I,IAA7I;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;;AAGA,SAASC,SAAT,CAAmB;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,QAAR;AAAkBC,EAAAA;AAAlB,CAAnB,EAA4C;AAExC,QAAMC,MAAM,GAAGtB,MAAM,EAArB;AACA,QAAMuB,UAAU,GAAGvB,MAAM,EAAzB;AACA,QAAMwB,UAAU,GAAGP,iBAAiB,CAACM,UAAD,CAApC;;AAJwC,oBAKNrB,QAAQ,CAAC,CAAC,CAAD,EAAI,GAAJ,CAAD,CALF;AAAA;AAAA,QAKjCuB,SALiC;AAAA,QAKtBC,YALsB;;AAOxCzB,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAM0B,GAAG,GAAGxB,MAAM,CAACmB,MAAM,CAACM,OAAR,CAAlB;AAEC,QAAG,CAACJ,UAAJ,EAAgB;AAEhB,QAAIK,MAAM,GAAGC,mBAAmB,CAAC,YAAD,EAAe,EAAf,EAAmBC,OAAnB,CAAhC;AACL,QAAIC,OAAO,GAAGC,8BAA8B,EAA5C;AACAD,IAAAA,OAAO,CAACE,eAAR,GAA0B,IAA1B;AACAF,IAAAA,OAAO,CAACG,WAAR,GAAsB,SAAtB;AACAH,IAAAA,OAAO,CAACI,SAAR,GAAoB,SAApB;AACAJ,IAAAA,OAAO,CAACK,aAAR,GAAwB,SAAxB;AACAL,IAAAA,OAAO,CAACM,SAAR,GAAoB,SAApB;AACAN,IAAAA,OAAO,CAACO,gBAAR,GAA2B,GAA3B;AACAP,IAAAA,OAAO,CAACQ,eAAR,GAA0B,IAA1B;AACAR,IAAAA,OAAO,CAACS,UAAR,GAAqB,IAArB;AACAT,IAAAA,OAAO,CAACU,WAAR,GAAsB,IAAtB;AACAV,IAAAA,OAAO,CAACW,QAAR,GAAmB,KAAnB;AACAX,IAAAA,OAAO,CAACY,iBAAR,GAA4B,KAA5B;AACAZ,IAAAA,OAAO,CAACa,UAAR,GAAqB,IAArB;AACAb,IAAAA,OAAO,CAACc,QAAR,GAAmB,IAAnB;AACAd,IAAAA,OAAO,CAACe,SAAR,GAAoB,CAApB;AAEI,QAAIC,QAAQ,GAAG7B,IAAI,CAAC8B,MAAL,CAAYC,CAAC,IAAEA,CAAC,CAACC,GAAF,IAAO/B,QAAtB,CAAf;AACD,QAAIgC,WAAW,GAAGJ,QAAQ,CAACC,MAAT,CAAgBI,CAAC,IAAEA,CAAC,CAAChC,GAAF,IAAOA,GAA1B,CAAlB;AAECiC,IAAAA,OAAO,CAACC,GAAR,CAAYH,WAAZ;AAEP,GA3BY,EA2BV,CAACjC,IAAD,EAAOK,UAAP,EAAmBJ,QAAnB,CA3BU,CAAT;AA4BJ,SACC;AAAK,IAAA,GAAG,EAAEG,UAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG;AAAK,IAAA,EAAE,EAAG,YAAV;AAAwB,IAAA,GAAG,EAAED,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,CADD;AAOC;;AAED,eAAeJ,SAAf","sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\r\nimport { select, line, curveCardinal, axisBottom, axisLeft, scaleTime, scaleLinear, scaleBand, min, max, event, bisector, mouse, ticks} from 'd3';\r\nimport useResizeObserver from \"./useReziseObserver\";\r\n\r\n\r\nfunction NumberGen({ data, property, gen }) {\r\n\r\n    const svgRef = useRef();\r\n    const wrapperRef = useRef();\r\n    const dimensions = useResizeObserver(wrapperRef);\r\n    const [selection, setSelection] = useState([0, 1.5]);\r\n \r\n    useEffect(() => {\r\n        const svg = select(svgRef.current);\r\n     \r\n         if(!dimensions) return;\r\n      \r\n         var gauge4 = loadLiquidFillGauge(\"fillgauge4\", 50, config3);\r\n    var config4 = liquidFillGaugeDefaultSettings();\r\n    config4.circleThickness = 0.15;\r\n    config4.circleColor = \"#808015\";\r\n    config4.textColor = \"#555500\";\r\n    config4.waveTextColor = \"#FFFFAA\";\r\n    config4.waveColor = \"#AAAA39\";\r\n    config4.textVertPosition = 0.8;\r\n    config4.waveAnimateTime = 1000;\r\n    config4.waveHeight = 0.05;\r\n    config4.waveAnimate = true;\r\n    config4.waveRise = false;\r\n    config4.waveHeightScaling = false;\r\n    config4.waveOffset = 0.25;\r\n    config4.textSize = 0.75;\r\n    config4.waveCount = 3;\r\n\r\n        var filtered = data.filter(a=>a.geo==property);\r\n       var finalFilter = filtered.filter(b=>b.gen==gen);\r\n\r\n        console.log(finalFilter);\r\n\r\n}, [data, dimensions, property]);\r\nreturn (\r\n <div ref={wrapperRef} >\r\n    <svg id ={\"fillgauge4\"} ref={svgRef}>\r\n     \r\n    </svg>\r\n  </div>\r\n);\r\n}\r\n\r\nexport default NumberGen;"]},"metadata":{},"sourceType":"module"}