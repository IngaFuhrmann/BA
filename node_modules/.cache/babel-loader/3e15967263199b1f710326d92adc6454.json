{"ast":null,"code":"var _jsxFileName = \"D:\\\\Studium\\\\Bachelor\\\\WebApp\\\\visapp\\\\src\\\\components\\\\charts\\\\LineChart.jsx\";\nimport React, { useRef, useEffect, useState } from \"react\";\nimport { select, line, curveCardinal, axisBottom, axisLeft, scaleTime, scaleLinear, scaleBand, min, max, event, bisector, mouse, ticks, keys, entries } from 'd3';\nimport '../../styles/charts.css';\nimport useResizeObserver from './useReziseObserver';\n\nfunction LineCharts({\n  data,\n  data2,\n  data3,\n  property,\n  colorline\n}) {\n  const svgRef = useRef();\n  const wrapperRef = useRef();\n  const dimensions = useResizeObserver(wrapperRef);\n  useEffect(() => {\n    console.log(data);\n    console.log(data2);\n    console.log(data3);\n    const svg = select(svgRef.current);\n    if (!dimensions) return;\n    var filtered = data.filter(a => a.geo == property);\n    var filtered = data2.filter(a => a.geo == property);\n    var filtered = data3.filter(a => a.geo == property);\n    var filterme;\n\n    for (var i = 0; i < filtered.length; i++) {\n      var filterme = filtered[i].time;\n    }\n\n    var filterme2;\n\n    for (var i = 0; i < filtered.length; i++) {\n      var filterme2 = filtered[i].time;\n    }\n\n    var filterme3;\n\n    for (var i = 0; i < filtered.length; i++) {\n      var filterme3 = filtered[i].time;\n    }\n\n    var vales = entries(filterme);\n    var vales2 = entries(filterme2);\n    var vales3 = entries(filterme3);\n    console.log(vales); //Sortieren nach Jahreszah\n\n    const minDate = new Date(min(vales, value => value.key));\n    const maxDate = new Date(max(vales, value => value.key));\n    console.log(minDate);\n    console.log(maxDate);\n    const xScale = scaleTime().domain([minDate - 2.628e+9, maxDate]) // It's the min date minus 2 months (in milliseconds   \n    // .domain([0, data.length-1]) //0 zu 0 ; 6 zu 200\n    .range([0, dimensions.width]); //change\n\n    const yScale = scaleLinear().domain([0, 100]) //todo\n    .range([dimensions.height, 30]); //change\n\n    const yAxis = axisLeft(yScale).tickSize(0);\n    svg.select('.y-axis').style('color', 'grey').style('font-size', '14').call(yAxis); //X-Achsen-Beschriftung\n\n    svg.append(\"text\").join(\"text\").attr(\"text-anchor\", \"end\").attr(\"fill\", \"grey\").attr(\"x\", dimensions.width).attr(\"y\", dimensions.height + 50).text(\"Jahr\");\n    const xAxis = axisBottom(xScale).ticks(4);\n    svg.select(\".x-axis\").join(\".x-axis\").style('transform', `translateY(${dimensions.height}px)`).style('color', 'grey').style('font-size', '14').style('stroke-width', 1).call(xAxis); //Grids\n\n    var grids = svg.select(\"g\").append(\"g\").join(\"g\").attr(\"class\", \"grid\").attr('transform', 'translate(0,' + -dimensions.height + ')').call(axisLeft(yScale).tickSize(-dimensions.width).tickFormat(\"\")); //Y-Achsen-Beschrifzung\n\n    svg.append(\"text\").attr(\"text-anchor\", \"end\").attr(\"transform\", \"rotate(-90)\").attr(\"fill\", \"grey\").attr(\"y\", -50).attr(\"x\", 0).text(\"Prozent\"); //Tooltip-Circle\n\n    var focus = svg.append('g').append('circle').style(\"fill\", colorline).attr('r', 8.5).style(\"opacity\", 0); //Tooltip- Values\n\n    var focusText = svg.append('g').append('text').style(\"opacity\", 0).attr(\"text-anchor\", \"left\").attr(\"alignment-baseline\", \"middle\");\n    svg.append('rect').style(\"fill\", \"none\").style(\"pointer-events\", \"all\").attr('width', dimensions.width).attr('height', dimensions.height).on('mouseover', mouseover).on('mousemove', mousemove).on('mouseout', mouseout);\n    const myLine = line().x(d => xScale(new Date(d.key))).y(d => yScale(d.value)).defined(d => d.value != 0); //.curve(curveCardinal);\n\n    /*  const lines = line()\r\n      .x((d)=> (xScale(new Date(d.key))))\r\n      .y((d)=> (yScale(d.value)))\r\n      .defined((d)=> d.value !== 0)*/\n    //herausfiltern der fehlenden werte\n\n    var filteredData = vales.filter(myLine.defined());\n    console.log(filteredData);\n    console.log(vales);\n    svg.selectAll(\".newline\").data([filteredData]).join(\"path\").attr(\"class\", \"newline\").attr(\"d\", (value, index) => myLine(value)).transition().attr(\"fill\", \"none\").attr(\"stroke\", colorline).attr(\"stroke-dasharray\", \"3, 3\");\n    svg.selectAll(\".newerline\").data([vales]).join(\"path\").attr(\"class\", \"newerline\").attr(\"d\", (value, index) => myLine(value)).transition().attr(\"fill\", \"none\").attr(\"stroke\", colorline).attr(\"stroke-width\", \"5\").attr(\"stroke-linecap\", \"round\");\n\n    function mouseover() {\n      focus.style(\"opacity\", 1);\n      focusText.style(\"opacity\", 1);\n    }\n\n    function mousemove() {\n      // recover coordinate we need\n      var x0 = xScale.invert(mouse(this)[0]);\n      const bisect = bisector(d => new Date(d.key)).left;\n      const idx = bisect(filteredData, x0, 1);\n      const selectedData = filteredData[idx]; //  console.log(selectedData);\n      //  console.log(selectedData.value);\n\n      focus.transition().duration(50).attr(\"cx\", xScale(new Date(selectedData.key))).attr(\"cy\", yScale(selectedData.value));\n      focusText.transition().duration(50).text(selectedData.key + \" : \" + selectedData.value).attr(\"x\", xScale(new Date(selectedData.key))).attr(\"y\", yScale(selectedData.value) - 30);\n    }\n\n    function mouseout() {\n      focus.style(\"opacity\", 0);\n      focusText.style(\"opacity\", 0);\n    }\n  }, [data, dimensions, property]);\n  return React.createElement(\"div\", {\n    ref: wrapperRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210\n    },\n    __self: this\n  }, React.createElement(\"svg\", {\n    ref: svgRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211\n    },\n    __self: this\n  }, React.createElement(\"g\", {\n    className: \"x-axis\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212\n    },\n    __self: this\n  }), React.createElement(\"g\", {\n    className: \"y-axis\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213\n    },\n    __self: this\n  })));\n}\n\nexport default LineCharts;","map":{"version":3,"sources":["D:/Studium/Bachelor/WebApp/visapp/src/components/charts/LineChart.jsx"],"names":["React","useRef","useEffect","useState","select","line","curveCardinal","axisBottom","axisLeft","scaleTime","scaleLinear","scaleBand","min","max","event","bisector","mouse","ticks","keys","entries","useResizeObserver","LineCharts","data","data2","data3","property","colorline","svgRef","wrapperRef","dimensions","console","log","svg","current","filtered","filter","a","geo","filterme","i","length","time","filterme2","filterme3","vales","vales2","vales3","minDate","Date","value","key","maxDate","xScale","domain","range","width","yScale","height","yAxis","tickSize","style","call","append","join","attr","text","xAxis","grids","tickFormat","focus","focusText","on","mouseover","mousemove","mouseout","myLine","x","d","y","defined","filteredData","selectAll","index","transition","x0","invert","bisect","left","idx","selectedData","duration"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect, useState} from \"react\";\r\nimport { select, line, curveCardinal, axisBottom, axisLeft, scaleTime, scaleLinear, scaleBand, min, max, event, bisector, mouse, ticks, keys, entries} from 'd3';\r\nimport '../../styles/charts.css'\r\nimport useResizeObserver from './useReziseObserver'\r\n\r\nfunction LineCharts({ data, data2, data3, property, colorline}) {\r\n   const svgRef = useRef();\r\n   const wrapperRef = useRef();\r\n   const dimensions = useResizeObserver(wrapperRef);\r\n   useEffect(() => {\r\n      console.log(data);\r\n      console.log(data2);\r\n       console.log(data3);\r\n      const svg = select(svgRef.current);\r\n  \r\n         if(!dimensions) return;\r\n      \r\n         var filtered = data.filter(a=>a.geo==property);\r\n         var filtered = data2.filter(a=>a.geo==property);\r\n         var filtered = data3.filter(a=>a.geo==property);\r\n\r\n         \r\n         var filterme;\r\n        for(var i = 0; i < filtered.length; i ++) {\r\n           var filterme = filtered[i].time; \r\n        }\r\n\r\n        var filterme2;\r\n        for(var i = 0; i < filtered.length; i ++) {\r\n           var filterme2 = filtered[i].time; \r\n        }\r\n        var filterme3;\r\n        for(var i = 0; i < filtered.length; i ++) {\r\n           var filterme3 = filtered[i].time; \r\n        }\r\n        var vales = entries(filterme);\r\n        var vales2 = entries(filterme2);\r\n        var vales3 = entries(filterme3);\r\n\r\n        console.log(vales);\r\n      //Sortieren nach Jahreszah\r\n      const minDate = new Date (min(vales, value => value.key));\r\n      const maxDate = new Date (max(vales, value => value.key));     \r\n\r\n      console.log(minDate);\r\n     console.log(maxDate);\r\n       \r\n\r\n      const xScale = scaleTime()\r\n          .domain([minDate - 2.628e+9,maxDate]) // It's the min date minus 2 months (in milliseconds   \r\n        // .domain([0, data.length-1]) //0 zu 0 ; 6 zu 200\r\n         .range([0, dimensions.width]) //change\r\n        \r\n      const yScale =  scaleLinear()\r\n         .domain([0, 100])   //todo\r\n         .range([dimensions.height, 30]);  //change\r\n\r\n      \r\n      const yAxis = axisLeft(yScale).tickSize(0);   \r\n      svg\r\n      .select('.y-axis')\r\n      .style('color', 'grey')\r\n      .style('font-size', '14')\r\n      .call(yAxis);\r\n\r\n      //X-Achsen-Beschriftung\r\n      svg.append(\"text\").join(\"text\")\r\n      .attr(\"text-anchor\", \"end\")\r\n      .attr(\"fill\", \"grey\")\r\n      .attr(\"x\", dimensions.width)\r\n       .attr(\"y\", dimensions.height  + 50)\r\n       .text(\"Jahr\");\r\n\r\n     const xAxis = axisBottom(xScale).ticks(4)\r\n     svg\r\n      .select(\".x-axis\")\r\n      .join(\".x-axis\")\r\n      .style('transform', `translateY(${dimensions.height}px)`)\r\n      .style('color', 'grey')\r\n      .style('font-size', '14')\r\n      .style('stroke-width', 1)\r\n      .call(xAxis);\r\n\r\n\r\n      //Grids\r\n      var grids = svg.select(\"g\").append(\"g\")\r\n         .join(\"g\")\r\n         .attr(\"class\", \"grid\")\r\n         .attr('transform', 'translate(0,' + -dimensions.height + ')')\r\n         .call(axisLeft(yScale)\r\n            .tickSize(-dimensions.width)\r\n            .tickFormat(\"\")\r\n            )\r\n\r\n      //Y-Achsen-Beschrifzung\r\n      svg.append(\"text\")\r\n    .attr(\"text-anchor\", \"end\")\r\n    .attr(\"transform\", \"rotate(-90)\")\r\n    .attr(\"fill\", \"grey\")\r\n    .attr(\"y\", - 50)\r\n    .attr(\"x\", 0)\r\n    .text(\"Prozent\")\r\n\r\n     //Tooltip-Circle\r\n      var focus = svg\r\n      .append('g')\r\n      .append('circle')\r\n      .style(\"fill\", colorline)\r\n      .attr('r', 8.5)\r\n      .style(\"opacity\", 0);\r\n\r\n      //Tooltip- Values\r\n      var focusText = svg\r\n      .append('g')\r\n      .append('text')\r\n      .style(\"opacity\", 0)\r\n      .attr(\"text-anchor\", \"left\")\r\n      .attr(\"alignment-baseline\", \"middle\");\r\n\r\n      svg\r\n      .append('rect')\r\n      .style(\"fill\", \"none\")\r\n      .style(\"pointer-events\", \"all\")\r\n      .attr('width', dimensions.width)\r\n      .attr('height', dimensions.height)\r\n      .on('mouseover', mouseover)\r\n      .on('mousemove', mousemove)\r\n      .on('mouseout', mouseout); \r\n      \r\n     \r\n    \r\n      const myLine = line()\r\n      .x((d)=> (xScale(new Date(d.key))))\r\n      .y((d)=> (yScale(d.value)))\r\n      .defined((d)=> d.value != 0)\r\n      //.curve(curveCardinal);\r\n    /*  const lines = line()\r\n      .x((d)=> (xScale(new Date(d.key))))\r\n      .y((d)=> (yScale(d.value)))\r\n      .defined((d)=> d.value !== 0)*/\r\n     \r\n      //herausfiltern der fehlenden werte\r\n      var filteredData = vales.filter(myLine.defined());\r\n      \r\n      console.log(filteredData);\r\n      console.log(vales);\r\n      svg\r\n         .selectAll(\".newline\")\r\n         .data([filteredData])\r\n         .join(\"path\")\r\n         .attr(\"class\", \"newline\")\r\n         .attr(\"d\", (value, index) => myLine(value))\r\n         .transition()\r\n         .attr(\"fill\", \"none\")\r\n         .attr(\"stroke\", colorline)\r\n         .attr(\"stroke-dasharray\", (\"3, 3\"))\r\n        \r\n\r\n         svg\r\n         .selectAll(\".newerline\")\r\n         .data([vales])\r\n         .join(\"path\")\r\n         .attr(\"class\", \"newerline\")\r\n         .attr(\"d\", (value, index) => myLine(value))\r\n         .transition()\r\n         .attr(\"fill\", \"none\")\r\n         .attr(\"stroke\", colorline)\r\n         .attr(\"stroke-width\", \"5\" )\r\n         .attr(\"stroke-linecap\", \"round\")\r\n\r\n      function mouseover() {\r\n         focus.style(\"opacity\", 1)\r\n         focusText.style(\"opacity\",1)\r\n       }\r\n       \r\n       function mousemove() {\r\n         // recover coordinate we need\r\n         var x0 = xScale.invert(mouse(this)[0]);\r\n         const bisect = bisector(d => new Date(d.key)).left;\r\n         const idx = bisect(filteredData, x0, 1);\r\n         const selectedData = filteredData[idx];\r\n       //  console.log(selectedData);\r\n       //  console.log(selectedData.value);\r\n         \r\n         focus\r\n         .transition()\r\n         .duration(50)\r\n         .attr(\"cx\", xScale(new Date(selectedData.key)))\r\n         .attr(\"cy\", yScale(selectedData.value))\r\n        \r\n\r\n         focusText\r\n         .transition()\r\n         .duration(50)\r\n            .text(selectedData.key  + \" : \" + selectedData.value)\r\n            .attr(\"x\", xScale(new Date (selectedData.key)))\r\n            .attr(\"y\", yScale(selectedData.value) - 30)\r\n            \r\n         }\r\n       function mouseout() {\r\n         \r\n         focus.style(\"opacity\", 0)\r\n         focusText.style(\"opacity\", 0)\r\n        \r\n       }\r\n\r\n\r\n   }, [data, dimensions, property]);\r\n   return (\r\n         <div ref={wrapperRef}>\r\n            <svg ref={svgRef}>\r\n               <g className='x-axis' />\r\n               <g className=\"y-axis\" />\r\n            </svg>\r\n            </div>\r\n   );\r\n}\r\n\r\nexport default LineCharts;"]},"metadata":{},"sourceType":"module"}