{"ast":null,"code":"var _jsxFileName = \"D:\\\\Studium\\\\Bachelor\\\\WebApp\\\\visapp\\\\src\\\\components\\\\charts\\\\LineChart.jsx\";\nimport React from \"react\";\nimport * as d3 from \"d3\";\nimport { connect } from \"react-redux\";\nimport { setCurrentBarRed } from \"../../actions\";\nimport { setCurrentBarBlue } from \"../../actions\";\nimport data from \"../../data.json\"; // Add function:\n\nfunction mapStateToProps(state) {\n  return {\n    color: state.color,\n    index: state.index\n  };\n}\n\nclass BarChart extends React.Component {\n  componentDidMount() {\n    this.drawBarChart(data);\n  }\n\n  drawBarChart(data) {\n    // set the dimensions and margins of the graph\n    var margin = {\n      top: 10,\n      right: 30,\n      bottom: 30,\n      left: 60\n    },\n        width = 460 - margin.left - margin.right,\n        height = 400 - margin.top - margin.bottom; // append the svg object to the body of the page\n\n    var svg = d3.select(\"canvas\").append(\"svg\").attr(\"width\", width + margin.left + margin.right).attr(\"height\", height + margin.top + margin.bottom).append(\"g\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\"); // Add X axis --> it is a date format\n\n    var x = d3.scaleTime().domain(d3.extent(data, function (d) {\n      return d.date;\n    })).range([0, width]);\n    svg.append(\"g\").attr(\"transform\", \"translate(0,\" + height + \")\").call(d3.axisBottom(x)); // Add Y axis\n\n    var y = d3.scaleLinear().domain([0, d3.max(data, function (d) {\n      return +d.value;\n    })]).range([height, 0]);\n    svg.append(\"g\").call(d3.axisLeft(y)); // Add the line\n\n    svg.append(\"path\").datum(data).attr(\"fill\", \"none\").attr(\"stroke\", \"steelblue\").attr(\"stroke-width\", 1.5).attr(\"d\", d3.line().x(function (d) {\n      return x(d.region);\n    }).y(function (d) {\n      return y(d.profit);\n    }));\n  }\n\n  componentDidUpdate() {\n    console.log(\"DERTGHJKL\");\n    /*  this.svgGroup\r\n       .selectAll(\"path\")\r\n       .filter((d, i) => i === this.props.index)\r\n       .attr(\"fill\", this.props.color);*/\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      ref: \"canvas\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default connect(mapStateToProps)(BarChart);\n/*class BarChart extends Component {\r\n  componentDidMount() {\r\n    this.drawChart(); //D3!\r\n  }\r\n\r\n  drawChart() {\r\n    const data = [12, 5, 6, 6, 9, 10];\r\n    var w;\r\n    var h;\r\n    const svg = d3.select(\"body\")\r\n    .append(\"svg\")\r\n    .attr(\"width\", w)\r\n    .attr(\"height\", h)\r\n    .style(\"margin-left\", 100);\r\n                  \r\n    svg.selectAll(\"rect\")\r\n      .data(data)\r\n      .enter()\r\n      .append(\"rect\")\r\n      .attr(\"x\", (d, i) => i * 70)\r\n      .attr(\"y\", (d, i) => h - 10 * d)\r\n      .attr(\"width\", 65)\r\n      .attr(\"height\", (d, i) => d * 10)\r\n      .attr(\"fill\", \"green\")\r\n  }\r\n        \r\n  render(){\r\n    return <div id={\"#\" + this.props.id}></div>\r\n  }\r\n}\r\n\r\nexport default BarChart; */","map":{"version":3,"sources":["D:/Studium/Bachelor/WebApp/visapp/src/components/charts/LineChart.jsx"],"names":["React","d3","connect","setCurrentBarRed","setCurrentBarBlue","data","mapStateToProps","state","color","index","BarChart","Component","componentDidMount","drawBarChart","margin","top","right","bottom","left","width","height","svg","select","append","attr","x","scaleTime","domain","extent","d","date","range","call","axisBottom","y","scaleLinear","max","value","axisLeft","datum","line","region","profit","componentDidUpdate","console","log","render"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport * as d3 from \"d3\";\r\nimport { connect } from \"react-redux\";\r\nimport { setCurrentBarRed } from \"../../actions\";\r\nimport { setCurrentBarBlue } from \"../../actions\";\r\nimport data from \"../../data.json\";\r\n\r\n// Add function:\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    color: state.color,\r\n    index: state.index,\r\n  };\r\n}\r\n\r\nclass BarChart extends React.Component {\r\n  \r\n  componentDidMount() {\r\n    this.drawBarChart(data);\r\n  }\r\n  drawBarChart(data)  {\r\n    // set the dimensions and margins of the graph\r\nvar margin = {top: 10, right: 30, bottom: 30, left: 60},\r\nwidth = 460 - margin.left - margin.right,\r\nheight = 400 - margin.top - margin.bottom;\r\n\r\n// append the svg object to the body of the page\r\nvar svg = d3.select(\"canvas\")\r\n.append(\"svg\")\r\n.attr(\"width\", width + margin.left + margin.right)\r\n.attr(\"height\", height + margin.top + margin.bottom)\r\n.append(\"g\")\r\n.attr(\"transform\",\r\n      \"translate(\" + margin.left + \",\" + margin.top + \")\");\r\n\r\n// Add X axis --> it is a date format\r\nvar x = d3.scaleTime()\r\n  .domain(d3.extent(data, function(d) { return d.date; }))\r\n  .range([ 0, width ]);\r\nsvg.append(\"g\")\r\n  .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n  .call(d3.axisBottom(x));\r\n\r\n// Add Y axis\r\nvar y = d3.scaleLinear()\r\n  .domain([0, d3.max(data, function(d) { return +d.value; })])\r\n  .range([ height, 0 ]);\r\nsvg.append(\"g\")\r\n  .call(d3.axisLeft(y));\r\n\r\n// Add the line\r\nsvg.append(\"path\")\r\n  .datum(data)\r\n  .attr(\"fill\", \"none\")\r\n  .attr(\"stroke\", \"steelblue\")\r\n  .attr(\"stroke-width\", 1.5)\r\n  .attr(\"d\", d3.line()\r\n    .x(function(d) { return x(d.region) })\r\n    .y(function(d) { return y(d.profit) })\r\n    )\r\n\r\n}\r\n\r\n  componentDidUpdate() {\r\n    console.log(\"DERTGHJKL\");\r\n   /*  this.svgGroup\r\n      .selectAll(\"path\")\r\n      .filter((d, i) => i === this.props.index)\r\n      .attr(\"fill\", this.props.color);*/\r\n    }\r\n  \r\n\r\n\r\n\r\n  render()\r\n   { return <div ref=\"canvas\"></div> }\r\n}\r\nexport default connect(mapStateToProps)(BarChart);\r\n\r\n\r\n/*class BarChart extends Component {\r\n  componentDidMount() {\r\n    this.drawChart(); //D3!\r\n  }\r\n\r\n  drawChart() {\r\n    const data = [12, 5, 6, 6, 9, 10];\r\n    var w;\r\n    var h;\r\n    const svg = d3.select(\"body\")\r\n    .append(\"svg\")\r\n    .attr(\"width\", w)\r\n    .attr(\"height\", h)\r\n    .style(\"margin-left\", 100);\r\n                  \r\n    svg.selectAll(\"rect\")\r\n      .data(data)\r\n      .enter()\r\n      .append(\"rect\")\r\n      .attr(\"x\", (d, i) => i * 70)\r\n      .attr(\"y\", (d, i) => h - 10 * d)\r\n      .attr(\"width\", 65)\r\n      .attr(\"height\", (d, i) => d * 10)\r\n      .attr(\"fill\", \"green\")\r\n  }\r\n        \r\n  render(){\r\n    return <div id={\"#\" + this.props.id}></div>\r\n  }\r\n}\r\n\r\nexport default BarChart; */"]},"metadata":{},"sourceType":"module"}