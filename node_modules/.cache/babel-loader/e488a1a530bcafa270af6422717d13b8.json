{"ast":null,"code":"var _jsxFileName = \"D:\\\\Studium\\\\Bachelor\\\\WebApp\\\\visapp\\\\src\\\\components\\\\charts\\\\AreaIKTBesch\\xE4ftigung.jsx\";\nimport React, { useRef, useEffect, useState } from \"react\";\nimport { select, axisBottom, axisLeft, scaleTime, scaleLinear, min, max, entries, bisector, mouse, curveLinear, area } from 'd3';\nimport useResizeObserver from \"./useReziseObserver\";\nimport Tooltip from \"./tooltips\";\n\nfunction AreaIKTBesch채ftigung({\n  data,\n  property,\n  value1,\n  value2,\n  color1,\n  color2\n}) {\n  const svgRef = useRef();\n  const wrapperRef = useRef();\n  const dimensions = useResizeObserver(wrapperRef);\n  useEffect(() => {\n    const svg = select(svgRef.current);\n    var filterme;\n    var filterMann;\n    if (!dimensions) return; //Daten filtern\n\n    var filtered = data.filter(a => a.geo == property);\n\n    if (value1 == \"M채nner\") {\n      for (var i = 0; i < filtered.length; i++) {\n        var filterme = filtered[i].Frauen;\n        var filterMann = filtered[i].M채nner;\n      }\n    } else {\n      for (var i = 0; i < filtered.length; i++) {\n        var filterme = filtered[i].Einstellung;\n        var filterMann = filtered[i].Besch채ftigung;\n      }\n    }\n\n    var valesFrau = entries(filterme);\n    var valesMann = entries(filterMann);\n    var objectsIKT = {\n      gen: valesFrau,\n      gens: valesMann\n    };\n    const minDate = new Date(min(objectsIKT.gen, value => value.key));\n    const maxDate = new Date(max(objectsIKT.gen, value => value.key));\n    console.log(minDate);\n    console.log(maxDate);\n    const xScale = scaleTime().domain([minDate, maxDate]).range([0, dimensions.width]);\n    const yScale = scaleLinear().domain([0, 100]).range([dimensions.height, 30]);\n    const yAxis = axisLeft(yScale);\n    svg.select('.y-axis').style('color', 'grey').style('font-size', '14').call(yAxis);\n    const xAxis = axisBottom(xScale);\n    svg.select(\".x-axis\").join(\".x-axis\").style('transform', `translateY(${dimensions.height}px)`).style('color', 'grey').style('font-size', '14').style('stroke-width', 1).call(xAxis); //Grids\n\n    var grids = svg.select(\"g\").append(\"g\").join(\"g\").attr(\"class\", \"grid\").attr('transform', 'translate(0,' + -dimensions.height + ')').call(axisLeft(yScale).tickSize(-dimensions.width).tickFormat(\"\")); //X-Achsen-Beschriftung\n\n    svg.select(\"text\").join(\"text\").attr(\"text-anchor\", \"end\").attr(\"fill\", \"grey\").attr(\"x\", dimensions.width).attr(\"y\", +dimensions.height / 8).attr(\"font-weight\", \"bold\").text(\"Jahr\"); //Y-Achsen-Beschrifzung\n\n    svg.append(\"text\").attr(\"text-anchor\", \"end\").attr(\"transform\", \"rotate(-90)\").attr(\"fill\", \"grey\").attr(\"y\", -50).attr(\"x\", 0).text(\"Prozent\");\n    /*     const tooltip = select('#tooltip');\r\n         const tooltipLine = svg.append('line');\r\n            //  .on('mousemove', drawTooltip)\r\n             // .on('mouseout', removeTooltip);\r\n             var focusFrau = svg\r\n             .append('g')\r\n             .append('circle')\r\n             .style(\"fill\", color2)\r\n             .attr('r', 8.5)\r\n             .style(\"opacity\", 0)\r\n             .attr(\"stroke\", \"black\")\r\n             .attr(\"stroke-width\", 1.5)\r\n             var focusMann = svg\r\n             .append('g')\r\n             .append('circle')\r\n             .style(\"fill\", color1)\r\n             .attr('r', 8.5)\r\n             .style(\"opacity\", 0)\r\n             .attr(\"stroke\", \"black\")\r\n             .attr(\"stroke-width\", 1.5)\r\n             var focusBox = svg\r\n             .append('g')\r\n             .append('rect')\r\n             .style(\"opacity\", 0)\r\n             .attr(\"width\", dimensions.width/ 4)\r\n             .attr(\"height\", dimensions.height/ 4.5)\r\n             .style(\"fill\", \"#e0e2e5\")\r\n             .style(\"stroke\", \"#e0e2e5\")\r\n             .style(\"stroke\", \"black\")\r\n             .style(\"stroke-width\", \"1\" )\r\n             .attr(\"rx\", 4)\r\n             .attr(\"ry\", 4);\r\n             var focusText = svg\r\n            .append('g')\r\n            .append('text')\r\n            .append(\"tspan\")\r\n            .style(\"opacity\", 0)\r\n            .attr(\"text-anchor\", \"left\")\r\n            .attr(\"alignment-baseline\", \"middle\")\r\n            .attr(\"fill\", \"#203040\")\r\n            .style(\"font-size\", 15)\r\n            .style(\"font-weight\", \"bolder\")\r\n            var focusText2 = svg\r\n            .append('g')\r\n            .append('text')\r\n            .append(\"tspan\")\r\n            .style(\"opacity\", 0)\r\n            .attr(\"text-anchor\", \"left\")\r\n            .attr(\"alignment-baseline\", \"middle\")\r\n            .attr(\"fill\", color1)\r\n            .style(\"font-size\", 12)\r\n            .style(\"font-weight\", \"bold\")\r\n            var focusText3 = svg\r\n            .append('g')\r\n            .append('text')\r\n            .append(\"tspan\")\r\n            .style(\"opacity\", 0)\r\n            .attr(\"text-anchor\", \"left\")\r\n            .attr(\"alignment-baseline\", \"middle\")\r\n            .attr(\"fill\", color2)\r\n            .style(\"font-size\", 12)\r\n            .style(\"font-weight\", \"bold\")\r\n              svg\r\n              .append('rect')\r\n              .style(\"fill\", \"none\")\r\n              .style(\"pointer-events\", \"all\")\r\n              .attr('width', dimensions.width)\r\n              .attr('height', dimensions.height)\r\n              .on('mouseover', mouseover)\r\n              .on('mousemove', mousemove)\r\n              .on('mouseout', mouseout);\r\n              \r\n               // Tooltip-Circle\r\n                var focus = tooltipLine\r\n                .attr('stroke', 'darkgrey')\r\n                .data([valesFrau])\r\n                .attr('x1', (d)=> (xScale(new Date(d.key))))\r\n                .attr('x2', (d)=> (xScale(new Date(d.key))))\r\n                .attr('y1', 0)\r\n                .attr('y2', dimensions.height);\r\n                  function mousemove() {\r\n                  var x0 = xScale.invert(mouse(this)[0]);\r\n                  const bisect = bisector(d => new Date(d.key)).left;\r\n                  const idx = bisect(valesFrau, x0, 1);\r\n                  const selectedDataFrau = valesFrau[idx];\r\n                  console.log( selectedDataFrau);\r\n                    const idxM = bisect(valesMann, x0, 1);\r\n                  const selectedDataMann = valesMann[idxM];\r\n                  console.log( selectedDataMann);\r\n                  \r\n                  focus\r\n                  .transition()\r\n                  .duration(80)\r\n                  .attr(\"x1\", xScale(new Date (selectedDataFrau.key)))\r\n                  .attr(\"x2\", xScale(new Date (selectedDataFrau.key)))\r\n                  .attr(\"y1\", yScale(selectedDataFrau.value) - dimensions.height / 1.2)\r\n                  .attr(\"y2\",  dimensions.height + 20)\r\n                  \r\n                  focusMann\r\n                  .transition()\r\n                  .duration(80)\r\n                  .attr(\"cx\", xScale(new Date(selectedDataMann.key)))\r\n                  .attr(\"cy\", yScale(selectedDataMann.value))\r\n                    focusFrau\r\n                  .transition()\r\n                  .duration(80)\r\n                  .attr(\"cx\", xScale(new Date(selectedDataFrau.key)))\r\n                  .attr(\"cy\", yScale(selectedDataFrau.value))\r\n                  \r\n                  focusText\r\n                  .transition()\r\n                  .duration(80)\r\n                  .text(selectedDataFrau.key)\r\n                  .attr(\"x\", xScale(new Date (selectedDataFrau.key)) + dimensions.width/20 )\r\n                  .attr(\"y\", dimensions.height/2.5)\r\n                  focusText2\r\n                  .transition()\r\n                  .duration(80)\r\n                  .text(value1 + \": \" + selectedDataMann.value + \"%\" + \": \")\r\n                  .attr(\"x\", xScale(new Date (selectedDataFrau.key))+ dimensions.width/20 )\r\n                  .attr(\"y\", dimensions.height/2.3 )\r\n                  focusText3\r\n                  .transition()\r\n                  .duration(80)\r\n                  .text(value2 + \": \" + selectedDataFrau.value + \"%\" + \": \")\r\n                  .attr(\"x\", xScale(new Date (selectedDataFrau.key)) + dimensions.width/20)\r\n                  .attr(\"y\", dimensions.height/2.1 )\r\n                      \r\n                  focusBox\r\n                  .transition()\r\n                  .duration(80)\r\n                  .attr(\"x\", xScale(new Date (selectedDataFrau.key)) + 20)\r\n                  .attr(\"y\", dimensions.height/3)\r\n           }\r\n       \r\n                function mouseout() {\r\n                  focus.style(\"opacity\", 0)\r\n                  focusMann.style(\"opacity\", 0)\r\n                  focusFrau.style(\"opacity\", 0)\r\n                  focusBox.style(\"opacity\", 0)\r\n                  focusText.style(\"opacity\", 0)\r\n                  focusText2.style(\"opacity\", 0)\r\n                  focusText3.style(\"opacity\", 0)\r\n                 // focusText.style(\"opacity\", 0)\r\n                }\r\n                function mouseover() {\r\n                  focusMann.style(\"opacity\", 1)\r\n                  focusFrau.style(\"opacity\", 1)\r\n                  focus.style(\"opacity\", 1)\r\n                  focusBox.style(\"opacity\",1)\r\n                  focusText.style(\"opacity\", 1)\r\n                  focusText2.style(\"opacity\", 1)\r\n                  focusText3.style(\"opacity\", 1)\r\n                 // focusText.style(\"opacity\", 0)\r\n                }\r\n    */\n\n    const curve = curveLinear;\n    Tooltip(svg, valesFrau, valesMann, color1, color2, dimensions, xScale, yScale, value2, value1, value1);\n    const myArea = area().x(d => xScale(new Date(d.key))).y0(dimensions.height).y1(d => yScale(d.value)).curve(curve);\n    svg.selectAll(\".newArea\").data([valesMann]).join(\"path\").attr(\"class\", \"newArea\").transition().duration(500).attr(\"d\", (value, index) => myArea(value)).transition().attr(\"fill\", color1);\n    svg.selectAll(\".newerArea\").data([valesFrau]).join(\"path\").attr(\"class\", \"newerArea\").transition().duration(500).attr(\"d\", (value, index) => myArea(value)).attr(\"fill\", \"none\").attr(\"fill\", color2);\n  }, [data, dimensions, property]);\n  return React.createElement(\"div\", {\n    className: \"IKTWarapperRef\",\n    ref: wrapperRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293\n    },\n    __self: this\n  }, React.createElement(\"svg\", {\n    ref: svgRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294\n    },\n    __self: this\n  }, React.createElement(\"g\", {\n    className: \"x-axis\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295\n    },\n    __self: this\n  }), React.createElement(\"g\", {\n    className: \"y-axis\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296\n    },\n    __self: this\n  })));\n}\n\nexport default AreaIKTBesch채ftigung;","map":{"version":3,"sources":["D:/Studium/Bachelor/WebApp/visapp/src/components/charts/AreaIKTBesch채ftigung.jsx"],"names":["React","useRef","useEffect","useState","select","axisBottom","axisLeft","scaleTime","scaleLinear","min","max","entries","bisector","mouse","curveLinear","area","useResizeObserver","Tooltip","AreaIKTBesch채ftigung","data","property","value1","value2","color1","color2","svgRef","wrapperRef","dimensions","svg","current","filterme","filterMann","filtered","filter","a","geo","i","length","Frauen","M채nner","Einstellung","Besch채ftigung","valesFrau","valesMann","objectsIKT","gen","gens","minDate","Date","value","key","maxDate","console","log","xScale","domain","range","width","yScale","height","yAxis","style","call","xAxis","join","grids","append","attr","tickSize","tickFormat","text","curve","myArea","x","d","y0","y1","selectAll","transition","duration","index"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\r\nimport { select, axisBottom, axisLeft, scaleTime, scaleLinear, min, max, entries,bisector, mouse, curveLinear, area, } from 'd3';\r\nimport useResizeObserver from \"./useReziseObserver\";\r\nimport Tooltip from \"./tooltips\";\r\n\r\nfunction AreaIKTBesch채ftigung({ data, property, value1, value2, color1, color2 }) {\r\n   const svgRef = useRef();\r\n   const wrapperRef = useRef();\r\n   const dimensions = useResizeObserver(wrapperRef);\r\n \r\n   useEffect(() => {\r\n\r\n      const svg = select(svgRef.current);\r\n     var filterme;\r\n     var filterMann;\r\n      if(!dimensions) return;\r\n\r\n      //Daten filtern\r\n      var filtered = data.filter(a=>a.geo==property);\r\n     \r\n      if(value1 == \"M채nner\"){\r\n    for(var i = 0; i < filtered.length; i ++) {\r\n       var filterme = filtered[i].Frauen;\r\n       var filterMann = filtered[i].M채nner;  \r\n    }\r\n  }else{\r\n    for(var i = 0; i < filtered.length; i ++) {\r\n      var filterme = filtered[i].Einstellung;\r\n      var filterMann = filtered[i].Besch채ftigung;  \r\n   }\r\n  }\r\n    var valesFrau = entries(filterme);\r\n    var valesMann = entries(filterMann);\r\n\r\n    var objectsIKT = {gen: valesFrau, gens: valesMann};\r\n\r\n    const minDate = new Date (min(objectsIKT.gen, value => value.key));\r\n    const maxDate = new Date (max(objectsIKT.gen, value => value.key));     \r\n\r\n    console.log(minDate);\r\n    console.log(maxDate);\r\n\r\n\r\n      const xScale = scaleTime()\r\n          .domain([minDate,maxDate])\r\n         .range([0, dimensions.width])\r\n        \r\n      const yScale =  scaleLinear()\r\n         .domain([0, 100])\r\n         .range([dimensions.height, 30]);\r\n\r\n      \r\n         const yAxis = axisLeft(yScale);   \r\n         svg\r\n         .select('.y-axis')\r\n         .style('color', 'grey')\r\n         .style('font-size', '14')\r\n         .call(yAxis);\r\n   \r\n        const xAxis = axisBottom(xScale)\r\n        svg\r\n         .select(\".x-axis\")\r\n         .join(\".x-axis\")\r\n         .style('transform', `translateY(${dimensions.height}px)`)\r\n         .style('color', 'grey')\r\n         .style('font-size', '14')\r\n         .style('stroke-width', 1)\r\n         .call(xAxis);\r\n   \r\n         //Grids\r\n         var grids = svg.select(\"g\").append(\"g\")\r\n            .join(\"g\")\r\n            .attr(\"class\", \"grid\")\r\n            .attr('transform', 'translate(0,' + -dimensions.height + ')')\r\n            .call(axisLeft(yScale)\r\n               .tickSize(-dimensions.width)\r\n               .tickFormat(\"\")\r\n               )\r\n         \r\n         //X-Achsen-Beschriftung\r\n         svg.select(\"text\").join(\"text\")\r\n         .attr(\"text-anchor\", \"end\")\r\n         .attr(\"fill\", \"grey\")\r\n         .attr(\"x\", dimensions.width)\r\n          .attr(\"y\", + dimensions.height/ 8)\r\n          .attr(\"font-weight\", \"bold\")\r\n          .text(\"Jahr\");      \r\n         //Y-Achsen-Beschrifzung\r\n         svg.append(\"text\")\r\n         .attr(\"text-anchor\", \"end\")\r\n         .attr(\"transform\", \"rotate(-90)\")\r\n         .attr(\"fill\", \"grey\")\r\n         .attr(\"y\", - 50)\r\n         .attr(\"x\", 0)\r\n         .text(\"Prozent\")\r\n\r\n    /*     const tooltip = select('#tooltip');\r\n         const tooltipLine = svg.append('line');\r\n            //  .on('mousemove', drawTooltip)\r\n             // .on('mouseout', removeTooltip);\r\n             var focusFrau = svg\r\n             .append('g')\r\n             .append('circle')\r\n             .style(\"fill\", color2)\r\n             .attr('r', 8.5)\r\n             .style(\"opacity\", 0)\r\n             .attr(\"stroke\", \"black\")\r\n             .attr(\"stroke-width\", 1.5)\r\n             var focusMann = svg\r\n             .append('g')\r\n             .append('circle')\r\n             .style(\"fill\", color1)\r\n             .attr('r', 8.5)\r\n             .style(\"opacity\", 0)\r\n             .attr(\"stroke\", \"black\")\r\n             .attr(\"stroke-width\", 1.5)\r\n             var focusBox = svg\r\n             .append('g')\r\n             .append('rect')\r\n             .style(\"opacity\", 0)\r\n             .attr(\"width\", dimensions.width/ 4)\r\n             .attr(\"height\", dimensions.height/ 4.5)\r\n             .style(\"fill\", \"#e0e2e5\")\r\n             .style(\"stroke\", \"#e0e2e5\")\r\n             .style(\"stroke\", \"black\")\r\n             .style(\"stroke-width\", \"1\" )\r\n             .attr(\"rx\", 4)\r\n             .attr(\"ry\", 4);\r\n             var focusText = svg\r\n            .append('g')\r\n            .append('text')\r\n            .append(\"tspan\")\r\n            .style(\"opacity\", 0)\r\n            .attr(\"text-anchor\", \"left\")\r\n            .attr(\"alignment-baseline\", \"middle\")\r\n            .attr(\"fill\", \"#203040\")\r\n            .style(\"font-size\", 15)\r\n            .style(\"font-weight\", \"bolder\")\r\n            var focusText2 = svg\r\n            .append('g')\r\n            .append('text')\r\n            .append(\"tspan\")\r\n            .style(\"opacity\", 0)\r\n            .attr(\"text-anchor\", \"left\")\r\n            .attr(\"alignment-baseline\", \"middle\")\r\n            .attr(\"fill\", color1)\r\n            .style(\"font-size\", 12)\r\n            .style(\"font-weight\", \"bold\")\r\n            var focusText3 = svg\r\n            .append('g')\r\n            .append('text')\r\n            .append(\"tspan\")\r\n            .style(\"opacity\", 0)\r\n            .attr(\"text-anchor\", \"left\")\r\n            .attr(\"alignment-baseline\", \"middle\")\r\n            .attr(\"fill\", color2)\r\n            .style(\"font-size\", 12)\r\n            .style(\"font-weight\", \"bold\")\r\n              svg\r\n              .append('rect')\r\n              .style(\"fill\", \"none\")\r\n              .style(\"pointer-events\", \"all\")\r\n              .attr('width', dimensions.width)\r\n              .attr('height', dimensions.height)\r\n              .on('mouseover', mouseover)\r\n              .on('mousemove', mousemove)\r\n              .on('mouseout', mouseout);\r\n              \r\n               // Tooltip-Circle\r\n                var focus = tooltipLine\r\n                .attr('stroke', 'darkgrey')\r\n                .data([valesFrau])\r\n                .attr('x1', (d)=> (xScale(new Date(d.key))))\r\n                .attr('x2', (d)=> (xScale(new Date(d.key))))\r\n                .attr('y1', 0)\r\n                .attr('y2', dimensions.height);\r\n\r\n                function mousemove() {\r\n                  var x0 = xScale.invert(mouse(this)[0]);\r\n                  const bisect = bisector(d => new Date(d.key)).left;\r\n                  const idx = bisect(valesFrau, x0, 1);\r\n                  const selectedDataFrau = valesFrau[idx];\r\n                  console.log( selectedDataFrau);\r\n\r\n                  const idxM = bisect(valesMann, x0, 1);\r\n                  const selectedDataMann = valesMann[idxM];\r\n                  console.log( selectedDataMann);\r\n                  \r\n                  focus\r\n                  .transition()\r\n                  .duration(80)\r\n                  .attr(\"x1\", xScale(new Date (selectedDataFrau.key)))\r\n                  .attr(\"x2\", xScale(new Date (selectedDataFrau.key)))\r\n                  .attr(\"y1\", yScale(selectedDataFrau.value) - dimensions.height / 1.2)\r\n                  .attr(\"y2\",  dimensions.height + 20)\r\n                  \r\n                  focusMann\r\n                  .transition()\r\n                  .duration(80)\r\n                  .attr(\"cx\", xScale(new Date(selectedDataMann.key)))\r\n                  .attr(\"cy\", yScale(selectedDataMann.value))\r\n\r\n                  focusFrau\r\n                  .transition()\r\n                  .duration(80)\r\n                  .attr(\"cx\", xScale(new Date(selectedDataFrau.key)))\r\n                  .attr(\"cy\", yScale(selectedDataFrau.value))\r\n                  \r\n                  focusText\r\n                  .transition()\r\n                  .duration(80)\r\n                  .text(selectedDataFrau.key)\r\n                  .attr(\"x\", xScale(new Date (selectedDataFrau.key)) + dimensions.width/20 )\r\n                  .attr(\"y\", dimensions.height/2.5)\r\n                  focusText2\r\n                  .transition()\r\n                  .duration(80)\r\n                  .text(value1 + \": \" + selectedDataMann.value + \"%\" + \": \")\r\n                  .attr(\"x\", xScale(new Date (selectedDataFrau.key))+ dimensions.width/20 )\r\n                  .attr(\"y\", dimensions.height/2.3 )\r\n                  focusText3\r\n                  .transition()\r\n                  .duration(80)\r\n                  .text(value2 + \": \" + selectedDataFrau.value + \"%\" + \": \")\r\n                  .attr(\"x\", xScale(new Date (selectedDataFrau.key)) + dimensions.width/20)\r\n                  .attr(\"y\", dimensions.height/2.1 )\r\n                      \r\n                  focusBox\r\n                  .transition()\r\n                  .duration(80)\r\n                  .attr(\"x\", xScale(new Date (selectedDataFrau.key)) + 20)\r\n                  .attr(\"y\", dimensions.height/3)\r\n\r\n         }\r\n       \r\n                function mouseout() {\r\n                  focus.style(\"opacity\", 0)\r\n                  focusMann.style(\"opacity\", 0)\r\n                  focusFrau.style(\"opacity\", 0)\r\n                  focusBox.style(\"opacity\", 0)\r\n                  focusText.style(\"opacity\", 0)\r\n                  focusText2.style(\"opacity\", 0)\r\n                  focusText3.style(\"opacity\", 0)\r\n                 // focusText.style(\"opacity\", 0)\r\n                }\r\n                function mouseover() {\r\n                  focusMann.style(\"opacity\", 1)\r\n                  focusFrau.style(\"opacity\", 1)\r\n                  focus.style(\"opacity\", 1)\r\n                  focusBox.style(\"opacity\",1)\r\n                  focusText.style(\"opacity\", 1)\r\n                  focusText2.style(\"opacity\", 1)\r\n                  focusText3.style(\"opacity\", 1)\r\n                 // focusText.style(\"opacity\", 0)\r\n                }\r\n*/\r\n      const curve = curveLinear;\r\n\r\n      Tooltip(svg, valesFrau, valesMann, color1, color2, dimensions, xScale, yScale, value2, value1, value1 );\r\n\r\n      const myArea = area()\r\n      .x((d)=> (xScale(new Date(d.key))))\r\n      .y0(dimensions.height)\r\n      .y1((d)=> (yScale(d.value)))\r\n      .curve(curve)\r\n\r\n        svg\r\n         .selectAll(\".newArea\")\r\n         .data([valesMann])\r\n         .join(\"path\")\r\n         .attr(\"class\", \"newArea\")\r\n         .transition()\r\n         .duration(500)\r\n         .attr(\"d\", (value, index) => myArea(value))\r\n         .transition()\r\n         .attr(\"fill\", color1)\r\n         \r\n        \r\n         svg\r\n         .selectAll(\".newerArea\")\r\n         .data([valesFrau])\r\n         .join(\"path\")\r\n         .attr(\"class\", \"newerArea\")\r\n         .transition()\r\n         .duration(500)\r\n         .attr(\"d\", (value, index) => myArea(value))\r\n         \r\n         .attr(\"fill\", \"none\")\r\n         .attr(\"fill\", color2)\r\n\r\n   }, [data, dimensions, property]);\r\n    return (\r\n     <div  className=\"IKTWarapperRef\" ref={wrapperRef} >\r\n        <svg ref={svgRef}>\r\n          <g className=\"x-axis\" />\r\n          <g className=\"y-axis\" />\r\n        </svg>\r\n      </div>\r\n    );\r\n    }\r\n    \r\n    export default AreaIKTBesch채ftigung;"]},"metadata":{},"sourceType":"module"}