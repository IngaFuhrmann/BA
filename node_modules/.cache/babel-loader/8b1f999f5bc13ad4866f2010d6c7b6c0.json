{"ast":null,"code":"import _slicedToArray from \"D:\\\\Studium\\\\Bachelor\\\\WebApp\\\\visapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Studium\\\\Bachelor\\\\WebApp\\\\visapp\\\\src\\\\components\\\\charts\\\\BarNutzungsGr\\xFCnde.jsx\";\nimport React, { useRef, useEffect, useState } from \"react\";\nimport { select, line, curveCardinal, axisBottom, axisLeft, scaleTime, scaleLinear, scaleBand, min, max, event, bisector, mouse, ticks } from 'd3';\nimport useResizeObserver from \"./useReziseObserver\";\n\nfunction BarNutzungsGründe({\n  data,\n  highlight\n}) {\n  const svgRef = useRef();\n  const wrapperRef = useRef();\n  const dimensions = useResizeObserver(wrapperRef);\n\n  const _useState = useState([0, 1.5]),\n        _useState2 = _slicedToArray(_useState, 2),\n        selection = _useState2[0],\n        setSelection = _useState2[1];\n\n  useEffect(() => {\n    const svg = select(svgRef.current);\n    if (!dimensions) return;\n    const xScale = scaleLinear().domain([0, 100]).range([0, dimensions.width]); //change\n\n    const yScale = scaleBand().domain(data.map((value, index) => value.geo)) //todo\n    .range([0, dimensions.height - 100]) //change\n    .padding(0.2);\n    const xAxis = axisBottom(xScale);\n    svg.select(\".x-axis\").call(xAxis);\n    const yAxis = axisLeft(yScale).tickSizeOuter(0).tickSizeInner(0);\n    svg.select(\".y-axis\").style('font-size', '14').style('color', 'grey').call(yAxis);\n  }, [data, dimensions]);\n  return React.createElement(\"div\", {\n    ref: wrapperRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"svg\", {\n    ref: svgRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"g\", {\n    className: \"x-axis\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), React.createElement(\"g\", {\n    className: \"y-axis\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  })));\n}\n\nexport default BarNutzungsGründe;","map":{"version":3,"sources":["D:/Studium/Bachelor/WebApp/visapp/src/components/charts/BarNutzungsGründe.jsx"],"names":["React","useRef","useEffect","useState","select","line","curveCardinal","axisBottom","axisLeft","scaleTime","scaleLinear","scaleBand","min","max","event","bisector","mouse","ticks","useResizeObserver","BarNutzungsGründe","data","highlight","svgRef","wrapperRef","dimensions","selection","setSelection","svg","current","xScale","domain","range","width","yScale","map","value","index","geo","height","padding","xAxis","call","yAxis","tickSizeOuter","tickSizeInner","style"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,aAAvB,EAAsCC,UAAtC,EAAkDC,QAAlD,EAA4DC,SAA5D,EAAuEC,WAAvE,EAAoFC,SAApF,EAA+FC,GAA/F,EAAoGC,GAApG,EAAyGC,KAAzG,EAAgHC,QAAhH,EAA0HC,KAA1H,EAAiIC,KAAjI,QAA6I,IAA7I;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;;AAGA,SAASC,iBAAT,CAA2B;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAA3B,EAAgD;AAC7C,QAAMC,MAAM,GAAGrB,MAAM,EAArB;AACA,QAAMsB,UAAU,GAAGtB,MAAM,EAAzB;AACA,QAAMuB,UAAU,GAAGN,iBAAiB,CAACK,UAAD,CAApC;;AAH6C,oBAIXpB,QAAQ,CAAC,CAAC,CAAD,EAAI,GAAJ,CAAD,CAJG;AAAA;AAAA,QAItCsB,SAJsC;AAAA,QAI3BC,YAJ2B;;AAM7CxB,EAAAA,SAAS,CAAC,MAAM;AAEf,UAAMyB,GAAG,GAAGvB,MAAM,CAACkB,MAAM,CAACM,OAAR,CAAlB;AAEA,QAAG,CAACJ,UAAJ,EAAgB;AAEhB,UAAMK,MAAM,GAAGnB,WAAW,GACzBoB,MADc,CACP,CAAC,CAAD,EAAI,GAAJ,CADO,EAEfC,KAFe,CAET,CAAC,CAAD,EAAIP,UAAU,CAACQ,KAAf,CAFS,CAAf,CANe,CAQc;;AAG7B,UAAMC,MAAM,GAAItB,SAAS,GAEzBmB,MAFgB,CAETV,IAAI,CAACc,GAAL,CAAS,CAACC,KAAD,EAAQC,KAAR,KAAkBD,KAAK,CAACE,GAAjC,CAFS,EAEgC;AAFhC,KAGhBN,KAHgB,CAGV,CAAC,CAAD,EAAIP,UAAU,CAACc,MAAX,GAAoB,GAAxB,CAHU,EAGqB;AAHrB,KAIhBC,OAJgB,CAIR,GAJQ,CAAhB;AAMD,UAAMC,KAAK,GAAGjC,UAAU,CAACsB,MAAD,CAAxB;AACIF,IAAAA,GAAG,CACJvB,MADC,CACM,SADN,EAEDqC,IAFC,CAEID,KAFJ;AAIF,UAAME,KAAK,GAAGlC,QAAQ,CAACyB,MAAD,CAAR,CACRU,aADQ,CACM,CADN,EAERC,aAFQ,CAEM,CAFN,CAAd;AAGKjB,IAAAA,GAAG,CACAvB,MADH,CACU,SADV,EAEGyC,KAFH,CAES,WAFT,EAEsB,IAFtB,EAGGA,KAHH,CAGS,OAHT,EAGkB,MAHlB,EAIGJ,IAJH,CAIQC,KAJR;AAOT,GAhCW,EAgCT,CAACtB,IAAD,EAAOI,UAAP,CAhCS,CAAT;AAiCH,SACC;AAAK,IAAA,GAAG,EAAED,UAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG;AAAK,IAAA,GAAG,EAAED,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAG,IAAA,SAAS,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADH,CADD;AAQC;;AAED,eAAeH,iBAAf","sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\r\nimport { select, line, curveCardinal, axisBottom, axisLeft, scaleTime, scaleLinear, scaleBand, min, max, event, bisector, mouse, ticks} from 'd3';\r\nimport useResizeObserver from \"./useReziseObserver\";\r\n\r\n\r\nfunction BarNutzungsGründe({ data, highlight }) {\r\n   const svgRef = useRef();\r\n   const wrapperRef = useRef();\r\n   const dimensions = useResizeObserver(wrapperRef);\r\n   const [selection, setSelection] = useState([0, 1.5]);\r\n\r\n   useEffect(() => {\r\n\r\n    const svg = select(svgRef.current);\r\n     \r\n    if(!dimensions) return;\r\n \r\n    const xScale = scaleLinear()\r\n    .domain([0, 100])\r\n   .range([0, dimensions.width]) //change\r\n   \r\n  \r\n    const yScale =  scaleBand()\r\n    \r\n   .domain(data.map((value, index) => value.geo))   //todo\r\n   .range([0, dimensions.height - 100])  //change\r\n   .padding(0.2)\r\n\r\n   const xAxis = axisBottom(xScale);\r\n       svg\r\n     .select(\".x-axis\")\r\n     .call(xAxis);\r\n    \r\n     const yAxis = axisLeft(yScale)\r\n          .tickSizeOuter(0)\r\n          .tickSizeInner(0);\r\n          svg\r\n            .select(\".y-axis\")\r\n            .style('font-size', '14')\r\n            .style('color', 'grey')\r\n            .call(yAxis);\r\n\r\n\r\n}, [data, dimensions]);\r\nreturn (\r\n <div ref={wrapperRef} >\r\n    <svg ref={svgRef}>\r\n      <g className=\"x-axis\" />\r\n      <g className=\"y-axis\" />\r\n    </svg>\r\n  </div>\r\n);\r\n}\r\n\r\nexport default BarNutzungsGründe;"]},"metadata":{},"sourceType":"module"}