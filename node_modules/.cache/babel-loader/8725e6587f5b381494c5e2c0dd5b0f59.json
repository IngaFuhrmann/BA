{"ast":null,"code":"var _jsxFileName = \"D:\\\\Studium\\\\Bachelor\\\\WebApp\\\\visapp\\\\src\\\\components\\\\charts\\\\LineChart.jsx\";\nimport React, { useRef, useEffect } from \"react\";\nimport { select, line, curveCardinal, axisBottom, axisLeft, scaleTime, scaleLinear, min, max, bisector, mouse, entries } from 'd3';\nimport '../../styles/charts.css';\nimport useResizeObserver from './useReziseObserver';\nimport Tooltip from \"./tooltips\";\n\nfunction LineCharts({\n  data,\n  property,\n  colorline,\n  colorline2,\n  value\n}) {\n  const svgRef = useRef();\n  const wrapperRef = useRef();\n  const dimensions = useResizeObserver(wrapperRef);\n  useEffect(() => {\n    var value1 = \"Alle\";\n    var value2 = \"Breitband\";\n    const svg = select(svgRef.current);\n    var filterAlle;\n    var filterBB;\n    if (!dimensions) return; //Daten filtern\n\n    var filtered = data.filter(a => a.geo == property);\n\n    for (var i = 0; i < filtered.length; i++) {\n      var filterAlle = filtered[i].alle;\n    }\n\n    for (var i = 0; i < filtered.length; i++) {\n      var filterBB = filtered[i].bb;\n    }\n\n    var valesAlle = entries(filterAlle);\n    var valesBB = entries(filterBB); //Sortieren nach Jahreszahl\n\n    const minDate = new Date(min(valesAlle, value => value.key));\n    const maxDate = new Date(max(valesAlle, value => value.key)); // console.log(minDate);\n    // console.log(maxDate);\n\n    const xScale = scaleTime().domain([minDate - 2.628e+9, maxDate]).range([-1, dimensions.width]);\n    const yScale = scaleLinear().domain([0, 100]).range([dimensions.height, 0]);\n    const yAxis = axisLeft(yScale).tickSize(0);\n    svg.select('.y-axis').style('color', 'grey').style('font-size', '14').call(yAxis);\n    const xAxis = axisBottom(xScale);\n    svg.select(\".x-axis\").join(\".x-axis\").style('transform', `translateY(${dimensions.height}px)`).style('color', 'grey').style('font-size', '14').style('stroke-width', 1).call(xAxis); //Grids\n\n    var grids = svg.select(\"g\").append(\"g\").join(\"g\").attr(\"class\", \"grid\").attr('transform', 'translate(0,' + -dimensions.height + ')').call(axisLeft(yScale).tickSize(-dimensions.width).tickFormat(\"\")); //X-Achsen-Beschriftung\n\n    svg.select(\"text\").join(\"text\").attr(\"text-anchor\", \"end\").attr(\"fill\", \"grey\").attr(\"x\", dimensions.width).attr(\"y\", +dimensions.height / 8).attr(\"font-weight\", \"bold\").text(\"Jahr\"); //Y-Achsen-Beschrifzung\n\n    svg.append(\"text\").attr(\"text-anchor\", \"end\").attr(\"transform\", \"rotate(-90)\").attr(\"fill\", \"grey\").attr(\"y\", -50).attr(\"x\", 0).text(\"Prozent\");\n    Tooltip(svg, valesAlle, valesBB, colorline, colorline2, dimensions, xScale, yScale, value1, value2); //Lines\n\n    const myLine = line().x(d => xScale(new Date(d.key))).y(d => yScale(d.value)).defined(d => d.value != 0).curve(curveCardinal); //herausfiltern der fehlenden werte\n\n    var filteredAlle = valesAlle.filter(myLine.defined());\n    var filteredBB = valesBB.filter(myLine.defined());\n    var lineAlle1 = svg.selectAll(\".newline\").data([filteredAlle]).join(\"path\").attr(\"class\", \"newline\").attr(\"d\", (value, index) => myLine(value)).transition().attr(\"fill\", \"none\").attr(\"stroke\", colorline).attr(\"stroke-dasharray\", \"3, 3\");\n    var lineAlle2 = svg.selectAll(\".newerline\").data([valesAlle]).join(\"path\").attr(\"class\", \"newerline\").attr(\"d\", (value, index) => myLine(value)).transition().attr(\"fill\", \"none\").attr(\"stroke\", colorline).attr(\"stroke-width\", \"5\").attr(\"stroke-linecap\", \"round\");\n    var lineBB1 = svg.selectAll(\".newlineBB\").data([filteredBB]).join(\"path\").attr(\"class\", \"newlineBB\").attr(\"d\", (value, index) => myLine(value)).transition().attr(\"fill\", \"none\").attr(\"stroke\", colorline2).attr(\"stroke-dasharray\", \"3, 3\").attr(\"opacity\", \"0\");\n    var lineBB2 = svg.selectAll(\".newerlineBB\").data([valesBB]).join(\"path\").attr(\"class\", \"newerlineBB\").attr(\"d\", (value, index) => myLine(value)).transition().attr(\"fill\", \"none\").attr(\"stroke\", colorline2).attr(\"stroke-width\", \"5\").attr(\"stroke-linecap\", \"round\").attr(\"opacity\", \"0\");\n\n    if (value == \"BB\") {\n      lineBB1.attr(\"opacity\", \"1\");\n      lineBB2.attr(\"opacity\", \"1\");\n    } else {\n      console.log(\"noooo\");\n    } //     } else {\n    //        console.log(\"Nooo\")\n    //     }\n    //Tooltip\n    //Tooltip-Elemente\n\n    /*  var focusBox = svg\r\n      .append('g')\r\n      .append('rect')\r\n      .style(\"opacity\", 0)\r\n      .attr(\"width\", 90)\r\n      .attr(\"height\", 30)\r\n      .style(\"fill\", \"#e0e2e5\")\r\n      .style(\"stroke\", \"#e0e2e5\")\r\n      .style(\"stroke\", colorline)\r\n      .style(\"stroke-width\", \"1\" )\r\n      .attr(\"rx\", 4)\r\n            .attr(\"ry\", 4);\r\n        var focus = svg\r\n      .append('g')\r\n      .append('circle')\r\n      .style(\"fill\", colorline)\r\n      .attr('r', 8.5)\r\n      .style(\"opacity\", 0);\r\n        var focusText = svg\r\n      .append('g')\r\n      .append('text')\r\n      .style(\"opacity\", 0)\r\n      .attr(\"text-anchor\", \"left\")\r\n      .attr(\"alignment-baseline\", \"middle\")\r\n      .attr(\"fill\", \"#203040\")\r\n      .style(\"font-size\", 13)\r\n      .style(\"font-weight\", \"bold\")\r\n      \r\n      svg\r\n      .append('rect')\r\n      .style(\"fill\", \"none\")\r\n      .style(\"pointer-events\", \"all\")\r\n      .attr('width', dimensions.width)\r\n      .attr('height', dimensions.height)\r\n      .on('mouseover', mouseover)\r\n      .on('mousemove', mousemove)\r\n      .on('mouseout', mouseout); \r\n      \r\n     \r\n       function mouseover() {\r\n          focus.style(\"opacity\", 1)\r\n          focusText.style(\"opacity\",1)\r\n          focusBox.style(\"opacity\",1)\r\n        }\r\n        \r\n        function mousemove() {\r\n          var x0 = xScale.invert(mouse(this)[0]);\r\n          const bisect = bisector(d => new Date(d.key)).left;\r\n          const idx = bisect(filteredAlle, x0, 1);\r\n          const selectedData = filteredAlle[idx];\r\n            \r\n        focus\r\n          .transition()\r\n          .duration(50)\r\n          .attr(\"cx\", xScale(new Date(selectedData.key)))\r\n          .attr(\"cy\", yScale(selectedData.value))\r\n       \r\n          focusText\r\n          .transition()\r\n          .duration(50)\r\n             .text(selectedData.key + \": \" + selectedData.value + \"%\")\r\n             .attr(\"x\", xScale(new Date (selectedData.key)))\r\n             .attr(\"y\", yScale(selectedData.value) - 30)\r\n             \r\n          focusBox\r\n          .transition()\r\n          .duration(50)\r\n             .attr(\"x\", xScale(new Date (selectedData.key))- 15)\r\n             .attr(\"y\", yScale(selectedData.value) - 45)\r\n            }\r\n        function mouseout() {\r\n          focus.style(\"opacity\", 0)\r\n          focusText.style(\"opacity\", 0)\r\n          focusBox.style(\"opacity\", 0)\r\n        }\r\n    */\n\n  }, [data, dimensions, property]);\n  return React.createElement(\"div\", {\n    ref: wrapperRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247\n    },\n    __self: this\n  }, React.createElement(\"svg\", {\n    ref: svgRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248\n    },\n    __self: this\n  }, React.createElement(\"g\", {\n    className: \"x-axis\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249\n    },\n    __self: this\n  }), React.createElement(\"g\", {\n    className: \"y-axis\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250\n    },\n    __self: this\n  })));\n}\n\nexport default LineCharts;","map":{"version":3,"sources":["D:/Studium/Bachelor/WebApp/visapp/src/components/charts/LineChart.jsx"],"names":["React","useRef","useEffect","select","line","curveCardinal","axisBottom","axisLeft","scaleTime","scaleLinear","min","max","bisector","mouse","entries","useResizeObserver","Tooltip","LineCharts","data","property","colorline","colorline2","value","svgRef","wrapperRef","dimensions","value1","value2","svg","current","filterAlle","filterBB","filtered","filter","a","geo","i","length","alle","bb","valesAlle","valesBB","minDate","Date","key","maxDate","xScale","domain","range","width","yScale","height","yAxis","tickSize","style","call","xAxis","join","grids","append","attr","tickFormat","text","myLine","x","d","y","defined","curve","filteredAlle","filteredBB","lineAlle1","selectAll","index","transition","lineAlle2","lineBB1","lineBB2","console","log"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect} from \"react\";\r\nimport { select, line, curveCardinal, axisBottom, axisLeft, scaleTime, scaleLinear, min, max, bisector, mouse, entries} from 'd3';\r\nimport '../../styles/charts.css'\r\nimport useResizeObserver from './useReziseObserver'\r\nimport Tooltip from \"./tooltips\";\r\n\r\nfunction LineCharts({ data, property, colorline, colorline2, value}) {\r\n   const svgRef = useRef();\r\n   const wrapperRef = useRef();\r\n   const dimensions = useResizeObserver(wrapperRef);\r\n   useEffect(() => {\r\n      var value1 = \"Alle\"\r\n      var value2 = \"Breitband\"\r\n      const svg = select(svgRef.current);\r\n      var filterAlle;\r\n      var filterBB;\r\n\r\n         if(!dimensions) return;\r\n      \r\n      //Daten filtern\r\n         var filtered = data.filter(a=>a.geo==property);         \r\n            for(var i = 0; i < filtered.length; i ++) {\r\n             var filterAlle = filtered[i].alle; \r\n            }\r\n\r\n            for(var i = 0; i < filtered.length; i ++) {\r\n               var filterBB = filtered[i].bb; \r\n                }\r\n            var valesAlle = entries(filterAlle);\r\n            var valesBB = entries(filterBB);\r\n\r\n      //Sortieren nach Jahreszahl\r\n      const minDate = new Date (min(valesAlle, value => value.key));\r\n      const maxDate = new Date (max(valesAlle, value => value.key));     \r\n\r\n     // console.log(minDate);\r\n     // console.log(maxDate);\r\n       \r\n\r\n      const xScale = scaleTime()\r\n          .domain([minDate - 2.628e+9,maxDate])   \r\n          .range([-1, dimensions.width]) \r\n        \r\n      const yScale =  scaleLinear()\r\n            .domain([0, 100])\r\n             .range([dimensions.height, 0]);\r\n\r\n      \r\n      const yAxis = axisLeft(yScale).tickSize(0);   \r\n      svg\r\n      .select('.y-axis')\r\n      .style('color', 'grey')\r\n      .style('font-size', '14')\r\n      .call(yAxis);\r\n\r\n     const xAxis = axisBottom(xScale)\r\n     svg\r\n      .select(\".x-axis\")\r\n      .join(\".x-axis\")\r\n      .style('transform', `translateY(${dimensions.height}px)`)\r\n      .style('color', 'grey')\r\n      .style('font-size', '14')\r\n      .style('stroke-width', 1)\r\n      .call(xAxis);\r\n\r\n      //Grids\r\n      var grids = svg.select(\"g\").append(\"g\")\r\n         .join(\"g\")\r\n         .attr(\"class\", \"grid\")\r\n         .attr('transform', 'translate(0,' + -dimensions.height + ')')\r\n         .call(axisLeft(yScale)\r\n            .tickSize(-dimensions.width)\r\n            .tickFormat(\"\")\r\n            )\r\n      \r\n      //X-Achsen-Beschriftung\r\n      svg.select(\"text\").join(\"text\")\r\n      .attr(\"text-anchor\", \"end\")\r\n      .attr(\"fill\", \"grey\")\r\n      .attr(\"x\", dimensions.width)\r\n       .attr(\"y\", + dimensions.height/ 8)\r\n       .attr(\"font-weight\", \"bold\")\r\n       .text(\"Jahr\");      \r\n      //Y-Achsen-Beschrifzung\r\n      svg.append(\"text\")\r\n      .attr(\"text-anchor\", \"end\")\r\n      .attr(\"transform\", \"rotate(-90)\")\r\n      .attr(\"fill\", \"grey\")\r\n      .attr(\"y\", - 50)\r\n      .attr(\"x\", 0)\r\n      .text(\"Prozent\")\r\n\r\n      Tooltip(svg, valesAlle, valesBB, colorline, colorline2, dimensions, xScale, yScale, value1, value2);\r\n    //Lines\r\n      const myLine = line()\r\n      .x((d)=> (xScale(new Date(d.key))))\r\n      .y((d)=> (yScale(d.value)))\r\n      .defined((d)=> d.value != 0)\r\n      .curve(curveCardinal);\r\n    \r\n      //herausfiltern der fehlenden werte\r\n      var filteredAlle = valesAlle.filter(myLine.defined());\r\n      var filteredBB = valesBB.filter(myLine.defined());\r\n      \r\n         var lineAlle1 = svg \r\n         .selectAll(\".newline\")\r\n         .data([filteredAlle])\r\n         .join(\"path\")\r\n         .attr(\"class\", \"newline\")\r\n         .attr(\"d\", (value, index) => myLine(value))\r\n         .transition()\r\n         .attr(\"fill\", \"none\")\r\n         .attr(\"stroke\", colorline)\r\n         .attr(\"stroke-dasharray\", (\"3, 3\"))\r\n        \r\n         var lineAlle2 =    svg\r\n         .selectAll(\".newerline\")\r\n         .data([valesAlle])\r\n         .join(\"path\")\r\n         .attr(\"class\", \"newerline\")\r\n         .attr(\"d\", (value, index) => myLine(value))\r\n         .transition()\r\n         .attr(\"fill\", \"none\")\r\n         .attr(\"stroke\", colorline)\r\n         .attr(\"stroke-width\", \"5\" )\r\n         .attr(\"stroke-linecap\", \"round\")\r\n\r\n         var lineBB1 = svg\r\n         .selectAll(\".newlineBB\")\r\n         .data([filteredBB])\r\n         .join(\"path\")\r\n         .attr(\"class\", \"newlineBB\")\r\n         .attr(\"d\", (value, index) => myLine(value))\r\n         .transition()\r\n         .attr(\"fill\", \"none\")\r\n         .attr(\"stroke\", colorline2)\r\n         .attr(\"stroke-dasharray\", (\"3, 3\"))\r\n         .attr(\"opacity\", \"0\")    \r\n        \r\n         var lineBB2 = svg\r\n         .selectAll(\".newerlineBB\")\r\n         .data([valesBB])\r\n         .join(\"path\")\r\n         .attr(\"class\", \"newerlineBB\")\r\n         .attr(\"d\", (value, index) => myLine(value))\r\n         .transition()\r\n         .attr(\"fill\", \"none\")\r\n         .attr(\"stroke\", colorline2)\r\n         .attr(\"stroke-width\", \"5\" )\r\n         .attr(\"stroke-linecap\", \"round\")\r\n         .attr(\"opacity\", \"0\")\r\n\r\n         if(value == \"BB\"){\r\n            lineBB1.attr(\"opacity\", \"1\")\r\n            lineBB2.attr(\"opacity\", \"1\")\r\n         }\r\n         else{\r\n            console.log(\"noooo\")\r\n         }\r\n    //     } else {\r\n    //        console.log(\"Nooo\")\r\n    //     }\r\n      //Tooltip\r\n      //Tooltip-Elemente\r\n   /*  var focusBox = svg\r\n     .append('g')\r\n     .append('rect')\r\n     .style(\"opacity\", 0)\r\n     .attr(\"width\", 90)\r\n     .attr(\"height\", 30)\r\n     .style(\"fill\", \"#e0e2e5\")\r\n     .style(\"stroke\", \"#e0e2e5\")\r\n     .style(\"stroke\", colorline)\r\n     .style(\"stroke-width\", \"1\" )\r\n     .attr(\"rx\", 4)\r\n           .attr(\"ry\", 4);\r\n\r\n     var focus = svg\r\n     .append('g')\r\n     .append('circle')\r\n     .style(\"fill\", colorline)\r\n     .attr('r', 8.5)\r\n     .style(\"opacity\", 0);\r\n\r\n     var focusText = svg\r\n     .append('g')\r\n     .append('text')\r\n     .style(\"opacity\", 0)\r\n     .attr(\"text-anchor\", \"left\")\r\n     .attr(\"alignment-baseline\", \"middle\")\r\n     .attr(\"fill\", \"#203040\")\r\n     .style(\"font-size\", 13)\r\n     .style(\"font-weight\", \"bold\")\r\n     \r\n     svg\r\n     .append('rect')\r\n     .style(\"fill\", \"none\")\r\n     .style(\"pointer-events\", \"all\")\r\n     .attr('width', dimensions.width)\r\n     .attr('height', dimensions.height)\r\n     .on('mouseover', mouseover)\r\n     .on('mousemove', mousemove)\r\n     .on('mouseout', mouseout); \r\n     \r\n    \r\n      function mouseover() {\r\n         focus.style(\"opacity\", 1)\r\n         focusText.style(\"opacity\",1)\r\n         focusBox.style(\"opacity\",1)\r\n       }\r\n       \r\n       function mousemove() {\r\n         var x0 = xScale.invert(mouse(this)[0]);\r\n         const bisect = bisector(d => new Date(d.key)).left;\r\n         const idx = bisect(filteredAlle, x0, 1);\r\n         const selectedData = filteredAlle[idx];\r\n           \r\n       focus\r\n         .transition()\r\n         .duration(50)\r\n         .attr(\"cx\", xScale(new Date(selectedData.key)))\r\n         .attr(\"cy\", yScale(selectedData.value))\r\n      \r\n         focusText\r\n         .transition()\r\n         .duration(50)\r\n            .text(selectedData.key + \": \" + selectedData.value + \"%\")\r\n            .attr(\"x\", xScale(new Date (selectedData.key)))\r\n            .attr(\"y\", yScale(selectedData.value) - 30)\r\n            \r\n         focusBox\r\n         .transition()\r\n         .duration(50)\r\n            .attr(\"x\", xScale(new Date (selectedData.key))- 15)\r\n            .attr(\"y\", yScale(selectedData.value) - 45)\r\n\r\n         }\r\n       function mouseout() {\r\n         focus.style(\"opacity\", 0)\r\n         focusText.style(\"opacity\", 0)\r\n         focusBox.style(\"opacity\", 0)\r\n       }\r\n*/\r\n\r\n   }, [data, dimensions, property]);\r\n   return (\r\n         <div ref={wrapperRef}>\r\n            <svg ref={svgRef}>\r\n               <g className='x-axis' />\r\n               <g className=\"y-axis\" />\r\n            </svg>\r\n            </div>\r\n   );\r\n}\r\n\r\nexport default LineCharts;"]},"metadata":{},"sourceType":"module"}