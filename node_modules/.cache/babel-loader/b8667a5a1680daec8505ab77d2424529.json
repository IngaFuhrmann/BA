{"ast":null,"code":"import _slicedToArray from \"D:\\\\Studium\\\\Bachelor\\\\WebApp\\\\visapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Studium\\\\Bachelor\\\\WebApp\\\\visapp\\\\src\\\\components\\\\charts\\\\BarMobilnutzung.jsx\";\nimport React, { useRef, useEffect, useState } from \"react\";\nimport { select, line, curveCardinal, axisBottom, axisLeft, scaleTime, scaleLinear, scaleBand, min, max, event, bisector, mouse, ticks } from 'd3';\nimport useResizeObserver from \"./useReziseObserver\";\n\nfunction BarMobilNutzung({\n  data,\n  highlight\n}) {\n  const svgRef = useRef();\n  const wrapperRef = useRef();\n  const dimensions = useResizeObserver(wrapperRef);\n\n  const _useState = useState([0, 1.5]),\n        _useState2 = _slicedToArray(_useState, 2),\n        selection = _useState2[0],\n        setSelection = _useState2[1];\n\n  useEffect(() => {\n    const svg = select(svgRef.current);\n    if (!dimensions) return;\n    const xScale = scaleBand().domain(data.map((value, index) => value.age)) // .domain([0, data.length-1]) //0 zu 0 ; 6 zu 200\n    .range([0, dimensions.width]); //change\n\n    const yScale = scaleLinear().domain([0, 100]) //todo\n    .range([dimensions.height, 30]); //change\n\n    const yAxis = axisLeft(yScale);\n    svg.select('.y-axis').style('color', 'grey').style('font-size', '14').call(yAxis);\n    const xAxis = axisBottom(xScale);\n    svg.select(\".x-axis\").style('transform', `translateY(${dimensions.height}px)`).style('color', 'grey').style('font-size', '14').style('stroke-width', 1).call(xAxis); //X-Achsen-Beschriftung\n\n    svg.append(\"text\").attr(\"text-anchor\", \"end\").attr(\"fill\", \"grey\").attr(\"x\", dimensions.width).attr(\"y\", dimensions.height + 50).text(\"Jahr\");\n    svg.selectAll(\".bar\").data(data).join(\"rect\").attr(\"class\", \"bar\").style(\"transform\", \"scale(1, -1)\").attr(\"x\", (age, index) => xScale(index)).attr(\"y\", -dimensions.height).attr(\"width\", xScale.bandwidth());\n  }, [data, dimensions]);\n  return React.createElement(\"div\", {\n    ref: wrapperRef,\n    style: {\n      marginBottom: \"2rem\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"svg\", {\n    ref: svgRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"g\", {\n    className: \"x-axis\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }), React.createElement(\"g\", {\n    className: \"y-axis\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  })));\n}\n\nexport default BarMobilNutzung;","map":{"version":3,"sources":["D:/Studium/Bachelor/WebApp/visapp/src/components/charts/BarMobilnutzung.jsx"],"names":["React","useRef","useEffect","useState","select","line","curveCardinal","axisBottom","axisLeft","scaleTime","scaleLinear","scaleBand","min","max","event","bisector","mouse","ticks","useResizeObserver","BarMobilNutzung","data","highlight","svgRef","wrapperRef","dimensions","selection","setSelection","svg","current","xScale","domain","map","value","index","age","range","width","yScale","height","yAxis","style","call","xAxis","append","attr","text","selectAll","join","bandwidth","marginBottom"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\r\nimport { select, line, curveCardinal, axisBottom, axisLeft, scaleTime, scaleLinear, scaleBand, min, max, event, bisector, mouse, ticks} from 'd3';\r\nimport useResizeObserver from \"./useReziseObserver\";\r\n\r\n\r\nfunction BarMobilNutzung({ data, highlight }) {\r\n   const svgRef = useRef();\r\n   const wrapperRef = useRef();\r\n   const dimensions = useResizeObserver(wrapperRef);\r\n   const [selection, setSelection] = useState([0, 1.5]);\r\n\r\n   useEffect(() => {\r\n\r\n    const svg = select(svgRef.current);\r\n     \r\n         if(!dimensions) return;\r\n      \r\n         const xScale = scaleBand()\r\n         .domain(data.map((value, index) => value.age))\r\n       // .domain([0, data.length-1]) //0 zu 0 ; 6 zu 200\r\n        .range([0, dimensions.width]) //change\r\n        \r\n        const yScale =  scaleLinear()\r\n        .domain([0, 100])   //todo\r\n        .range([dimensions.height, 30]);  //change\r\n\r\n        const yAxis = axisLeft(yScale);   \r\n        svg\r\n        .select('.y-axis')\r\n        .style('color', 'grey')\r\n        .style('font-size', '14')\r\n        .call(yAxis);\r\n        const xAxis = axisBottom(xScale)\r\n        svg\r\n         .select(\".x-axis\")\r\n         .style('transform', `translateY(${dimensions.height}px)`)\r\n         .style('color', 'grey')\r\n         .style('font-size', '14')\r\n         .style('stroke-width', 1)\r\n         .call(xAxis);\r\n\r\n        //X-Achsen-Beschriftung\r\n        svg.append(\"text\")\r\n        .attr(\"text-anchor\", \"end\")\r\n        .attr(\"fill\", \"grey\")\r\n        .attr(\"x\", dimensions.width)\r\n         .attr(\"y\", dimensions.height  + 50)\r\n         .text(\"Jahr\");\r\n          \r\n          svg\r\n      .selectAll(\".bar\")\r\n      .data(data)\r\n      .join(\"rect\")\r\n      .attr(\"class\", \"bar\")\r\n      .style(\"transform\", \"scale(1, -1)\")\r\n      .attr(\"x\", (age, index) => xScale(index))\r\n      .attr(\"y\", -dimensions.height)\r\n      .attr(\"width\", xScale.bandwidth())\r\n\r\n  }, [data, dimensions]);\r\n  return (\r\n   <div ref={wrapperRef} style={{ marginBottom: \"2rem\" }}>\r\n      <svg ref={svgRef}>\r\n        <g className=\"x-axis\" />\r\n        <g className=\"y-axis\" />\r\n      </svg>\r\n    </div>\r\n);\r\n}\r\n\r\nexport default BarMobilNutzung;"]},"metadata":{},"sourceType":"module"}