{"ast":null,"code":"import _slicedToArray from \"D:\\\\Studium\\\\Bachelor\\\\WebApp\\\\visapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Studium\\\\Bachelor\\\\WebApp\\\\visapp\\\\src\\\\components\\\\charts\\\\IKTBesch\\xE4ftigung.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport DropDown from '../DropDown';\nimport ToggleSlider from '../ToggleSlider';\nimport BarChartContainer from './BarNutzungsGründe';\nimport '../../styles/charts.css';\nexport default function Nutzungsgründe() {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        data = _useState2[0],\n        setData = _useState2[1];\n\n  const _useState3 = useState(),\n        _useState4 = _slicedToArray(_useState3, 2),\n        highlight = _useState4[0],\n        setHighlight = _useState4[1];\n\n  useEffect(() => {\n    fetch(\"https://webhooks.mongodb-stitch.com/api/client/v2.0/app/dataviztest-bbcvc/service/viz/incoming_webhook/webhook4\").then(response => response.ok && response.json()).then(datazugang => {\n      setData(datazugang.sort((a, b) => a.GEO.localeCompare(b.GEO)));\n    }).catch(console.error);\n  }, []);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  });\n}","map":{"version":3,"sources":["D:/Studium/Bachelor/WebApp/visapp/src/components/charts/IKTBeschäftigung.jsx"],"names":["React","useEffect","useState","DropDown","ToggleSlider","BarChartContainer","Nutzungsgründe","data","setData","highlight","setHighlight","fetch","then","response","ok","json","datazugang","sort","a","b","GEO","localeCompare","catch","console","error"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAOC,YAAP,MAAyB,iBAAzB;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAO,yBAAP;AAGA,eAAe,SAASC,cAAT,GAA0B;AAAA,oBAEbJ,QAAQ,CAAC,EAAD,CAFK;AAAA;AAAA,QAE9BK,IAF8B;AAAA,QAExBC,OAFwB;;AAAA,qBAGHN,QAAQ,EAHL;AAAA;AAAA,QAG9BO,SAH8B;AAAA,QAGnBC,YAHmB;;AAKrCT,EAAAA,SAAS,CAAC,MAAM;AACZU,IAAAA,KAAK,CAAC,iHAAD,CAAL,CACGC,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,EAAT,IAAeD,QAAQ,CAACE,IAAT,EADnC,EAEGH,IAFH,CAEQI,UAAU,IAAI;AAClBR,MAAAA,OAAO,CACLQ,UAAU,CAACC,IAAX,CAAgB,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACE,GAAF,CAAMC,aAAN,CAAoBF,CAAC,CAACC,GAAtB,CAA1B,CADK,CAAP;AAGD,KANH,EAOGE,KAPH,CAOSC,OAAO,CAACC,KAPjB;AAQD,GATM,EASJ,EATI,CAAT;AAWA,SAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ;AAMH","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport DropDown from '../DropDown'\r\nimport ToggleSlider from '../ToggleSlider'\r\nimport BarChartContainer from './BarNutzungsGründe'\r\nimport '../../styles/charts.css'\r\n\r\n\r\nexport default function Nutzungsgründe() {\r\n  \r\n    const [data, setData] = useState([]);\r\n    const [highlight, setHighlight] = useState();\r\n\r\n    useEffect(() => {\r\n        fetch(\"https://webhooks.mongodb-stitch.com/api/client/v2.0/app/dataviztest-bbcvc/service/viz/incoming_webhook/webhook4\")\r\n          .then(response => response.ok && response.json())\r\n          .then(datazugang => {\r\n            setData(\r\n              datazugang.sort((a, b) => a.GEO.localeCompare(b.GEO))\r\n            );\r\n          })\r\n          .catch(console.error);\r\n      }, []);\r\n\r\n    return (\r\n\r\n\r\n        <div></div>\r\n\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}