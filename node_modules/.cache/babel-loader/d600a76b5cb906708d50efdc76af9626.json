{"ast":null,"code":"import _slicedToArray from \"D:\\\\Studium\\\\Bachelor\\\\WebApp\\\\visapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Studium\\\\Bachelor\\\\WebApp\\\\visapp\\\\src\\\\components\\\\charts\\\\LineChartOnline.jsx\";\nimport React, { useRef, useEffect, useState } from \"react\";\nimport { select, min, max, scaleTime, scaleLinear, axisBottom } from \"d3\";\nimport useResizeObserver from \"./useReziseObserver\";\nimport LineChartVorlage from \"./ChartVorlage\";\n\nfunction LivingOnlineChart({\n  data,\n  highlight\n}) {\n  const svgRef = useRef();\n  const wrapperRef = useRef();\n  const dimensions = useResizeObserver(wrapperRef);\n\n  const _useState = useState([0, 1.5]),\n        _useState2 = _slicedToArray(_useState, 2),\n        selection = _useState2[0],\n        setSelection = _useState2[1];\n\n  useEffect(() => {\n    const svg = select(svgRef.current);\n    if (!dimensions) return; //Sortieren nach Jahreszahl\n\n    const minDate = new Date(min(data, value => value.time));\n    const maxDate = new Date(max(data, value => value.time));\n  }, [data, dimensions]);\n  return React.createElement(\"div\", {\n    ref: wrapperRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"svg\", {\n    ref: svgRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"g\", {\n    className: \"x-axis\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), React.createElement(\"g\", {\n    className: \"y-axis\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  })));\n}\n\nexport default LivingOnlineChart;","map":{"version":3,"sources":["D:/Studium/Bachelor/WebApp/visapp/src/components/charts/LineChartOnline.jsx"],"names":["React","useRef","useEffect","useState","select","min","max","scaleTime","scaleLinear","axisBottom","useResizeObserver","LineChartVorlage","LivingOnlineChart","data","highlight","svgRef","wrapperRef","dimensions","selection","setSelection","svg","current","minDate","Date","value","time","maxDate"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,SAASC,MAAT,EAAiBC,GAAjB,EAAsBC,GAAtB,EAA2BC,SAA3B,EAAsCC,WAAtC,EAAmDC,UAAnD,QAAqE,IAArE;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,gBAAP,MAA6B,gBAA7B;;AAEA,SAASC,iBAAT,CAA2B;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAA3B,EAAgD;AAE9C,QAAMC,MAAM,GAAGd,MAAM,EAArB;AACA,QAAMe,UAAU,GAAGf,MAAM,EAAzB;AACA,QAAMgB,UAAU,GAAGP,iBAAiB,CAACM,UAAD,CAApC;;AAJ8C,oBAKZb,QAAQ,CAAC,CAAC,CAAD,EAAI,GAAJ,CAAD,CALI;AAAA;AAAA,QAKvCe,SALuC;AAAA,QAK5BC,YAL4B;;AAO9CjB,EAAAA,SAAS,CAAC,MAAM;AAEd,UAAMkB,GAAG,GAAGhB,MAAM,CAACW,MAAM,CAACM,OAAR,CAAlB;AACA,QAAG,CAACJ,UAAJ,EAAgB,OAHF,CAKd;;AACA,UAAMK,OAAO,GAAG,IAAIC,IAAJ,CAAUlB,GAAG,CAACQ,IAAD,EAAOW,KAAK,IAAIA,KAAK,CAACC,IAAtB,CAAb,CAAhB;AACA,UAAMC,OAAO,GAAG,IAAIH,IAAJ,CAAUjB,GAAG,CAACO,IAAD,EAAOW,KAAK,IAAIA,KAAK,CAACC,IAAtB,CAAb,CAAhB;AAID,GAXQ,EAWN,CAACZ,IAAD,EAAOI,UAAP,CAXM,CAAT;AAcA,SACE;AAAK,IAAA,GAAG,EAAED,UAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG;AAAK,IAAA,GAAG,EAAED,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG;AAAG,IAAA,SAAS,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,EAEG;AAAG,IAAA,SAAS,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFH,CADH,CADF;AAQD;;AAED,eAAeH,iBAAf","sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\r\nimport { select, min, max, scaleTime, scaleLinear, axisBottom } from \"d3\";\r\nimport useResizeObserver from \"./useReziseObserver\";\r\nimport LineChartVorlage from \"./ChartVorlage\"\r\n\r\nfunction LivingOnlineChart({ data, highlight }) {\r\n  \r\n  const svgRef = useRef();\r\n  const wrapperRef = useRef();\r\n  const dimensions = useResizeObserver(wrapperRef);\r\n  const [selection, setSelection] = useState([0, 1.5]);\r\n\r\n  useEffect(() => {\r\n\r\n    const svg = select(svgRef.current);\r\n    if(!dimensions) return;\r\n\r\n    //Sortieren nach Jahreszahl\r\n    const minDate = new Date (min(data, value => value.time));\r\n    const maxDate = new Date (max(data, value => value.time));\r\n\r\n\r\n\r\n  }, [data, dimensions]);\r\n\r\n\r\n  return (\r\n    <div ref={wrapperRef}>\r\n       <svg ref={svgRef}>\r\n          <g className='x-axis' />\r\n          <g className=\"y-axis\" />\r\n       </svg>\r\n       </div>\r\n);\r\n}\r\n\r\nexport default LivingOnlineChart;"]},"metadata":{},"sourceType":"module"}