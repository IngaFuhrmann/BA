{"ast":null,"code":"var _jsxFileName = \"D:\\\\Studium\\\\Bachelor\\\\WebApp\\\\visapp\\\\src\\\\components\\\\charts\\\\AreaIKTBesch\\xE4ftigung.jsx\";\nimport React, { useRef, useEffect, useState } from \"react\";\nimport { select, axisBottom, axisLeft, scaleTime, scaleLinear, min, max, entries, bisector, mouse, curveLinear, area } from 'd3';\nimport useResizeObserver from \"./useReziseObserver\";\n\nfunction AreaIKTBeschäftigung({\n  data,\n  property\n}) {\n  const svgRef = useRef();\n  const wrapperRef = useRef();\n  const dimensions = useResizeObserver(wrapperRef);\n  useEffect(() => {\n    const svg = select(svgRef.current);\n    var filterme;\n    var filterMann;\n    if (!dimensions) return; //Daten filtern\n\n    var filtered = data.filter(a => a.geo == property);\n    var filtered = data.filter(a => a.geo == property);\n\n    for (var i = 0; i < filtered.length; i++) {\n      var filterme = filtered[i].Frauen;\n      var filterMann = filtered[i].Männer;\n    }\n\n    var valesFrau = entries(filterme);\n    var valesMann = entries(filterMann);\n    var objectsIKT = {\n      gen: valesFrau,\n      gens: valesMann\n    };\n    const minDate = new Date(min(objectsIKT.gen, value => value.key));\n    const maxDate = new Date(max(objectsIKT.gen, value => value.key));\n    console.log(minDate);\n    console.log(maxDate);\n    const xScale = scaleTime().domain([minDate, maxDate]).range([0, dimensions.width]);\n    const yScale = scaleLinear().domain([0, 100]).range([dimensions.height, 30]);\n    const yAxis = axisLeft(yScale);\n    svg.select('.y-axis').style('color', 'grey').style('font-size', '14').call(yAxis); //X-Achsen-Beschriftung\n\n    svg.append(\"text\").attr(\"text-anchor\", \"end\").attr(\"fill\", \"grey\").attr(\"x\", dimensions.width).attr(\"y\", dimensions.height + 50).text(\"Jahr\");\n    const xAxis = axisBottom(xScale);\n    svg.select(\".x-axis\").style('transform', `translateY(${dimensions.height}px)`).style('color', 'grey').style('font-size', '14').style('stroke-width', 1).call(xAxis, grids); //Grids\n\n    var grids = svg.append(\"g\").attr(\"class\", \"grid\").call(axisLeft(yScale).tickSize(-dimensions.width).tickFormat(\"\")); //Y-Achsen-Beschrifzung\n\n    svg.append(\"text\").attr(\"text-anchor\", \"end\").attr(\"transform\", \"rotate(-90)\").attr(\"fill\", \"grey\").attr(\"y\", -50).attr(\"x\", 0).text(\"Prozent\"); //Tooltip-Circle\n\n    var focus = svg.append('g').append('circle').style(\"fill\", \"#2770bc\").attr('r', 8.5).style(\"opacity\", 0); //Tooltip- Values\n\n    var focusText = svg.append('g').append('text').style(\"opacity\", 0).attr(\"text-anchor\", \"left\").attr(\"alignment-baseline\", \"middle\");\n    svg.append('rect').style(\"fill\", \"none\").style(\"pointer-events\", \"all\").attr('width', dimensions.width).attr('height', dimensions.height);\n    /**    .on('mouseover', mouseover)\r\n       .on('mousemove', mousemove)\r\n       .on('mouseout', mouseout); */\n\n    const curve = curveLinear;\n    const myArea = area().x(d => xScale(new Date(d.key))).y0(dimensions.height).y1(d => yScale(d.value)).curve(curve);\n    svg.selectAll(\".newArea\").data([valesMann]).join(\"path\").attr(\"class\", \"newArea\").attr(\"d\", (value, index) => myArea(value)).transition().attr(\"fill\", \"#9f77d0\").attr(\"stroke\", \"#6810d4\");\n    svg.selectAll(\".newerArea\").data([valesFrau]).join(\"path\").attr(\"class\", \"newerline\").attr(\"d\", (value, index) => myArea(value)).transition().attr(\"fill\", \"none\").attr(\"fill\", \"#d781d7\").attr(\"stroke\", \"#d043ee\");\n    /*  var path1 = svg\r\n      .append(\"path\")\r\n      .data([valesMann])\r\n      .join(\"path\")\r\n      .attr(\"class\", \"line1\")\r\n      .exit().remove();\r\n        var path2 = svg  \r\n      .append(\"path\")\r\n      .data([valesFrau]) \r\n      .join(\"path\")\r\n      .attr(\"class\", \"line2\")\r\n      .exit().remove();\r\n      tick();\r\n        function tick() {\r\n        svg.selectAll(\".line1\")\r\n        .attr(\"d\", (value, index) => myArea(value))\r\n        .attr(\"fill\", \"#9f77d0\")\r\n        .attr(\"stroke\", \"#6810d4\")\r\n        .attr(\"stroke-width\", \"1.2\" )\r\n        \r\n          svg.selectAll(\".line2\")\r\n        .attr(\"d\", (b, index) => myArea(b))\r\n        .attr(\"fill\", \"#d781d7\")\r\n        .attr(\"stroke\", \"#d043ee\")\r\n      .attr(\"stroke-width\", \"1.2\" )\r\n      \r\n        }\r\n    /*    svg\r\n      .selectAll(\"path\")\r\n      .join(\"area2\")\r\n      .data([valesMann])\r\n      .attr(\"d\", (value, index) => myLine(value))\r\n      .attr(\"fill\", \"#9f77d0\")\r\n      .attr(\"stroke\", \"#6810d4\")\r\n      .attr(\"stroke-width\", \"1.2\" )\r\n     \r\n     \r\n     var path = svg.append(\"path\");\r\n      path\r\n      .data([valesFrau])\r\n      .join(\"line\")\r\n      .attr(\"d\", (a, index) => myLine2(a))\r\n      .attr(\"fill\", \"#d781d7\")\r\n      .attr(\"stroke\", \"#d043ee\")\r\n      .attr(\"stroke-width\", \"1.2\" )*/\n\n    function mouseover() {\n      focus.style(\"opacity\", 1).transition();\n      focusText.style(\"opacity\", 1).transition();\n    }\n\n    function mousemove() {\n      var x0 = xScale.invert(mouse(this)[0]);\n      const bisect = bisector(d => new Date(d.key)).left;\n      const idx = bisect(filtered, x0, 1);\n      const selectedData = filtered[idx];\n      console.log(selectedData);\n      focus.transition().duration(80).attr(\"cx\", xScale(new Date(selectedData.key))).attr(\"cy\", yScale(selectedData.value));\n      focusText.transition().duration(80).text(selectedData.key + \" : \" + selectedData.value + \"%\").attr(\"x\", xScale(new Date(selectedData.key))).attr(\"y\", yScale(selectedData.value) - 30);\n    }\n\n    function mouseout() {\n      focus.style(\"opacity\", 0);\n      focusText.style(\"opacity\", 0);\n    }\n  }, [data, dimensions, property]);\n  return React.createElement(\"div\", {\n    className: \"IKTWarapperRef\",\n    ref: wrapperRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233\n    },\n    __self: this\n  }, React.createElement(\"svg\", {\n    ref: svgRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234\n    },\n    __self: this\n  }, React.createElement(\"g\", {\n    className: \"x-axis\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235\n    },\n    __self: this\n  }), React.createElement(\"g\", {\n    className: \"y-axis\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236\n    },\n    __self: this\n  })));\n}\n\nexport default AreaIKTBeschäftigung;","map":{"version":3,"sources":["D:/Studium/Bachelor/WebApp/visapp/src/components/charts/AreaIKTBeschäftigung.jsx"],"names":["React","useRef","useEffect","useState","select","axisBottom","axisLeft","scaleTime","scaleLinear","min","max","entries","bisector","mouse","curveLinear","area","useResizeObserver","AreaIKTBeschäftigung","data","property","svgRef","wrapperRef","dimensions","svg","current","filterme","filterMann","filtered","filter","a","geo","i","length","Frauen","Männer","valesFrau","valesMann","objectsIKT","gen","gens","minDate","Date","value","key","maxDate","console","log","xScale","domain","range","width","yScale","height","yAxis","style","call","append","attr","text","xAxis","grids","tickSize","tickFormat","focus","focusText","curve","myArea","x","d","y0","y1","selectAll","join","index","transition","mouseover","mousemove","x0","invert","bisect","left","idx","selectedData","duration","mouseout"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\r\nimport { select, axisBottom, axisLeft, scaleTime, scaleLinear, min, max, entries,bisector, mouse, curveLinear, area} from 'd3';\r\nimport useResizeObserver from \"./useReziseObserver\";\r\n\r\nfunction AreaIKTBeschäftigung({ data, property }) {\r\n   const svgRef = useRef();\r\n   const wrapperRef = useRef();\r\n   const dimensions = useResizeObserver(wrapperRef);\r\n \r\n   useEffect(() => {\r\n\r\n      const svg = select(svgRef.current);\r\n     var filterme;\r\n     var filterMann;\r\n      if(!dimensions) return;\r\n\r\n      //Daten filtern\r\n      var filtered = data.filter(a=>a.geo==property);\r\n      var filtered = data.filter(a=>a.geo==property);\r\n     \r\n    for(var i = 0; i < filtered.length; i ++) {\r\n       var filterme = filtered[i].Frauen;\r\n       var filterMann = filtered[i].Männer;  \r\n    }\r\n\r\n    var valesFrau = entries(filterme);\r\n    var valesMann = entries(filterMann);\r\n\r\n    var objectsIKT = {gen: valesFrau, gens: valesMann};\r\n\r\n    const minDate = new Date (min(objectsIKT.gen, value => value.key));\r\n    const maxDate = new Date (max(objectsIKT.gen, value => value.key));     \r\n\r\n    console.log(minDate);\r\n    console.log(maxDate);\r\n\r\n\r\n      const xScale = scaleTime()\r\n          .domain([minDate,maxDate])\r\n         .range([0, dimensions.width])\r\n        \r\n      const yScale =  scaleLinear()\r\n         .domain([0, 100])\r\n         .range([dimensions.height, 30]);\r\n\r\n      \r\n      const yAxis = axisLeft(yScale);   \r\n      svg\r\n      .select('.y-axis')\r\n      .style('color', 'grey')\r\n      .style('font-size', '14')\r\n      .call(yAxis);\r\n\r\n      //X-Achsen-Beschriftung\r\n      svg.append(\"text\")\r\n      .attr(\"text-anchor\", \"end\")\r\n      .attr(\"fill\", \"grey\")\r\n      .attr(\"x\", dimensions.width)\r\n       .attr(\"y\", dimensions.height  + 50)\r\n       .text(\"Jahr\");\r\n\r\n     const xAxis = axisBottom(xScale)\r\n     svg\r\n      .select(\".x-axis\")\r\n      .style('transform', `translateY(${dimensions.height}px)`)\r\n      .style('color', 'grey')\r\n      .style('font-size', '14')\r\n      .style('stroke-width', 1)\r\n      .call(xAxis, grids);\r\n      \r\n      //Grids\r\n      var grids = svg.append(\"g\")\r\n         .attr(\"class\", \"grid\")\r\n         .call(axisLeft(yScale)\r\n            .tickSize(-(dimensions.width))\r\n            .tickFormat(\"\")\r\n            )\r\n\r\n      //Y-Achsen-Beschrifzung\r\n      svg.append(\"text\")\r\n    .attr(\"text-anchor\", \"end\")\r\n    .attr(\"transform\", \"rotate(-90)\")\r\n    .attr(\"fill\", \"grey\")\r\n    .attr(\"y\", - 50)\r\n    .attr(\"x\", 0)\r\n    .text(\"Prozent\")\r\n\r\n    \r\n\r\n      //Tooltip-Circle\r\n      var focus = svg\r\n      .append('g')\r\n      .append('circle')\r\n      .style(\"fill\", \"#2770bc\")\r\n      .attr('r', 8.5)\r\n      .style(\"opacity\", 0);\r\n\r\n      //Tooltip- Values\r\n      var focusText = svg\r\n      .append('g')\r\n      .append('text')\r\n      .style(\"opacity\", 0)\r\n      .attr(\"text-anchor\", \"left\")\r\n      .attr(\"alignment-baseline\", \"middle\");\r\n\r\n      svg\r\n      .append('rect')\r\n      .style(\"fill\", \"none\")\r\n      .style(\"pointer-events\", \"all\")\r\n      .attr('width', dimensions.width)\r\n      .attr('height', dimensions.height)\r\n   /**    .on('mouseover', mouseover)\r\n      .on('mousemove', mousemove)\r\n      .on('mouseout', mouseout); */\r\n\r\n      const curve = curveLinear;\r\n\r\n      const myArea = area()\r\n      .x((d)=> (xScale(new Date(d.key))))\r\n      .y0(dimensions.height)\r\n      .y1((d)=> (yScale(d.value)))\r\n      .curve(curve)\r\n\r\n        svg\r\n         .selectAll(\".newArea\")\r\n         .data([valesMann])\r\n         .join(\"path\")\r\n         .attr(\"class\", \"newArea\")\r\n         .attr(\"d\", (value, index) => myArea(value))\r\n         .transition()\r\n         .attr(\"fill\", \"#9f77d0\")\r\n         .attr(\"stroke\", \"#6810d4\")\r\n         \r\n        \r\n         svg\r\n         .selectAll(\".newerArea\")\r\n         .data([valesFrau])\r\n         .join(\"path\")\r\n         .attr(\"class\", \"newerline\")\r\n         .attr(\"d\", (value, index) => myArea(value))\r\n         .transition()\r\n         .attr(\"fill\", \"none\")\r\n         .attr(\"fill\", \"#d781d7\")\r\n        .attr(\"stroke\", \"#d043ee\")\r\n         \r\n    /*  var path1 = svg\r\n      .append(\"path\")\r\n      .data([valesMann])\r\n      .join(\"path\")\r\n      .attr(\"class\", \"line1\")\r\n      .exit().remove();\r\n\r\n      var path2 = svg  \r\n      .append(\"path\")\r\n      .data([valesFrau]) \r\n      .join(\"path\")\r\n      .attr(\"class\", \"line2\")\r\n      .exit().remove();\r\n      tick();\r\n\r\n      function tick() {\r\n        svg.selectAll(\".line1\")\r\n        .attr(\"d\", (value, index) => myArea(value))\r\n        .attr(\"fill\", \"#9f77d0\")\r\n        .attr(\"stroke\", \"#6810d4\")\r\n        .attr(\"stroke-width\", \"1.2\" )\r\n        \r\n\r\n        svg.selectAll(\".line2\")\r\n        .attr(\"d\", (b, index) => myArea(b))\r\n        .attr(\"fill\", \"#d781d7\")\r\n        .attr(\"stroke\", \"#d043ee\")\r\n      .attr(\"stroke-width\", \"1.2\" )\r\n      \r\n\r\n      }\r\n\r\n/*    svg\r\n      .selectAll(\"path\")\r\n      .join(\"area2\")\r\n      .data([valesMann])\r\n      .attr(\"d\", (value, index) => myLine(value))\r\n      .attr(\"fill\", \"#9f77d0\")\r\n      .attr(\"stroke\", \"#6810d4\")\r\n      .attr(\"stroke-width\", \"1.2\" )\r\n     \r\n     \r\n     var path = svg.append(\"path\");\r\n      path\r\n      .data([valesFrau])\r\n      .join(\"line\")\r\n      .attr(\"d\", (a, index) => myLine2(a))\r\n      .attr(\"fill\", \"#d781d7\")\r\n      .attr(\"stroke\", \"#d043ee\")\r\n      .attr(\"stroke-width\", \"1.2\" )*/\r\n  \r\n      function mouseover() {\r\n         \r\n         focus.style(\"opacity\", 1).transition()\r\n         focusText.style(\"opacity\",1).transition()\r\n       }\r\n       \r\n       function mousemove() {\r\n         var x0 = xScale.invert(mouse(this)[0]);\r\n         const bisect = bisector(d => new Date(d.key)).left;\r\n         const idx = bisect(filtered, x0, 1);\r\n         const selectedData = filtered[idx];\r\n         console.log( selectedData);\r\n         \r\n         focus\r\n         .transition()\r\n         .duration(80)\r\n         .attr(\"cx\", xScale(new Date (selectedData.key)))\r\n         .attr(\"cy\", yScale(selectedData.value))\r\n         \r\n\r\n         focusText\r\n         .transition()\r\n         .duration(80)\r\n            .text(selectedData.key  + \" : \" + selectedData.value + \"%\")\r\n            .attr(\"x\", xScale(new Date (selectedData.key)))\r\n            .attr(\"y\", yScale(selectedData.value) - 30)\r\n          \r\n         }\r\n       function mouseout() {\r\n         focus.style(\"opacity\", 0)\r\n         focusText.style(\"opacity\", 0)\r\n       }\r\n\r\n\r\n   }, [data, dimensions, property]);\r\n    return (\r\n     <div  className=\"IKTWarapperRef\" ref={wrapperRef} >\r\n        <svg ref={svgRef}>\r\n          <g className=\"x-axis\" />\r\n          <g className=\"y-axis\" />\r\n        </svg>\r\n      </div>\r\n    );\r\n    }\r\n    \r\n    export default AreaIKTBeschäftigung;"]},"metadata":{},"sourceType":"module"}