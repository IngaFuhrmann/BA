{"ast":null,"code":"import _slicedToArray from \"D:\\\\Studium\\\\Bachelor\\\\WebApp\\\\visapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Studium\\\\Bachelor\\\\WebApp\\\\visapp\\\\src\\\\components\\\\charts\\\\AreaIKTBesch\\xE4ftigung.jsx\";\nimport React, { useRef, useEffect, useState } from \"react\";\nimport { select, line, curveCardinal, axisBottom, axisLeft, scaleTime, scaleLinear, scaleBand, min, max, event, bisector, mouse, ticks, defined } from 'd3';\nimport useResizeObserver from \"./useReziseObserver\";\n\nfunction AreaIKTBeschäftigung({\n  dataMann,\n  dataFrau\n}) {\n  const svgRef = useRef();\n  const wrapperRef = useRef();\n  const dimensions = useResizeObserver(wrapperRef);\n\n  const _useState = useState([0, 1.5]),\n        _useState2 = _slicedToArray(_useState, 2),\n        selection = _useState2[0],\n        setSelection = _useState2[1];\n\n  useEffect(() => {\n    const svg = select(svgRef.current);\n    console.log(); //const test = data.value[0];\n    // console.log(test);\n\n    if (!dimensions) return; //Sortieren nach Jahreszahl\n    // dataMann.map(function(d) { return Object.keys(d)})\n\n    const minDate = new Date(min(dataMann, value => value.keys(value)));\n    const maxDate = new Date(max(dataMann, value => value.keys(value)));\n    console.log(minDate);\n    console.log(maxDate);\n    const xScale = scaleTime().domain([minDate, maxDate]) // .domain([0, data.length-1]) //0 zu 0 ; 6 zu 200\n    .range([0, dimensions.width]); //change\n\n    const yScale = scaleLinear().domain([0, 100]) //todo\n    .range([dimensions.height, 30]); //change\n\n    const yAxis = axisLeft(yScale);\n    svg.select('.y-axis').style('color', 'grey').style('font-size', '14').call(yAxis); //X-Achsen-Beschriftung\n\n    svg.append(\"text\").attr(\"text-anchor\", \"end\").attr(\"fill\", \"grey\").attr(\"x\", dimensions.width).attr(\"y\", dimensions.height + 50).text(\"Jahr\");\n    const xAxis = axisBottom(xScale);\n    svg.select(\".x-axis\").style('transform', `translateY(${dimensions.height}px)`).style('color', 'grey').style('font-size', '14').style('stroke-width', 1).call(xAxis); //Grids\n\n    var grids = svg.append(\"g\").attr(\"class\", \"grid\") //.attr('transform', 'translate(50,50)')\n    .call(axisLeft(yScale).tickSize(-dimensions.width).tickFormat(\"\")); //Y-Achsen-Beschrifzung\n\n    svg.append(\"text\").attr(\"text-anchor\", \"end\").attr(\"transform\", \"rotate(-90)\").attr(\"fill\", \"grey\").attr(\"y\", -50).attr(\"x\", 0).text(\"Prozent\");\n  }, [dataMann, dataFrau, dimensions]);\n  return React.createElement(\"div\", {\n    classname: \"chartWrap\",\n    ref: wrapperRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(\"svg\", {\n    ref: svgRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(\"g\", {\n    className: \"x-axis\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }), React.createElement(\"g\", {\n    className: \"y-axis\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  })));\n}\n\nexport default AreaIKTBeschäftigung;","map":{"version":3,"sources":["D:/Studium/Bachelor/WebApp/visapp/src/components/charts/AreaIKTBeschäftigung.jsx"],"names":["React","useRef","useEffect","useState","select","line","curveCardinal","axisBottom","axisLeft","scaleTime","scaleLinear","scaleBand","min","max","event","bisector","mouse","ticks","defined","useResizeObserver","AreaIKTBeschäftigung","dataMann","dataFrau","svgRef","wrapperRef","dimensions","selection","setSelection","svg","current","console","log","minDate","Date","value","keys","maxDate","xScale","domain","range","width","yScale","height","yAxis","style","call","append","attr","text","xAxis","grids","tickSize","tickFormat"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\r\nimport { select, line, curveCardinal, axisBottom, axisLeft, scaleTime, scaleLinear, scaleBand, min, max, event, bisector, mouse, ticks, defined} from 'd3';\r\nimport useResizeObserver from \"./useReziseObserver\";\r\n\r\nfunction AreaIKTBeschäftigung({ dataMann, dataFrau }) {\r\n    const svgRef = useRef();\r\n    const wrapperRef = useRef();\r\n    const dimensions = useResizeObserver(wrapperRef);\r\n    const [selection, setSelection] = useState([0, 1.5]);\r\n \r\n    useEffect(() => {\r\n\r\n        \r\n      const svg = select(svgRef.current);\r\n      console.log();\r\n   //const test = data.value[0];\r\n  // console.log(test);\r\n      if(!dimensions) return;\r\n   \r\n   //Sortieren nach Jahreszahl\r\n  // dataMann.map(function(d) { return Object.keys(d)})\r\n   const minDate = new Date (min(dataMann, value => value.keys(value)));\r\n   const maxDate = new Date (max(dataMann, value => value.keys(value)));\r\n\r\n   console.log(minDate);\r\n   console.log(maxDate);\r\n\r\n\r\n   const xScale = scaleTime()\r\n       .domain([minDate,maxDate])\r\n       \r\n     // .domain([0, data.length-1]) //0 zu 0 ; 6 zu 200\r\n      .range([0, dimensions.width]) //change\r\n     \r\n   const yScale =  scaleLinear()\r\n      .domain([0, 100])   //todo\r\n      .range([dimensions.height, 30]);  //change\r\n\r\n   \r\n   const yAxis = axisLeft(yScale);   \r\n   svg\r\n   .select('.y-axis')\r\n   .style('color', 'grey')\r\n   .style('font-size', '14')\r\n   .call(yAxis);\r\n\r\n   //X-Achsen-Beschriftung\r\n   svg.append(\"text\")\r\n   .attr(\"text-anchor\", \"end\")\r\n   .attr(\"fill\", \"grey\")\r\n   .attr(\"x\", dimensions.width)\r\n    .attr(\"y\", dimensions.height  + 50)\r\n    .text(\"Jahr\");\r\n\r\n  const xAxis = axisBottom(xScale)\r\n  svg\r\n   .select(\".x-axis\")\r\n   .style('transform', `translateY(${dimensions.height}px)`)\r\n   .style('color', 'grey')\r\n   .style('font-size', '14')\r\n   .style('stroke-width', 1)\r\n   .call(xAxis);\r\n   \r\n   //Grids\r\n   var grids = svg.append(\"g\")\r\n      .attr(\"class\", \"grid\")\r\n      //.attr('transform', 'translate(50,50)')\r\n      .call(axisLeft(yScale)\r\n         .tickSize(-(dimensions.width))\r\n         .tickFormat(\"\")\r\n         )\r\n\r\n   //Y-Achsen-Beschrifzung\r\n   svg.append(\"text\")\r\n .attr(\"text-anchor\", \"end\")\r\n .attr(\"transform\", \"rotate(-90)\")\r\n .attr(\"fill\", \"grey\")\r\n .attr(\"y\", - 50)\r\n .attr(\"x\", 0)\r\n .text(\"Prozent\")\r\n\r\n\r\n\r\n    }, [dataMann, dataFrau, dimensions]);\r\n    return (\r\n     <div classname=\"chartWrap\" ref={wrapperRef} >\r\n        <svg ref={svgRef}>\r\n          <g className=\"x-axis\" />\r\n          <g className=\"y-axis\" />\r\n        </svg>\r\n      </div>\r\n    );\r\n    }\r\n    \r\n    export default AreaIKTBeschäftigung;"]},"metadata":{},"sourceType":"module"}