{"ast":null,"code":"var _jsxFileName = \"D:\\\\Studium\\\\Bachelor\\\\WebApp\\\\visapp\\\\src\\\\components\\\\charts\\\\LineChart.jsx\";\nimport { Component } from 'react';\nimport * as d3 from \"d3\";\nimport { scaleLinear } from 'd3-scale';\nimport { connect } from \"react-redux\";\nimport data from \"../../data.json\"; // Add function:\n\nclass BarChart extends React.Component() {\n  componentDidMount() {\n    this.drawChart(); //D3!\n  }\n\n  drawChart() {\n    var canvas = document.querySelector(\"canvas\"),\n        context = canvas.getContext(\"2d\");\n    var margin = {\n      top: 20,\n      right: 20,\n      bottom: 30,\n      left: 40\n    },\n        width = canvas.width - margin.left - margin.right,\n        height = canvas.height - margin.top - margin.bottom;\n    var x = d3.scaleBand().rangeRound([0, width]).padding(0.1);\n    var y = d3.scaleLinear().rangeRound([height, 0]);\n    context.translate(margin.left, margin.top);\n    d3.requestTsv(\"data.tsv\", function (d) {\n      d.frequency = +d.frequency;\n      return d;\n    }, function (error, data) {\n      if (error) throw error;\n      x.domain(data.map(function (d) {\n        return d.letter;\n      }));\n      y.domain([0, d3.max(data, function (d) {\n        return d.frequency;\n      })]);\n      var yTickCount = 10,\n          yTicks = y.ticks(yTickCount),\n          yTickFormat = y.tickFormat(yTickCount, \"%\");\n      context.beginPath();\n      x.domain().forEach(function (d) {\n        context.moveTo(x(d) + x.bandwidth() / 2, height);\n        context.lineTo(x(d) + x.bandwidth() / 2, height + 6);\n      });\n      context.strokeStyle = \"black\";\n      context.stroke();\n      context.textAlign = \"center\";\n      context.textBaseline = \"top\";\n      x.domain().forEach(function (d) {\n        context.fillText(d, x(d) + x.bandwidth() / 2, height + 6);\n      });\n      context.beginPath();\n      yTicks.forEach(function (d) {\n        context.moveTo(0, y(d) + 0.5);\n        context.lineTo(-6, y(d) + 0.5);\n      });\n      context.strokeStyle = \"black\";\n      context.stroke();\n      context.textAlign = \"right\";\n      context.textBaseline = \"middle\";\n      yTicks.forEach(function (d) {\n        context.fillText(yTickFormat(d), -9, y(d));\n      });\n      context.beginPath();\n      context.moveTo(-6.5, 0 + 0.5);\n      context.lineTo(0.5, 0 + 0.5);\n      context.lineTo(0.5, height + 0.5);\n      context.lineTo(-6.5, height + 0.5);\n      context.strokeStyle = \"black\";\n      context.stroke();\n      context.save();\n      context.rotate(-Math.PI / 2);\n      context.textAlign = \"right\";\n      context.textBaseline = \"top\";\n      context.font = \"bold 10px sans-serif\";\n      context.fillText(\"Frequency\", -10, 10);\n      context.restore();\n      context.fillStyle = \"steelblue\";\n      data.forEach(function (d) {\n        context.fillRect(x(d.letter), y(d.frequency), x.bandwidth(), height - y(d.frequency));\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"canvas\", {\n      width: this.props.width,\n      height: this.props.height,\n      ref: el => {\n        this.canvas = el;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    });\n  }\n\n}\n/*  <svg width={width} height={height}>\r\n    {data.map((d, i) =>\r\n      <rect\r\n        key={i}\r\n        x={i * barWidth}\r\n        y={yScale(d)}\r\n        width={barWidth - 1}\r\n        height={height - yScale(d)}\r\n      />,\r\n    )}\r\n  </svg>\r\n);*/\n\n\nexport default BarChart;\n/*class BarChart extends Component {\r\n  componentDidMount() {\r\n    this.drawChart(); //D3!\r\n  }\r\n\r\n  drawChart() {\r\n    const data = [12, 5, 6, 6, 9, 10];\r\n    var w;\r\n    var h;\r\n    const svg = d3.select(\"body\")\r\n    .append(\"svg\")\r\n    .attr(\"width\", w)\r\n    .attr(\"height\", h)\r\n    .style(\"margin-left\", 100);\r\n                  \r\n    svg.selectAll(\"rect\")\r\n      .data(data)\r\n      .enter()\r\n      .append(\"rect\")\r\n      .attr(\"x\", (d, i) => i * 70)\r\n      .attr(\"y\", (d, i) => h - 10 * d)\r\n      .attr(\"width\", 65)\r\n      .attr(\"height\", (d, i) => d * 10)\r\n      .attr(\"fill\", \"green\")\r\n  }\r\n        \r\n  render(){\r\n    return <div id={\"#\" + this.props.id}></div>\r\n  }\r\n}\r\n\r\nexport default BarChart; */","map":{"version":3,"sources":["D:/Studium/Bachelor/WebApp/visapp/src/components/charts/LineChart.jsx"],"names":["Component","d3","scaleLinear","connect","data","BarChart","React","componentDidMount","drawChart","canvas","document","querySelector","context","getContext","margin","top","right","bottom","left","width","height","x","scaleBand","rangeRound","padding","y","translate","requestTsv","d","frequency","error","domain","map","letter","max","yTickCount","yTicks","ticks","yTickFormat","tickFormat","beginPath","forEach","moveTo","bandwidth","lineTo","strokeStyle","stroke","textAlign","textBaseline","fillText","save","rotate","Math","PI","font","restore","fillStyle","fillRect","render","props","el"],"mappings":"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","sourcesContent":["import { Component } from 'react';\r\nimport * as d3 from \"d3\";\r\nimport { scaleLinear } from 'd3-scale';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport data from \"../../data.json\";\r\n\r\n// Add function:\r\n  \r\n  \r\nclass BarChart extends React.Component() {\r\n\r\n    componentDidMount() {\r\n      this.drawChart(); //D3!\r\n    };\r\n\r\n\r\n    drawChart() {\r\n      var canvas = document.querySelector(\"canvas\"),\r\n      context = canvas.getContext(\"2d\");\r\n  \r\n  var margin = {top: 20, right: 20, bottom: 30, left: 40},\r\n      width = canvas.width - margin.left - margin.right,\r\n      height = canvas.height - margin.top - margin.bottom;\r\n  \r\n  var x = d3.scaleBand()\r\n      .rangeRound([0, width])\r\n      .padding(0.1);\r\n  \r\n  var y = d3.scaleLinear()\r\n      .rangeRound([height, 0]);\r\n  \r\n  context.translate(margin.left, margin.top);\r\n  \r\n  d3.requestTsv(\"data.tsv\", function(d) {\r\n    d.frequency = +d.frequency;\r\n    return d;\r\n  }, function(error, data) {\r\n    if (error) throw error;\r\n  \r\n    x.domain(data.map(function(d) { return d.letter; }));\r\n    y.domain([0, d3.max(data, function(d) { return d.frequency; })]);\r\n  \r\n    var yTickCount = 10,\r\n        yTicks = y.ticks(yTickCount),\r\n        yTickFormat = y.tickFormat(yTickCount, \"%\");\r\n  \r\n    context.beginPath();\r\n    x.domain().forEach(function(d) {\r\n      context.moveTo(x(d) + x.bandwidth() / 2, height);\r\n      context.lineTo(x(d) + x.bandwidth() / 2, height + 6);\r\n    });\r\n    context.strokeStyle = \"black\";\r\n    context.stroke();\r\n  \r\n    context.textAlign = \"center\";\r\n    context.textBaseline = \"top\";\r\n    x.domain().forEach(function(d) {\r\n      context.fillText(d, x(d) + x.bandwidth() / 2, height + 6);\r\n    });\r\n  \r\n    context.beginPath();\r\n    yTicks.forEach(function(d) {\r\n      context.moveTo(0, y(d) + 0.5);\r\n      context.lineTo(-6, y(d) + 0.5);\r\n    });\r\n    context.strokeStyle = \"black\";\r\n    context.stroke();\r\n  \r\n    context.textAlign = \"right\";\r\n    context.textBaseline = \"middle\";\r\n    yTicks.forEach(function(d) {\r\n      context.fillText(yTickFormat(d), -9, y(d));\r\n    });\r\n  \r\n    context.beginPath();\r\n    context.moveTo(-6.5, 0 + 0.5);\r\n    context.lineTo(0.5, 0 + 0.5);\r\n    context.lineTo(0.5, height + 0.5);\r\n    context.lineTo(-6.5, height + 0.5);\r\n    context.strokeStyle = \"black\";\r\n    context.stroke();\r\n  \r\n    context.save();\r\n    context.rotate(-Math.PI / 2);\r\n    context.textAlign = \"right\";\r\n    context.textBaseline = \"top\";\r\n    context.font = \"bold 10px sans-serif\";\r\n    context.fillText(\"Frequency\", -10, 10);\r\n    context.restore();\r\n  \r\n    context.fillStyle = \"steelblue\";\r\n    data.forEach(function(d) {\r\n      context.fillRect(x(d.letter), y(d.frequency), x.bandwidth(), height - y(d.frequency));\r\n    });\r\n  });\r\n  \r\n}\r\n    render() {\r\n      return <canvas width={this.props.width} height={this.props.height} ref={(el) => { this.canvas = el }} />\r\n    }\r\n  }\r\n    /*  <svg width={width} height={height}>\r\n        {data.map((d, i) =>\r\n          <rect\r\n            key={i}\r\n            x={i * barWidth}\r\n            y={yScale(d)}\r\n            width={barWidth - 1}\r\n            height={height - yScale(d)}\r\n          />,\r\n        )}\r\n      </svg>\r\n    );*/\r\n  \r\n  export default BarChart;\r\n\r\n\r\n\r\n/*class BarChart extends Component {\r\n  componentDidMount() {\r\n    this.drawChart(); //D3!\r\n  }\r\n\r\n  drawChart() {\r\n    const data = [12, 5, 6, 6, 9, 10];\r\n    var w;\r\n    var h;\r\n    const svg = d3.select(\"body\")\r\n    .append(\"svg\")\r\n    .attr(\"width\", w)\r\n    .attr(\"height\", h)\r\n    .style(\"margin-left\", 100);\r\n                  \r\n    svg.selectAll(\"rect\")\r\n      .data(data)\r\n      .enter()\r\n      .append(\"rect\")\r\n      .attr(\"x\", (d, i) => i * 70)\r\n      .attr(\"y\", (d, i) => h - 10 * d)\r\n      .attr(\"width\", 65)\r\n      .attr(\"height\", (d, i) => d * 10)\r\n      .attr(\"fill\", \"green\")\r\n  }\r\n        \r\n  render(){\r\n    return <div id={\"#\" + this.props.id}></div>\r\n  }\r\n}\r\n\r\nexport default BarChart; */"]},"metadata":{},"sourceType":"module"}