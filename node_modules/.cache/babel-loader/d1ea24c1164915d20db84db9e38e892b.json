{"ast":null,"code":"var _jsxFileName = \"D:\\\\Studium\\\\Bachelor\\\\WebApp\\\\visapp\\\\src\\\\components\\\\charts\\\\LineChart.jsx\";\nimport React from 'react';\nimport * as d3 from \"d3\";\nimport { scaleLinear } from 'd3-scale';\nimport { connect } from \"react-redux\";\nimport data from \"../../data.json\";\nexport default class BarChart extends React.Component() {\n  constructor(props) {\n    super(props);\n    this.createBarChart = this.createBarChart.bind(this);\n  }\n\n  componentDidMount() {\n    this.drawBarChart(data);\n  }\n\n  drawBarChart(data) {\n    const node = this.node;\n    const dataMax = max(this.props.data);\n    const yScale = scaleLinear().domain([0, dataMax]).range([0, this.props.size[1]]);\n    select(node).selectAll('rect').data(this.props.data).enter().append('rect');\n    select(node).selectAll('rect').data(this.props.data).exit().remove();\n    select(node).selectAll('rect').data(this.props.data).style('fill', '#fe9922').attr('x', (d, i) => i * 25).attr('y', d => this.props.size[1] - yScale(d)).attr('height', d => yScale(d)).attr('width', 25);\n  }\n\n  componentDidUpdate(prevProps) {\n    this.createBarChart();\n  }\n\n  componentWillUnmount() {// And finally this\n  }\n\n  render() {\n    return React.createElement(\"svg\", {\n      ref: node => this.node = node,\n      width: 500,\n      height: 500,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    });\n  }\n\n}\n/*class BarChart extends Component {\r\n  componentDidMount() {\r\n    this.drawChart(); //D3!\r\n  }\r\n\r\n  drawChart() {\r\n    const data = [12, 5, 6, 6, 9, 10];\r\n    var w;\r\n    var h;\r\n    const svg = d3.select(\"body\")\r\n    .append(\"svg\")\r\n    .attr(\"width\", w)\r\n    .attr(\"height\", h)\r\n    .style(\"margin-left\", 100);\r\n                  \r\n    svg.selectAll(\"rect\")\r\n      .data(data)\r\n      .enter()\r\n      .append(\"rect\")\r\n      .attr(\"x\", (d, i) => i * 70)\r\n      .attr(\"y\", (d, i) => h - 10 * d)\r\n      .attr(\"width\", 65)\r\n      .attr(\"height\", (d, i) => d * 10)\r\n      .attr(\"fill\", \"green\")\r\n  }\r\n        \r\n  render(){\r\n    return <div id={\"#\" + this.props.id}></div>\r\n  }\r\n}\r\n\r\nexport default BarChart; */","map":{"version":3,"sources":["D:/Studium/Bachelor/WebApp/visapp/src/components/charts/LineChart.jsx"],"names":["React","d3","scaleLinear","connect","data","BarChart","Component","constructor","props","createBarChart","bind","componentDidMount","drawBarChart","node","dataMax","max","yScale","domain","range","size","select","selectAll","enter","append","exit","remove","style","attr","d","i","componentDidUpdate","prevProps","componentWillUnmount","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;AACA,SAASC,WAAT,QAA4B,UAA5B;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,IAAP,MAAiB,iBAAjB;AAEA,eAAe,MAAMC,QAAN,SAAuBL,KAAK,CAACM,SAAN,EAAvB,CAAyC;AACtDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,cAAL,GAAsB,KAAKA,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,CAAtB;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,YAAL,CAAkBR,IAAlB;AACD;;AAEDQ,EAAAA,YAAY,CAACR,IAAD,EAAO;AACjB,UAAMS,IAAI,GAAG,KAAKA,IAAlB;AACA,UAAMC,OAAO,GAAGC,GAAG,CAAC,KAAKP,KAAL,CAAWJ,IAAZ,CAAnB;AACA,UAAMY,MAAM,GAAGd,WAAW,GACtBe,MADW,CACJ,CAAC,CAAD,EAAIH,OAAJ,CADI,EAEXI,KAFW,CAEL,CAAC,CAAD,EAAI,KAAKV,KAAL,CAAWW,IAAX,CAAgB,CAAhB,CAAJ,CAFK,CAAf;AAIGC,IAAAA,MAAM,CAACP,IAAD,CAAN,CACCQ,SADD,CACW,MADX,EAECjB,IAFD,CAEM,KAAKI,KAAL,CAAWJ,IAFjB,EAGCkB,KAHD,GAICC,MAJD,CAIQ,MAJR;AAMAH,IAAAA,MAAM,CAACP,IAAD,CAAN,CACAQ,SADA,CACU,MADV,EAEAjB,IAFA,CAEK,KAAKI,KAAL,CAAWJ,IAFhB,EAGAoB,IAHA,GAIAC,MAJA;AAMJL,IAAAA,MAAM,CAACP,IAAD,CAAN,CACIQ,SADJ,CACc,MADd,EAEIjB,IAFJ,CAES,KAAKI,KAAL,CAAWJ,IAFpB,EAGIsB,KAHJ,CAGU,MAHV,EAGkB,SAHlB,EAIIC,IAJJ,CAIS,GAJT,EAIc,CAACC,CAAD,EAAGC,CAAH,KAASA,CAAC,GAAG,EAJ3B,EAKIF,IALJ,CAKS,GALT,EAKcC,CAAC,IAAI,KAAKpB,KAAL,CAAWW,IAAX,CAAgB,CAAhB,IAAqBH,MAAM,CAACY,CAAD,CAL9C,EAMID,IANJ,CAMS,QANT,EAMmBC,CAAC,IAAIZ,MAAM,CAACY,CAAD,CAN9B,EAOID,IAPJ,CAOS,OAPT,EAOkB,EAPlB;AAQA;;AAGDG,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC5B,SAAKtB,cAAL;AACD;;AAEDuB,EAAAA,oBAAoB,GAAG,CACrB;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,GAAG,EAAEpB,IAAI,IAAI,KAAKA,IAAL,GAAYA,IAA9B;AACA,MAAA,KAAK,EAAE,GADP;AACY,MAAA,MAAM,EAAE,GADpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAKD;;AAtDqD;AA2DxD","sourcesContent":["import React from 'react';\r\nimport * as d3 from \"d3\";\r\nimport { scaleLinear } from 'd3-scale';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport data from \"../../data.json\";\r\n\r\nexport default class BarChart extends React.Component() {\r\n  constructor(props) {\r\n    super(props)\r\n    this.createBarChart = this.createBarChart.bind(this)\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.drawBarChart(data);\r\n  }\r\n\r\n  drawBarChart(data) {\r\n    const node = this.node\r\n    const dataMax = max(this.props.data)\r\n    const yScale = scaleLinear()\r\n       .domain([0, dataMax])\r\n       .range([0, this.props.size[1]])\r\n\r\n       select(node)\r\n       .selectAll('rect')\r\n       .data(this.props.data)\r\n       .enter()\r\n       .append('rect')\r\n\r\n       select(node)\r\n      .selectAll('rect')\r\n      .data(this.props.data)\r\n      .exit()\r\n      .remove()\r\n   \r\n   select(node)\r\n      .selectAll('rect')\r\n      .data(this.props.data)\r\n      .style('fill', '#fe9922')\r\n      .attr('x', (d,i) => i * 25)\r\n      .attr('y', d => this.props.size[1] - yScale(d))\r\n      .attr('height', d => yScale(d))\r\n      .attr('width', 25)\r\n  }\r\n\r\n\r\n  componentDidUpdate(prevProps) {\r\n    this.createBarChart()\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    // And finally this\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <svg ref={node => this.node = node}\r\n      width={500} height={500}>\r\n      </svg>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n/*class BarChart extends Component {\r\n  componentDidMount() {\r\n    this.drawChart(); //D3!\r\n  }\r\n\r\n  drawChart() {\r\n    const data = [12, 5, 6, 6, 9, 10];\r\n    var w;\r\n    var h;\r\n    const svg = d3.select(\"body\")\r\n    .append(\"svg\")\r\n    .attr(\"width\", w)\r\n    .attr(\"height\", h)\r\n    .style(\"margin-left\", 100);\r\n                  \r\n    svg.selectAll(\"rect\")\r\n      .data(data)\r\n      .enter()\r\n      .append(\"rect\")\r\n      .attr(\"x\", (d, i) => i * 70)\r\n      .attr(\"y\", (d, i) => h - 10 * d)\r\n      .attr(\"width\", 65)\r\n      .attr(\"height\", (d, i) => d * 10)\r\n      .attr(\"fill\", \"green\")\r\n  }\r\n        \r\n  render(){\r\n    return <div id={\"#\" + this.props.id}></div>\r\n  }\r\n}\r\n\r\nexport default BarChart; */"]},"metadata":{},"sourceType":"module"}