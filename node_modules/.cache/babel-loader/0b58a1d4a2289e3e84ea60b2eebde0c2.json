{"ast":null,"code":"var _jsxFileName = \"D:\\\\Studium\\\\Bachelor\\\\WebApp\\\\visapp\\\\src\\\\components\\\\charts\\\\LineChart.jsx\";\nimport React, { useRef, useEffect } from \"react\";\nimport { select, line, curveCardinal, axisBottom, axisLeft, scaleTime, scaleLinear, min, max, bisector, mouse, entries } from 'd3';\nimport '../../styles/charts.css';\nimport useResizeObserver from './useReziseObserver';\n\nfunction LineCharts({\n  data,\n  property,\n  colorline,\n  colorline2,\n  value\n}) {\n  const svgRef = useRef();\n  const wrapperRef = useRef();\n  const dimensions = useResizeObserver(wrapperRef);\n  useEffect(() => {\n    const svg = select(svgRef.current);\n    var filterAlle;\n    var filterBB;\n    if (!dimensions) return; //Daten filtern\n\n    var filtered = data.filter(a => a.geo == property);\n\n    for (var i = 0; i < filtered.length; i++) {\n      var filterAlle = filtered[i].alle;\n    }\n\n    for (var i = 0; i < filtered.length; i++) {\n      var filterBB = filtered[i].bb;\n    }\n\n    var valesAlle = entries(filterAlle);\n    var valesBB = entries(filterBB); //Sortieren nach Jahreszahl\n\n    const minDate = new Date(min(valesAlle, value => value.key));\n    const maxDate = new Date(max(valesAlle, value => value.key)); // console.log(minDate);\n    // console.log(maxDate);\n\n    const xScale = scaleTime().domain([minDate - 2.628e+9, maxDate]).range([-1, dimensions.width]);\n    const yScale = scaleLinear().domain([0, 100]).range([dimensions.height, 0]);\n    const yAxis = axisLeft(yScale).tickSize(0);\n    svg.select('.y-axis').style('color', 'grey').style('font-size', '14').call(yAxis);\n    const xAxis = axisBottom(xScale);\n    svg.select(\".x-axis\").join(\".x-axis\").style('transform', `translateY(${dimensions.height}px)`).style('color', 'grey').style('font-size', '14').style('stroke-width', 1).call(xAxis); //Grids\n\n    var grids = svg.select(\"g\").append(\"g\").join(\"g\").attr(\"class\", \"grid\").attr('transform', 'translate(0,' + -dimensions.height + ')').call(axisLeft(yScale).tickSize(-dimensions.width).tickFormat(\"\")); //X-Achsen-Beschriftung\n\n    svg.select(\"text\").join(\"text\").attr(\"text-anchor\", \"end\").attr(\"fill\", \"grey\").attr(\"x\", dimensions.width).attr(\"y\", +dimensions.height / 8).attr(\"font-weight\", \"bold\").text(\"Jahr\"); //Y-Achsen-Beschrifzung\n\n    svg.append(\"text\").attr(\"text-anchor\", \"end\").attr(\"transform\", \"rotate(-90)\").attr(\"fill\", \"grey\").attr(\"y\", -50).attr(\"x\", 0).text(\"Prozent\"); //Lines\n\n    const myLine = line().x(d => xScale(new Date(d.key))).y(d => yScale(d.value)).defined(d => d.value != 0).curve(curveCardinal); //herausfiltern der fehlenden werte\n\n    var filteredAlle = valesAlle.filter(myLine.defined());\n    var filteredBB = valesBB.filter(myLine.defined());\n    var lineAlle1 = svg.selectAll(\".newline\").data([filteredAlle]).join(\"path\").attr(\"class\", \"newline\").attr(\"d\", (value, index) => myLine(value)).transition().attr(\"fill\", \"none\").attr(\"stroke\", colorline).attr(\"stroke-dasharray\", \"3, 3\");\n    var lineAlle2 = svg.selectAll(\".newerline\").data([valesAlle]).join(\"path\").attr(\"class\", \"newerline\").attr(\"d\", (value, index) => myLine(value)).transition().attr(\"fill\", \"none\").attr(\"stroke\", colorline).attr(\"stroke-width\", \"5\").attr(\"stroke-linecap\", \"round\");\n    var lineBB1 = svg.selectAll(\".newlineBB\").data([filteredBB]).join(\"path\").attr(\"class\", \"newlineBB\").attr(\"d\", (value, index) => myLine(value)).transition().attr(\"fill\", \"none\").attr(\"stroke\", colorline2).attr(\"stroke-dasharray\", \"3, 3\").attr(\"opacity\", \"0\");\n    var lineBB2 = svg.selectAll(\".newerlineBB\").data([valesBB]).join(\"path\").attr(\"class\", \"newerlineBB\").attr(\"d\", (value, index) => myLine(value)).transition().attr(\"fill\", \"none\").attr(\"stroke\", colorline2).attr(\"stroke-width\", \"5\").attr(\"stroke-linecap\", \"round\").attr(\"opacity\", \"0\");\n\n    if (value == \"BB\") {\n      lineBB1.attr(\"opacity\", \"1\");\n      lineBB2.attr(\"opacity\", \"1\");\n    } else {\n      console.log(\"noooo\");\n    } //     } else {\n    //        console.log(\"Nooo\")\n    //     }\n    //Tooltip\n    //Tooltip-Elemente\n\n\n    var focusBox = svg.append('g').append('rect').style(\"opacity\", 0).attr(\"width\", 90).attr(\"height\", 30).style(\"fill\", \"#e0e2e5\").style(\"stroke\", \"#e0e2e5\").style(\"stroke\", colorline).style(\"stroke-width\", \"1\").attr(\"rx\", 4).attr(\"ry\", 4);\n    var focus = svg.append('g').append('circle').style(\"fill\", colorline).attr('r', 8.5).style(\"opacity\", 0);\n    var focusText = svg.append('g').append('text').style(\"opacity\", 0).attr(\"text-anchor\", \"left\").attr(\"alignment-baseline\", \"middle\").attr(\"fill\", \"#203040\").style(\"font-size\", 13).style(\"font-weight\", \"bold\");\n    svg.append('rect').style(\"fill\", \"none\").style(\"pointer-events\", \"all\").attr('width', dimensions.width).attr('height', dimensions.height).on('mouseover', mouseover).on('mousemove', mousemove).on('mouseout', mouseout);\n\n    function mouseover() {\n      focus.style(\"opacity\", 1);\n      focusText.style(\"opacity\", 1);\n      focusBox.style(\"opacity\", 1);\n    }\n\n    function mousemove() {\n      var x0 = xScale.invert(mouse(this)[0]);\n      const bisect = bisector(d => new Date(d.key)).left;\n      const idx = bisect(filteredAlle, x0, 1);\n      const selectedData = filteredAlle[idx];\n      focus.transition().duration(50).attr(\"cx\", xScale(new Date(selectedData.key))).attr(\"cy\", yScale(selectedData.value));\n      focusText.transition().duration(50).text(selectedData.key + \": \" + selectedData.value + \"%\").attr(\"x\", xScale(new Date(selectedData.key))).attr(\"y\", yScale(selectedData.value) - 30);\n      focusBox.transition().duration(50).attr(\"x\", xScale(new Date(selectedData.key)) - 15).attr(\"y\", yScale(selectedData.value) - 45);\n    }\n\n    function mouseout() {\n      focus.style(\"opacity\", 0);\n      focusText.style(\"opacity\", 0);\n      focusBox.style(\"opacity\", 0);\n    }\n  }, [data, dimensions, property]);\n  return React.createElement(\"div\", {\n    ref: wrapperRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244\n    },\n    __self: this\n  }, React.createElement(\"svg\", {\n    ref: svgRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245\n    },\n    __self: this\n  }, React.createElement(\"g\", {\n    className: \"x-axis\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246\n    },\n    __self: this\n  }), React.createElement(\"g\", {\n    className: \"y-axis\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247\n    },\n    __self: this\n  })));\n}\n\nexport default LineCharts;","map":{"version":3,"sources":["D:/Studium/Bachelor/WebApp/visapp/src/components/charts/LineChart.jsx"],"names":["React","useRef","useEffect","select","line","curveCardinal","axisBottom","axisLeft","scaleTime","scaleLinear","min","max","bisector","mouse","entries","useResizeObserver","LineCharts","data","property","colorline","colorline2","value","svgRef","wrapperRef","dimensions","svg","current","filterAlle","filterBB","filtered","filter","a","geo","i","length","alle","bb","valesAlle","valesBB","minDate","Date","key","maxDate","xScale","domain","range","width","yScale","height","yAxis","tickSize","style","call","xAxis","join","grids","append","attr","tickFormat","text","myLine","x","d","y","defined","curve","filteredAlle","filteredBB","lineAlle1","selectAll","index","transition","lineAlle2","lineBB1","lineBB2","console","log","focusBox","focus","focusText","on","mouseover","mousemove","mouseout","x0","invert","bisect","left","idx","selectedData","duration"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect} from \"react\";\r\nimport { select, line, curveCardinal, axisBottom, axisLeft, scaleTime, scaleLinear, min, max, bisector, mouse, entries} from 'd3';\r\nimport '../../styles/charts.css'\r\nimport useResizeObserver from './useReziseObserver'\r\n\r\nfunction LineCharts({ data, property, colorline, colorline2, value}) {\r\n   const svgRef = useRef();\r\n   const wrapperRef = useRef();\r\n   const dimensions = useResizeObserver(wrapperRef);\r\n   useEffect(() => {\r\n    \r\n      const svg = select(svgRef.current);\r\n      var filterAlle;\r\n      var filterBB;\r\n\r\n         if(!dimensions) return;\r\n      \r\n      //Daten filtern\r\n         var filtered = data.filter(a=>a.geo==property);         \r\n            for(var i = 0; i < filtered.length; i ++) {\r\n             var filterAlle = filtered[i].alle; \r\n            }\r\n\r\n            for(var i = 0; i < filtered.length; i ++) {\r\n               var filterBB = filtered[i].bb; \r\n                }\r\n            var valesAlle = entries(filterAlle);\r\n            var valesBB = entries(filterBB);\r\n\r\n      //Sortieren nach Jahreszahl\r\n      const minDate = new Date (min(valesAlle, value => value.key));\r\n      const maxDate = new Date (max(valesAlle, value => value.key));     \r\n\r\n     // console.log(minDate);\r\n     // console.log(maxDate);\r\n       \r\n\r\n      const xScale = scaleTime()\r\n          .domain([minDate - 2.628e+9,maxDate])   \r\n          .range([-1, dimensions.width]) \r\n        \r\n      const yScale =  scaleLinear()\r\n            .domain([0, 100])\r\n             .range([dimensions.height, 0]);\r\n\r\n      \r\n      const yAxis = axisLeft(yScale).tickSize(0);   \r\n      svg\r\n      .select('.y-axis')\r\n      .style('color', 'grey')\r\n      .style('font-size', '14')\r\n      .call(yAxis);\r\n\r\n     const xAxis = axisBottom(xScale)\r\n     svg\r\n      .select(\".x-axis\")\r\n      .join(\".x-axis\")\r\n      .style('transform', `translateY(${dimensions.height}px)`)\r\n      .style('color', 'grey')\r\n      .style('font-size', '14')\r\n      .style('stroke-width', 1)\r\n      .call(xAxis);\r\n\r\n      //Grids\r\n      var grids = svg.select(\"g\").append(\"g\")\r\n         .join(\"g\")\r\n         .attr(\"class\", \"grid\")\r\n         .attr('transform', 'translate(0,' + -dimensions.height + ')')\r\n         .call(axisLeft(yScale)\r\n            .tickSize(-dimensions.width)\r\n            .tickFormat(\"\")\r\n            )\r\n      \r\n      //X-Achsen-Beschriftung\r\n      svg.select(\"text\").join(\"text\")\r\n      .attr(\"text-anchor\", \"end\")\r\n      .attr(\"fill\", \"grey\")\r\n      .attr(\"x\", dimensions.width)\r\n       .attr(\"y\", + dimensions.height/ 8)\r\n       .attr(\"font-weight\", \"bold\")\r\n       .text(\"Jahr\");      \r\n      //Y-Achsen-Beschrifzung\r\n      svg.append(\"text\")\r\n      .attr(\"text-anchor\", \"end\")\r\n      .attr(\"transform\", \"rotate(-90)\")\r\n      .attr(\"fill\", \"grey\")\r\n      .attr(\"y\", - 50)\r\n      .attr(\"x\", 0)\r\n      .text(\"Prozent\")\r\n\r\n    //Lines\r\n      const myLine = line()\r\n      .x((d)=> (xScale(new Date(d.key))))\r\n      .y((d)=> (yScale(d.value)))\r\n      .defined((d)=> d.value != 0)\r\n      .curve(curveCardinal);\r\n    \r\n      //herausfiltern der fehlenden werte\r\n      var filteredAlle = valesAlle.filter(myLine.defined());\r\n      var filteredBB = valesBB.filter(myLine.defined());\r\n      \r\n         var lineAlle1 = svg \r\n         .selectAll(\".newline\")\r\n         .data([filteredAlle])\r\n         .join(\"path\")\r\n         .attr(\"class\", \"newline\")\r\n         .attr(\"d\", (value, index) => myLine(value))\r\n         .transition()\r\n         .attr(\"fill\", \"none\")\r\n         .attr(\"stroke\", colorline)\r\n         .attr(\"stroke-dasharray\", (\"3, 3\"))\r\n        \r\n         var lineAlle2 =    svg\r\n         .selectAll(\".newerline\")\r\n         .data([valesAlle])\r\n         .join(\"path\")\r\n         .attr(\"class\", \"newerline\")\r\n         .attr(\"d\", (value, index) => myLine(value))\r\n         .transition()\r\n         .attr(\"fill\", \"none\")\r\n         .attr(\"stroke\", colorline)\r\n         .attr(\"stroke-width\", \"5\" )\r\n         .attr(\"stroke-linecap\", \"round\")\r\n\r\n         var lineBB1 = svg\r\n         .selectAll(\".newlineBB\")\r\n         .data([filteredBB])\r\n         .join(\"path\")\r\n         .attr(\"class\", \"newlineBB\")\r\n         .attr(\"d\", (value, index) => myLine(value))\r\n         .transition()\r\n         .attr(\"fill\", \"none\")\r\n         .attr(\"stroke\", colorline2)\r\n         .attr(\"stroke-dasharray\", (\"3, 3\"))\r\n         .attr(\"opacity\", \"0\")    \r\n        \r\n         var lineBB2 = svg\r\n         .selectAll(\".newerlineBB\")\r\n         .data([valesBB])\r\n         .join(\"path\")\r\n         .attr(\"class\", \"newerlineBB\")\r\n         .attr(\"d\", (value, index) => myLine(value))\r\n         .transition()\r\n         .attr(\"fill\", \"none\")\r\n         .attr(\"stroke\", colorline2)\r\n         .attr(\"stroke-width\", \"5\" )\r\n         .attr(\"stroke-linecap\", \"round\")\r\n         .attr(\"opacity\", \"0\")\r\n\r\n         if(value == \"BB\"){\r\n            lineBB1.attr(\"opacity\", \"1\")\r\n            lineBB2.attr(\"opacity\", \"1\")\r\n         }\r\n         else{\r\n            console.log(\"noooo\")\r\n         }\r\n    //     } else {\r\n    //        console.log(\"Nooo\")\r\n    //     }\r\n      //Tooltip\r\n      //Tooltip-Elemente\r\n     var focusBox = svg\r\n     .append('g')\r\n     .append('rect')\r\n     .style(\"opacity\", 0)\r\n     .attr(\"width\", 90)\r\n     .attr(\"height\", 30)\r\n     .style(\"fill\", \"#e0e2e5\")\r\n     .style(\"stroke\", \"#e0e2e5\")\r\n     .style(\"stroke\", colorline)\r\n     .style(\"stroke-width\", \"1\" )\r\n     .attr(\"rx\", 4)\r\n           .attr(\"ry\", 4);\r\n\r\n     var focus = svg\r\n     .append('g')\r\n     .append('circle')\r\n     .style(\"fill\", colorline)\r\n     .attr('r', 8.5)\r\n     .style(\"opacity\", 0);\r\n\r\n     var focusText = svg\r\n     .append('g')\r\n     .append('text')\r\n     .style(\"opacity\", 0)\r\n     .attr(\"text-anchor\", \"left\")\r\n     .attr(\"alignment-baseline\", \"middle\")\r\n     .attr(\"fill\", \"#203040\")\r\n     .style(\"font-size\", 13)\r\n     .style(\"font-weight\", \"bold\")\r\n     \r\n     svg\r\n     .append('rect')\r\n     .style(\"fill\", \"none\")\r\n     .style(\"pointer-events\", \"all\")\r\n     .attr('width', dimensions.width)\r\n     .attr('height', dimensions.height)\r\n     .on('mouseover', mouseover)\r\n     .on('mousemove', mousemove)\r\n     .on('mouseout', mouseout); \r\n     \r\n    \r\n      function mouseover() {\r\n         focus.style(\"opacity\", 1)\r\n         focusText.style(\"opacity\",1)\r\n         focusBox.style(\"opacity\",1)\r\n       }\r\n       \r\n       function mousemove() {\r\n         var x0 = xScale.invert(mouse(this)[0]);\r\n         const bisect = bisector(d => new Date(d.key)).left;\r\n         const idx = bisect(filteredAlle, x0, 1);\r\n         const selectedData = filteredAlle[idx];\r\n           \r\n       focus\r\n         .transition()\r\n         .duration(50)\r\n         .attr(\"cx\", xScale(new Date(selectedData.key)))\r\n         .attr(\"cy\", yScale(selectedData.value))\r\n      \r\n         focusText\r\n         .transition()\r\n         .duration(50)\r\n            .text(selectedData.key + \": \" + selectedData.value + \"%\")\r\n            .attr(\"x\", xScale(new Date (selectedData.key)))\r\n            .attr(\"y\", yScale(selectedData.value) - 30)\r\n            \r\n         focusBox\r\n         .transition()\r\n         .duration(50)\r\n            .attr(\"x\", xScale(new Date (selectedData.key))- 15)\r\n            .attr(\"y\", yScale(selectedData.value) - 45)\r\n\r\n         }\r\n       function mouseout() {\r\n         focus.style(\"opacity\", 0)\r\n         focusText.style(\"opacity\", 0)\r\n         focusBox.style(\"opacity\", 0)\r\n       }\r\n\r\n\r\n   }, [data, dimensions, property]);\r\n   return (\r\n         <div ref={wrapperRef}>\r\n            <svg ref={svgRef}>\r\n               <g className='x-axis' />\r\n               <g className=\"y-axis\" />\r\n            </svg>\r\n            </div>\r\n   );\r\n}\r\n\r\nexport default LineCharts;"]},"metadata":{},"sourceType":"module"}