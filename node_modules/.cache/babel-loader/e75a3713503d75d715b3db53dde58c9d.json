{"ast":null,"code":"var _jsxFileName = \"D:\\\\Studium\\\\Bachelor\\\\WebApp\\\\visapp\\\\src\\\\components\\\\charts\\\\BarNutzungsGr\\xFCnde.jsx\";\nimport React, { useRef, useEffect, useState } from \"react\";\nimport { select, line, curveCardinal, axisBottom, axisLeft, scaleTime, scaleLinear, scaleBand, min, max, event, bisector, mouse, ticks, defined } from 'd3';\nimport useResizeObserver from \"./useReziseObserver\";\n\nfunction BarNutzungsGründe({\n  data,\n  property,\n  year\n}) {\n  const svgRef = useRef();\n  const wrapperRef = useRef();\n  const dimensions = useResizeObserver(wrapperRef);\n  useEffect(() => {\n    const svg = select(svgRef.current);\n    if (!dimensions) return; // var filtered = data.filter(a=> (Object.keys(a)) == property);\n\n    const xScale = scaleLinear().domain([0, 100]).range([0, dimensions.width]); //change\n\n    const yScale = scaleBand().domain(data.map((value, index) => value.geo)) //todo\n    .range([20, dimensions.height]) //change\n    .padding(0.1);\n    const xAxis = axisBottom(xScale).ticks(4);\n    svg.style('font-size', '10').style('color', 'grey').select(\".x-axis\").call(xAxis);\n    const yAxis = axisLeft(yScale).tickPadding(5).tickSizeOuter(0).tickSizeInner(0);\n    svg.select(\".y-axis\").style('font-size', '10').style('color', 'grey').call(yAxis);\n    svg.selectAll(\".bar\").data(data).join(\"rect\").attr(\"class\", \"bar\").attr(\"fill\", \"grey\").style(\"margin-top\", \"10px\").attr('x', xScale(0)).attr('y', s => yScale(s.geo)).attr('width', s => xScale(s[property][Object.keys(s[property])[year]])).attr('height', yScale.bandwidth).on(\"mouseenter\", (value, index) => {\n      svg.selectAll(\".tooltip\").data([value]).join(enter => enter.append(\"text\")).attr(\"class\", \"tooltip\").text(value[property][Object.keys(value[property])[year]] + \"%\").attr(\"x\", xScale(value[property][Object.keys(value[property])[year]]) - 30).attr(\"y\", yScale(value.geo) + yScale.bandwidth() / 1.4).attr(\"opacity\", 1).transition().attr(\"fill\", \"white\");\n    }).on(\"mouseleave\", () => svg.select(\".tooltip\").remove().transition()).on(\"click\", clicked);\n\n    function clicked(d, i) {\n      svg.selectAll('rect').attr('fill', \"grey\");\n      select(this).transition().attr(\"fill\", \"#2770bc\");\n    }\n  }, [data, dimensions, property]);\n  return React.createElement(\"div\", {\n    classname: \"chartWrap\",\n    ref: wrapperRef,\n    style: {\n      height: 650,\n      width: 600\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(\"svg\", {\n    ref: svgRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(\"g\", {\n    className: \"x-axis\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }), React.createElement(\"g\", {\n    className: \"y-axis\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  })));\n}\n\nexport default BarNutzungsGründe;","map":{"version":3,"sources":["D:/Studium/Bachelor/WebApp/visapp/src/components/charts/BarNutzungsGründe.jsx"],"names":["React","useRef","useEffect","useState","select","line","curveCardinal","axisBottom","axisLeft","scaleTime","scaleLinear","scaleBand","min","max","event","bisector","mouse","ticks","defined","useResizeObserver","BarNutzungsGründe","data","property","year","svgRef","wrapperRef","dimensions","svg","current","xScale","domain","range","width","yScale","map","value","index","geo","height","padding","xAxis","style","call","yAxis","tickPadding","tickSizeOuter","tickSizeInner","selectAll","join","attr","s","Object","keys","bandwidth","on","enter","append","text","transition","remove","clicked","d","i"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,aAAvB,EAAsCC,UAAtC,EAAkDC,QAAlD,EAA4DC,SAA5D,EAAuEC,WAAvE,EAAoFC,SAApF,EAA+FC,GAA/F,EAAoGC,GAApG,EAAyGC,KAAzG,EAAgHC,QAAhH,EAA0HC,KAA1H,EAAiIC,KAAjI,EAAwIC,OAAxI,QAAsJ,IAAtJ;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;;AAGA,SAASC,iBAAT,CAA2B;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,QAAR;AAAkBC,EAAAA;AAAlB,CAA3B,EAAqD;AAClD,QAAMC,MAAM,GAAGvB,MAAM,EAArB;AACA,QAAMwB,UAAU,GAAGxB,MAAM,EAAzB;AACA,QAAMyB,UAAU,GAAGP,iBAAiB,CAACM,UAAD,CAApC;AAEAvB,EAAAA,SAAS,CAAC,MAAM;AAEf,UAAMyB,GAAG,GAAGvB,MAAM,CAACoB,MAAM,CAACI,OAAR,CAAlB;AAEA,QAAG,CAACF,UAAJ,EAAgB,OAJD,CAKhB;;AAGC,UAAMG,MAAM,GAAGnB,WAAW,GACzBoB,MADc,CACP,CAAC,CAAD,EAAI,GAAJ,CADO,EAEfC,KAFe,CAET,CAAC,CAAD,EAAIL,UAAU,CAACM,KAAf,CAFS,CAAf,CARe,CAUc;;AAG7B,UAAMC,MAAM,GAAItB,SAAS,GACzBmB,MADgB,CACTT,IAAI,CAACa,GAAL,CAAS,CAACC,KAAD,EAAQC,KAAR,KAAkBD,KAAK,CAACE,GAAjC,CADS,EACgC;AADhC,KAEhBN,KAFgB,CAEV,CAAC,EAAD,EAAKL,UAAU,CAACY,MAAhB,CAFU,EAEiB;AAFjB,KAGhBC,OAHgB,CAGR,GAHQ,CAAhB;AAKD,UAAMC,KAAK,GAAGjC,UAAU,CAACsB,MAAD,CAAV,CAAmBZ,KAAnB,CAAyB,CAAzB,CAAd;AACIU,IAAAA,GAAG,CACFc,KADD,CACO,WADP,EACoB,IADpB,EAECA,KAFD,CAEO,OAFP,EAEgB,MAFhB,EAGDrC,MAHC,CAGM,SAHN,EAIDsC,IAJC,CAIIF,KAJJ;AAMF,UAAMG,KAAK,GAAGnC,QAAQ,CAACyB,MAAD,CAAR,CAERW,WAFQ,CAEI,CAFJ,EAGRC,aAHQ,CAGM,CAHN,EAIRC,aAJQ,CAIM,CAJN,CAAd;AAKKnB,IAAAA,GAAG,CACAvB,MADH,CACU,SADV,EAEGqC,KAFH,CAES,WAFT,EAEsB,IAFtB,EAGGA,KAHH,CAGS,OAHT,EAGkB,MAHlB,EAIGC,IAJH,CAIQC,KAJR;AAMEhB,IAAAA,GAAG,CACJoB,SADC,CACS,MADT,EAED1B,IAFC,CAEIA,IAFJ,EAGD2B,IAHC,CAGI,MAHJ,EAIDC,IAJC,CAII,OAJJ,EAIa,KAJb,EAKDA,IALC,CAKI,MALJ,EAKY,MALZ,EAMDR,KANC,CAMK,YANL,EAMmB,MANnB,EAODQ,IAPC,CAOI,GAPJ,EAOSpB,MAAM,CAAC,CAAD,CAPf,EAQDoB,IARC,CAQI,GARJ,EAQUC,CAAD,IAAOjB,MAAM,CAACiB,CAAC,CAACb,GAAH,CARtB,EASDY,IATC,CASI,OATJ,EAScC,CAAD,IAAOrB,MAAM,CAACqB,CAAC,CAAC5B,QAAD,CAAD,CAAY6B,MAAM,CAACC,IAAP,CAAYF,CAAC,CAAC5B,QAAD,CAAb,EAAyBC,IAAzB,CAAZ,CAAD,CAT1B,EAUD0B,IAVC,CAUI,QAVJ,EAUchB,MAAM,CAACoB,SAVrB,EAWDC,EAXC,CAWE,YAXF,EAWgB,CAACnB,KAAD,EAAQC,KAAR,KAAkB;AAClCT,MAAAA,GAAG,CACAoB,SADH,CACa,UADb,EAEG1B,IAFH,CAEQ,CAACc,KAAD,CAFR,EAGGa,IAHH,CAGQO,KAAK,IAAIA,KAAK,CAACC,MAAN,CAAa,MAAb,CAHjB,EAIGP,IAJH,CAIQ,OAJR,EAIiB,SAJjB,EAKGQ,IALH,CAKQtB,KAAK,CAACb,QAAD,CAAL,CAAgB6B,MAAM,CAACC,IAAP,CAAYjB,KAAK,CAACb,QAAD,CAAjB,EAA6BC,IAA7B,CAAhB,IAAsD,GAL9D,EAMG0B,IANH,CAMQ,GANR,EAMapB,MAAM,CAACM,KAAK,CAACb,QAAD,CAAL,CAAgB6B,MAAM,CAACC,IAAP,CAAYjB,KAAK,CAACb,QAAD,CAAjB,EAA6BC,IAA7B,CAAhB,CAAD,CAAN,GAA8D,EAN3E,EAOG0B,IAPH,CAOQ,GAPR,EAOahB,MAAM,CAACE,KAAK,CAACE,GAAP,CAAN,GAAoBJ,MAAM,CAACoB,SAAP,KAAqB,GAPtD,EAQGJ,IARH,CAQQ,SARR,EAQmB,CARnB,EASGS,UATH,GAUGT,IAVH,CAUQ,MAVR,EAUgB,OAVhB;AAWC,KAvBD,EAwBCK,EAxBD,CAwBI,YAxBJ,EAwBkB,MAChB3B,GAAG,CAACvB,MAAJ,CAAW,UAAX,EAAuBuD,MAAvB,GACCD,UADD,EAzBF,EA4BCJ,EA5BD,CA4BI,OA5BJ,EA4BaM,OA5Bb;;AA8BA,aAASA,OAAT,CAAiBC,CAAjB,EAAmBC,CAAnB,EAAsB;AACpBnC,MAAAA,GAAG,CAACoB,SAAJ,CAAc,MAAd,EAAsBE,IAAtB,CAA2B,MAA3B,EAAmC,MAAnC;AACA7C,MAAAA,MAAM,CAAC,IAAD,CAAN,CAAasD,UAAb,GAA0BT,IAA1B,CAA+B,MAA/B,EAAuC,SAAvC;AACD;AAEZ,GAvEW,EAuET,CAAC5B,IAAD,EAAOK,UAAP,EAAmBJ,QAAnB,CAvES,CAAT;AAwEH,SACC;AAAK,IAAA,SAAS,EAAC,WAAf;AAA2B,IAAA,GAAG,EAAEG,UAAhC;AAA4C,IAAA,KAAK,EAAE;AAACa,MAAAA,MAAM,EAAE,GAAT;AAAcN,MAAAA,KAAK,EAAE;AAArB,KAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG;AAAK,IAAA,GAAG,EAAER,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAG,IAAA,SAAS,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADH,CADD;AAQC;;AAED,eAAeJ,iBAAf","sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\r\nimport { select, line, curveCardinal, axisBottom, axisLeft, scaleTime, scaleLinear, scaleBand, min, max, event, bisector, mouse, ticks, defined} from 'd3';\r\nimport useResizeObserver from \"./useReziseObserver\";\r\n\r\n\r\nfunction BarNutzungsGründe({ data, property, year }) {\r\n   const svgRef = useRef();\r\n   const wrapperRef = useRef();\r\n   const dimensions = useResizeObserver(wrapperRef);\r\n  \r\n   useEffect(() => {\r\n\r\n    const svg = select(svgRef.current);\r\n     \r\n    if(!dimensions) return;\r\n   // var filtered = data.filter(a=> (Object.keys(a)) == property);\r\n\r\n\r\n    const xScale = scaleLinear()\r\n    .domain([0, 100])\r\n   .range([0, dimensions.width]) //change\r\n   \r\n  \r\n    const yScale =  scaleBand()\r\n   .domain(data.map((value, index) => value.geo))   //todo\r\n   .range([20, dimensions.height ])  //change\r\n   .padding(0.1)\r\n\r\n   const xAxis = axisBottom(xScale).ticks(4);\r\n       svg\r\n       .style('font-size', '10')\r\n       .style('color', 'grey')\r\n     .select(\".x-axis\")\r\n     .call(xAxis);\r\n    \r\n     const yAxis = axisLeft(yScale)\r\n           \r\n          .tickPadding(5)\r\n          .tickSizeOuter(0)\r\n          .tickSizeInner(0);\r\n          svg\r\n            .select(\".y-axis\")\r\n            .style('font-size', '10')\r\n            .style('color', 'grey')\r\n            .call(yAxis)\r\n          \r\n            svg\r\n          .selectAll(\".bar\")\r\n          .data(data)\r\n          .join(\"rect\")\r\n          .attr(\"class\", \"bar\")\r\n          .attr(\"fill\", \"grey\")\r\n          .style(\"margin-top\", \"10px\")\r\n          .attr('x', xScale(0))\r\n          .attr('y', (s) => yScale(s.geo))\r\n          .attr('width', (s) => xScale(s[property][Object.keys(s[property])[year]]))\r\n          .attr('height', yScale.bandwidth)\r\n          .on(\"mouseenter\", (value, index) => {\r\n            svg\r\n              .selectAll(\".tooltip\")\r\n              .data([value])\r\n              .join(enter => enter.append(\"text\"))\r\n              .attr(\"class\", \"tooltip\")\r\n              .text(value[property][Object.keys(value[property])[year]] + \"%\")\r\n              .attr(\"x\", xScale(value[property][Object.keys(value[property])[year]]) - 30)\r\n              .attr(\"y\", yScale(value.geo) + yScale.bandwidth() / 1.4)\r\n              .attr(\"opacity\", 1)\r\n              .transition()\r\n              .attr(\"fill\", \"white\")\r\n            })\r\n            .on(\"mouseleave\", () => \r\n              svg.select(\".tooltip\").remove()\r\n              .transition() )\r\n            \r\n            .on(\"click\", clicked)\r\n\r\n            function clicked(d,i) {\r\n              svg.selectAll('rect').attr('fill', \"grey\");\r\n              select(this).transition().attr(\"fill\", \"#2770bc\");\r\n            }\r\n   \r\n}, [data, dimensions, property]);\r\nreturn (\r\n <div classname=\"chartWrap\" ref={wrapperRef} style={{height: 650, width: 600}} >\r\n    <svg ref={svgRef}>\r\n      <g className=\"x-axis\" />\r\n      <g className=\"y-axis\" />\r\n    </svg>\r\n  </div>\r\n);\r\n}\r\n\r\nexport default BarNutzungsGründe;"]},"metadata":{},"sourceType":"module"}