{"ast":null,"code":"var _jsxFileName = \"D:\\\\Studium\\\\Bachelor\\\\WebApp\\\\visapp\\\\src\\\\components\\\\charts\\\\LineChart.jsx\";\nimport React, { useRef, useEffect } from \"react\";\nimport { select, line, curveCardinal, axisBottom, axisLeft, scaleTime, scaleLinear, min, max, bisector, mouse, entries } from 'd3';\nimport '../../styles/charts.css';\nimport useResizeObserver from './useReziseObserver';\n\nfunction LineCharts({\n  data,\n  property,\n  colorline\n}) {\n  const svgRef = useRef();\n  const wrapperRef = useRef();\n  const dimensions = useResizeObserver(wrapperRef);\n  useEffect(() => {\n    const svg = select(svgRef.current);\n    var filterme;\n    if (!dimensions) return; //Daten filtern\n\n    var filtered = data.filter(a => a.geo == property);\n\n    for (var i = 0; i < filtered.length; i++) {\n      var filterme = filtered[i].time;\n    }\n\n    var vales = entries(filterme); //Sortieren nach Jahreszahl\n\n    const minDate = new Date(min(vales, value => value.key));\n    const maxDate = new Date(max(vales, value => value.key)); // console.log(minDate);\n    // console.log(maxDate);\n\n    const xScale = scaleTime().domain([minDate - 2.628e+9, maxDate]).range([-1, dimensions.width]);\n    const yScale = scaleLinear().domain([0, 100]).range([dimensions.height, 0]);\n    const yAxis = axisLeft(yScale).tickSize(0);\n    svg.select('.y-axis').style('color', 'grey').style('font-size', '14').call(yAxis);\n    const xAxis = axisBottom(xScale);\n    svg.select(\".x-axis\").join(\".x-axis\").style('transform', `translateY(${dimensions.height}px)`).style('color', 'grey').style('font-size', '14').style('stroke-width', 1).call(xAxis); //Grids\n\n    var grids = svg.select(\"g\").append(\"g\").join(\"g\").attr(\"class\", \"grid\").attr('transform', 'translate(0,' + -dimensions.height + ')').call(axisLeft(yScale).tickSize(-dimensions.width).tickFormat(\"\")); //X-Achsen-Beschriftung\n\n    svg.select(\"text\").join(\"text\").attr(\"text-anchor\", \"end\").attr(\"fill\", \"grey\").attr(\"x\", dimensions.width).attr(\"y\", dimensions.height + 50).text(\"Jahr\"); //Y-Achsen-Beschrifzung\n\n    svg.append(\"text\").attr(\"text-anchor\", \"end\").attr(\"transform\", \"rotate(-90)\").attr(\"fill\", \"grey\").attr(\"y\", -50).attr(\"x\", 0).text(\"Prozent\"); //Tooltip-Elemente\n\n    var focusBox = svg.append('g').append('rect').style(\"opacity\", 0).attr(\"width\", 90).attr(\"height\", 30).style(\"fill\", \"#e0e2e5\").style(\"stroke\", \"#e0e2e5\").style(\"stroke\", colorline).style(\"stroke-width\", \"1\").attr(\"rx\", 4).attr(\"ry\", 4);\n    var focus = svg.append('g').append('circle').style(\"fill\", colorline).attr('r', 8.5).style(\"opacity\", 0);\n    var focusText = svg.append('g').append('text').style(\"opacity\", 0).attr(\"text-anchor\", \"left\").attr(\"alignment-baseline\", \"middle\").attr(\"fill\", \"#203040\").style(\"font-size\", 13).style(\"font-weight\", \"bold\");\n    svg.append('rect').style(\"fill\", \"none\").style(\"pointer-events\", \"all\").attr('width', dimensions.width).attr('height', dimensions.height).on('mouseover', mouseover).on('mousemove', mousemove).on('mouseout', mouseout); //Lines\n\n    const myLine = line().x(d => xScale(new Date(d.key))).y(d => yScale(d.value)).defined(d => d.value != 0).curve(curveCardinal); //herausfiltern der fehlenden werte\n\n    var filteredData = vales.filter(myLine.defined());\n    svg.selectAll(\".newline\").data([filteredData]).join(\"path\").attr(\"class\", \"newline\").attr(\"d\", (value, index) => myLine(value)).transition().attr(\"fill\", \"none\").attr(\"stroke\", colorline).attr(\"stroke-dasharray\", \"3, 3\");\n    svg.selectAll(\".newerline\").data([vales]).join(\"path\").attr(\"class\", \"newerline\").attr(\"d\", (value, index) => myLine(value)).transition().attr(\"fill\", \"none\").attr(\"stroke\", colorline).attr(\"stroke-width\", \"5\").attr(\"stroke-linecap\", \"round\"); //Tooltip\n\n    function mouseover() {\n      focus.style(\"opacity\", 1);\n      focusText.style(\"opacity\", 1);\n      focusBox.style(\"opacity\", 1);\n    }\n\n    function mousemove() {\n      var x0 = xScale.invert(mouse(this)[0]);\n      const bisect = bisector(d => new Date(d.key)).left;\n      const idx = bisect(filteredData, x0, 1);\n      const selectedData = filteredData[idx];\n      focus.transition().duration(50).attr(\"cx\", xScale(new Date(selectedData.key))).attr(\"cy\", yScale(selectedData.value));\n      focusText.transition().duration(50).text(selectedData.key + \": \" + selectedData.value + \"%\").attr(\"x\", xScale(new Date(selectedData.key))).attr(\"y\", yScale(selectedData.value) - 30);\n      focusBox.transition().duration(50).attr(\"x\", xScale(new Date(selectedData.key)) - 15).attr(\"y\", yScale(selectedData.value) - 45);\n    }\n\n    function mouseout() {\n      focus.style(\"opacity\", 0);\n      focusText.style(\"opacity\", 0);\n      focusBox.style(\"opacity\", 0);\n    }\n  }, [data, dimensions, property]);\n  return React.createElement(\"div\", {\n    ref: wrapperRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204\n    },\n    __self: this\n  }, React.createElement(\"svg\", {\n    ref: svgRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205\n    },\n    __self: this\n  }, React.createElement(\"g\", {\n    className: \"x-axis\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206\n    },\n    __self: this\n  }), React.createElement(\"g\", {\n    className: \"y-axis\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207\n    },\n    __self: this\n  })));\n}\n\nexport default LineCharts;","map":{"version":3,"sources":["D:/Studium/Bachelor/WebApp/visapp/src/components/charts/LineChart.jsx"],"names":["React","useRef","useEffect","select","line","curveCardinal","axisBottom","axisLeft","scaleTime","scaleLinear","min","max","bisector","mouse","entries","useResizeObserver","LineCharts","data","property","colorline","svgRef","wrapperRef","dimensions","svg","current","filterme","filtered","filter","a","geo","i","length","time","vales","minDate","Date","value","key","maxDate","xScale","domain","range","width","yScale","height","yAxis","tickSize","style","call","xAxis","join","grids","append","attr","tickFormat","text","focusBox","focus","focusText","on","mouseover","mousemove","mouseout","myLine","x","d","y","defined","curve","filteredData","selectAll","index","transition","x0","invert","bisect","left","idx","selectedData","duration"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect} from \"react\";\r\nimport { select, line, curveCardinal, axisBottom, axisLeft, scaleTime, scaleLinear, min, max, bisector, mouse, entries} from 'd3';\r\nimport '../../styles/charts.css'\r\nimport useResizeObserver from './useReziseObserver'\r\n\r\nfunction LineCharts({ data, property, colorline}) {\r\n   const svgRef = useRef();\r\n   const wrapperRef = useRef();\r\n   const dimensions = useResizeObserver(wrapperRef);\r\n   useEffect(() => {\r\n    \r\n      const svg = select(svgRef.current);\r\n      var filterme;\r\n\r\n         if(!dimensions) return;\r\n      \r\n      //Daten filtern\r\n         var filtered = data.filter(a=>a.geo==property);\r\n         \r\n          for(var i = 0; i < filtered.length; i ++) {\r\n           var filterme = filtered[i].time; \r\n            }\r\n\r\n            var vales = entries(filterme);\r\n\r\n      //Sortieren nach Jahreszahl\r\n      const minDate = new Date (min(vales, value => value.key));\r\n      const maxDate = new Date (max(vales, value => value.key));     \r\n\r\n     // console.log(minDate);\r\n     // console.log(maxDate);\r\n       \r\n\r\n      const xScale = scaleTime()\r\n          .domain([minDate - 2.628e+9,maxDate])   \r\n          .range([-1, dimensions.width]) \r\n        \r\n      const yScale =  scaleLinear()\r\n            .domain([0, 100])\r\n             .range([dimensions.height, 0]);\r\n\r\n      \r\n      const yAxis = axisLeft(yScale).tickSize(0);   \r\n      svg\r\n      .select('.y-axis')\r\n      .style('color', 'grey')\r\n      .style('font-size', '14')\r\n      .call(yAxis);\r\n\r\n     const xAxis = axisBottom(xScale)\r\n     svg\r\n      .select(\".x-axis\")\r\n      .join(\".x-axis\")\r\n      .style('transform', `translateY(${dimensions.height}px)`)\r\n      .style('color', 'grey')\r\n      .style('font-size', '14')\r\n      .style('stroke-width', 1)\r\n      .call(xAxis);\r\n\r\n      //Grids\r\n      var grids = svg.select(\"g\").append(\"g\")\r\n         .join(\"g\")\r\n         .attr(\"class\", \"grid\")\r\n         .attr('transform', 'translate(0,' + -dimensions.height + ')')\r\n         .call(axisLeft(yScale)\r\n            .tickSize(-dimensions.width)\r\n            .tickFormat(\"\")\r\n            )\r\n      \r\n      //X-Achsen-Beschriftung\r\n      svg.select(\"text\").join(\"text\")\r\n      .attr(\"text-anchor\", \"end\")\r\n      .attr(\"fill\", \"grey\")\r\n      .attr(\"x\", dimensions.width)\r\n       .attr(\"y\", dimensions.height  + 50)\r\n       .text(\"Jahr\");      \r\n      //Y-Achsen-Beschrifzung\r\n      svg.append(\"text\")\r\n      .attr(\"text-anchor\", \"end\")\r\n      .attr(\"transform\", \"rotate(-90)\")\r\n      .attr(\"fill\", \"grey\")\r\n      .attr(\"y\", - 50)\r\n      .attr(\"x\", 0)\r\n      .text(\"Prozent\")\r\n\r\n     //Tooltip-Elemente\r\n     var focusBox = svg\r\n      .append('g')\r\n      .append('rect')\r\n      .style(\"opacity\", 0)\r\n      .attr(\"width\", 90)\r\n      .attr(\"height\", 30)\r\n      .style(\"fill\", \"#e0e2e5\")\r\n      .style(\"stroke\", \"#e0e2e5\")\r\n      .style(\"stroke\", colorline)\r\n      .style(\"stroke-width\", \"1\" )\r\n      .attr(\"rx\", 4)\r\n            .attr(\"ry\", 4);\r\n\r\n      var focus = svg\r\n      .append('g')\r\n      .append('circle')\r\n      .style(\"fill\", colorline)\r\n      .attr('r', 8.5)\r\n      .style(\"opacity\", 0);\r\n\r\n      var focusText = svg\r\n      .append('g')\r\n      .append('text')\r\n      .style(\"opacity\", 0)\r\n      .attr(\"text-anchor\", \"left\")\r\n      .attr(\"alignment-baseline\", \"middle\")\r\n      .attr(\"fill\", \"#203040\")\r\n      .style(\"font-size\", 13)\r\n      .style(\"font-weight\", \"bold\")\r\n      \r\n      svg\r\n      .append('rect')\r\n      .style(\"fill\", \"none\")\r\n      .style(\"pointer-events\", \"all\")\r\n      .attr('width', dimensions.width)\r\n      .attr('height', dimensions.height)\r\n      .on('mouseover', mouseover)\r\n      .on('mousemove', mousemove)\r\n      .on('mouseout', mouseout); \r\n      \r\n     \r\n    //Lines\r\n      const myLine = line()\r\n      .x((d)=> (xScale(new Date(d.key))))\r\n      .y((d)=> (yScale(d.value)))\r\n      .defined((d)=> d.value != 0)\r\n      .curve(curveCardinal);\r\n    \r\n      //herausfiltern der fehlenden werte\r\n      var filteredData = vales.filter(myLine.defined());\r\n      \r\n      svg\r\n         .selectAll(\".newline\")\r\n         .data([filteredData])\r\n         .join(\"path\")\r\n         .attr(\"class\", \"newline\")\r\n         .attr(\"d\", (value, index) => myLine(value))\r\n         .transition()\r\n         .attr(\"fill\", \"none\")\r\n         .attr(\"stroke\", colorline)\r\n         .attr(\"stroke-dasharray\", (\"3, 3\"))\r\n        \r\n         svg\r\n         .selectAll(\".newerline\")\r\n         .data([vales])\r\n         .join(\"path\")\r\n         .attr(\"class\", \"newerline\")\r\n         .attr(\"d\", (value, index) => myLine(value))\r\n         .transition()\r\n         .attr(\"fill\", \"none\")\r\n         .attr(\"stroke\", colorline)\r\n         .attr(\"stroke-width\", \"5\" )\r\n         .attr(\"stroke-linecap\", \"round\")\r\n\r\n\r\n      //Tooltip\r\n      function mouseover() {\r\n         focus.style(\"opacity\", 1)\r\n         focusText.style(\"opacity\",1)\r\n         focusBox.style(\"opacity\",1)\r\n       }\r\n       \r\n       function mousemove() {\r\n         var x0 = xScale.invert(mouse(this)[0]);\r\n         const bisect = bisector(d => new Date(d.key)).left;\r\n         const idx = bisect(filteredData, x0, 1);\r\n         const selectedData = filteredData[idx];\r\n           \r\n       focus\r\n         .transition()\r\n         .duration(50)\r\n         .attr(\"cx\", xScale(new Date(selectedData.key)))\r\n         .attr(\"cy\", yScale(selectedData.value))\r\n      \r\n         focusText\r\n         .transition()\r\n         .duration(50)\r\n            .text(selectedData.key + \": \" + selectedData.value + \"%\")\r\n            .attr(\"x\", xScale(new Date (selectedData.key)))\r\n            .attr(\"y\", yScale(selectedData.value) - 30)\r\n            \r\n         focusBox\r\n         .transition()\r\n         .duration(50)\r\n            .attr(\"x\", xScale(new Date (selectedData.key))- 15)\r\n            .attr(\"y\", yScale(selectedData.value) - 45)\r\n\r\n         }\r\n       function mouseout() {\r\n         focus.style(\"opacity\", 0)\r\n         focusText.style(\"opacity\", 0)\r\n         focusBox.style(\"opacity\", 0)\r\n       }\r\n\r\n\r\n   }, [data, dimensions, property]);\r\n   return (\r\n         <div ref={wrapperRef}>\r\n            <svg ref={svgRef}>\r\n               <g className='x-axis' />\r\n               <g className=\"y-axis\" />\r\n            </svg>\r\n            </div>\r\n   );\r\n}\r\n\r\nexport default LineCharts;"]},"metadata":{},"sourceType":"module"}